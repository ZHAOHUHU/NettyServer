// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.v0.23.proto

package shenzhen.teamway.protobuf;

public final class MessageProtobuf {
  private MessageProtobuf() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * 消息类型
   * 消息范围：20001 ~ 30000
   * 从站端发送的消息为单数
   * 从主站发送的消息为双数
   * 厂家私有消息范围： 50001 ~ 60000
   * </pre>
   *
   * Protobuf enum {@code CommandType}
   */
  public enum CommandType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CommandTypeDEFAULT = 0;</code>
     */
    CommandTypeDEFAULT(0),
    /**
     * <pre>
     * 注册
     * </pre>
     *
     * <code>REGISTER = 20001;</code>
     */
    REGISTER(20001),
    /**
     * <code>REGISTER_RSP = 20002;</code>
     */
    REGISTER_RSP(20002),
    /**
     * <pre>
     * 心跳
     * </pre>
     *
     * <code>HEARTBEAT = 20003;</code>
     */
    HEARTBEAT(20003),
    /**
     * <code>HEARTBEAT_RSP = 20004;</code>
     */
    HEARTBEAT_RSP(20004),
    /**
     * <pre>
     * 上报设备列表
     * </pre>
     *
     * <code>CATALOG = 20005;</code>
     */
    CATALOG(20005),
    /**
     * <code>CATALOG_RSP = 20006;</code>
     */
    CATALOG_RSP(20006),
    /**
     * <pre>
     * 上报采集值
     * </pre>
     *
     * <code>REPORT_ENVDATA = 20011;</code>
     */
    REPORT_ENVDATA(20011),
    /**
     * <code>REPORT_ENVDATA_RSP = 20012;</code>
     */
    REPORT_ENVDATA_RSP(20012),
    /**
     * <pre>
     * 上报告警
     * </pre>
     *
     * <code>REPORT_ALARM = 20013;</code>
     */
    REPORT_ALARM(20013),
    /**
     * <code>REPORT_ALARM_RSP = 20014;</code>
     */
    REPORT_ALARM_RSP(20014),
    /**
     * <pre>
     * 控制设备
     * </pre>
     *
     * <code>CONTROL = 20016;</code>
     */
    CONTROL(20016),
    /**
     * <code>CONTROL_RSP = 20017;</code>
     */
    CONTROL_RSP(20017),
    /**
     * <pre>
     * 请求对时，站端请求时间。
     * </pre>
     *
     * <code>SYSTEM_TIME = 20019;</code>
     */
    SYSTEM_TIME(20019),
    /**
     * <code>SYSTEM_TIME_RSP = 20020;</code>
     */
    SYSTEM_TIME_RSP(20020),
    /**
     * <pre>
     * 设备状态上报 站端定时将风机、空调等设备状态上报
     * </pre>
     *
     * <code>DEVICE_STATE = 20021;</code>
     */
    DEVICE_STATE(20021),
    /**
     * <code>DEVICE_STATE_RSP = 20022;</code>
     */
    DEVICE_STATE_RSP(20022),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>CommandTypeDEFAULT = 0;</code>
     */
    public static final int CommandTypeDEFAULT_VALUE = 0;
    /**
     * <pre>
     * 注册
     * </pre>
     *
     * <code>REGISTER = 20001;</code>
     */
    public static final int REGISTER_VALUE = 20001;
    /**
     * <code>REGISTER_RSP = 20002;</code>
     */
    public static final int REGISTER_RSP_VALUE = 20002;
    /**
     * <pre>
     * 心跳
     * </pre>
     *
     * <code>HEARTBEAT = 20003;</code>
     */
    public static final int HEARTBEAT_VALUE = 20003;
    /**
     * <code>HEARTBEAT_RSP = 20004;</code>
     */
    public static final int HEARTBEAT_RSP_VALUE = 20004;
    /**
     * <pre>
     * 上报设备列表
     * </pre>
     *
     * <code>CATALOG = 20005;</code>
     */
    public static final int CATALOG_VALUE = 20005;
    /**
     * <code>CATALOG_RSP = 20006;</code>
     */
    public static final int CATALOG_RSP_VALUE = 20006;
    /**
     * <pre>
     * 上报采集值
     * </pre>
     *
     * <code>REPORT_ENVDATA = 20011;</code>
     */
    public static final int REPORT_ENVDATA_VALUE = 20011;
    /**
     * <code>REPORT_ENVDATA_RSP = 20012;</code>
     */
    public static final int REPORT_ENVDATA_RSP_VALUE = 20012;
    /**
     * <pre>
     * 上报告警
     * </pre>
     *
     * <code>REPORT_ALARM = 20013;</code>
     */
    public static final int REPORT_ALARM_VALUE = 20013;
    /**
     * <code>REPORT_ALARM_RSP = 20014;</code>
     */
    public static final int REPORT_ALARM_RSP_VALUE = 20014;
    /**
     * <pre>
     * 控制设备
     * </pre>
     *
     * <code>CONTROL = 20016;</code>
     */
    public static final int CONTROL_VALUE = 20016;
    /**
     * <code>CONTROL_RSP = 20017;</code>
     */
    public static final int CONTROL_RSP_VALUE = 20017;
    /**
     * <pre>
     * 请求对时，站端请求时间。
     * </pre>
     *
     * <code>SYSTEM_TIME = 20019;</code>
     */
    public static final int SYSTEM_TIME_VALUE = 20019;
    /**
     * <code>SYSTEM_TIME_RSP = 20020;</code>
     */
    public static final int SYSTEM_TIME_RSP_VALUE = 20020;
    /**
     * <pre>
     * 设备状态上报 站端定时将风机、空调等设备状态上报
     * </pre>
     *
     * <code>DEVICE_STATE = 20021;</code>
     */
    public static final int DEVICE_STATE_VALUE = 20021;
    /**
     * <code>DEVICE_STATE_RSP = 20022;</code>
     */
    public static final int DEVICE_STATE_RSP_VALUE = 20022;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static CommandType valueOf(int value) {
      return forNumber(value);
    }

    public static CommandType forNumber(int value) {
      switch (value) {
        case 0: return CommandTypeDEFAULT;
        case 20001: return REGISTER;
        case 20002: return REGISTER_RSP;
        case 20003: return HEARTBEAT;
        case 20004: return HEARTBEAT_RSP;
        case 20005: return CATALOG;
        case 20006: return CATALOG_RSP;
        case 20011: return REPORT_ENVDATA;
        case 20012: return REPORT_ENVDATA_RSP;
        case 20013: return REPORT_ALARM;
        case 20014: return REPORT_ALARM_RSP;
        case 20016: return CONTROL;
        case 20017: return CONTROL_RSP;
        case 20019: return SYSTEM_TIME;
        case 20020: return SYSTEM_TIME_RSP;
        case 20021: return DEVICE_STATE;
        case 20022: return DEVICE_STATE_RSP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CommandType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CommandType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CommandType>() {
            public CommandType findValueByNumber(int number) {
              return CommandType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return MessageProtobuf.getDescriptor().getEnumTypes().get(0);
    }

    private static final CommandType[] VALUES = values();

    public static CommandType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CommandType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:CommandType)
  }

  /**
   * <pre>
   * 设备类型
   * </pre>
   *
   * Protobuf enum {@code DevType}
   */
  public enum DevType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DEVTYPEDEFAULT = 0;</code>
     */
    DEVTYPEDEFAULT(0),
    /**
     * <pre>
     * 视频设备
     * </pre>
     *
     * <code>VIDEO = 1;</code>
     */
    VIDEO(1),
    /**
     * <pre>
     * 环境采集设备
     * </pre>
     *
     * <code>ENV = 2;</code>
     */
    ENV(2),
    /**
     * <pre>
     * 辅助设备
     * </pre>
     *
     * <code>ASSIST = 3;</code>
     */
    ASSIST(3),
    /**
     * <pre>
     * 网络及网络安全设备
     * </pre>
     *
     * <code>NETWORK = 4;</code>
     */
    NETWORK(4),
    /**
     * <pre>
     * 服务器及工作站
     * </pre>
     *
     * <code>SERVER = 5;</code>
     */
    SERVER(5),
    /**
     * <pre>
     * 存储设备
     * </pre>
     *
     * <code>STORAGE = 7;</code>
     */
    STORAGE(7),
    /**
     * <pre>
     * 一次设备
     * </pre>
     *
     * <code>PRIMARY_EQUIPMENT = 8;</code>
     */
    PRIMARY_EQUIPMENT(8),
    /**
     * <pre>
     * 监控区域
     * </pre>
     *
     * <code>REGION = 9;</code>
     */
    REGION(9),
    /**
     * <pre>
     * 间隔
     * </pre>
     *
     * <code>SPACE = 10;</code>
     */
    SPACE(10),
    /**
     * <code>OTHER = 99;</code>
     */
    OTHER(99),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>DEVTYPEDEFAULT = 0;</code>
     */
    public static final int DEVTYPEDEFAULT_VALUE = 0;
    /**
     * <pre>
     * 视频设备
     * </pre>
     *
     * <code>VIDEO = 1;</code>
     */
    public static final int VIDEO_VALUE = 1;
    /**
     * <pre>
     * 环境采集设备
     * </pre>
     *
     * <code>ENV = 2;</code>
     */
    public static final int ENV_VALUE = 2;
    /**
     * <pre>
     * 辅助设备
     * </pre>
     *
     * <code>ASSIST = 3;</code>
     */
    public static final int ASSIST_VALUE = 3;
    /**
     * <pre>
     * 网络及网络安全设备
     * </pre>
     *
     * <code>NETWORK = 4;</code>
     */
    public static final int NETWORK_VALUE = 4;
    /**
     * <pre>
     * 服务器及工作站
     * </pre>
     *
     * <code>SERVER = 5;</code>
     */
    public static final int SERVER_VALUE = 5;
    /**
     * <pre>
     * 存储设备
     * </pre>
     *
     * <code>STORAGE = 7;</code>
     */
    public static final int STORAGE_VALUE = 7;
    /**
     * <pre>
     * 一次设备
     * </pre>
     *
     * <code>PRIMARY_EQUIPMENT = 8;</code>
     */
    public static final int PRIMARY_EQUIPMENT_VALUE = 8;
    /**
     * <pre>
     * 监控区域
     * </pre>
     *
     * <code>REGION = 9;</code>
     */
    public static final int REGION_VALUE = 9;
    /**
     * <pre>
     * 间隔
     * </pre>
     *
     * <code>SPACE = 10;</code>
     */
    public static final int SPACE_VALUE = 10;
    /**
     * <code>OTHER = 99;</code>
     */
    public static final int OTHER_VALUE = 99;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static DevType valueOf(int value) {
      return forNumber(value);
    }

    public static DevType forNumber(int value) {
      switch (value) {
        case 0: return DEVTYPEDEFAULT;
        case 1: return VIDEO;
        case 2: return ENV;
        case 3: return ASSIST;
        case 4: return NETWORK;
        case 5: return SERVER;
        case 7: return STORAGE;
        case 8: return PRIMARY_EQUIPMENT;
        case 9: return REGION;
        case 10: return SPACE;
        case 99: return OTHER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DevType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DevType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DevType>() {
            public DevType findValueByNumber(int number) {
              return DevType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return MessageProtobuf.getDescriptor().getEnumTypes().get(1);
    }

    private static final DevType[] VALUES = values();

    public static DevType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DevType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DevType)
  }

  /**
   * <pre>
   * 环境设备子类型
   * </pre>
   *
   * Protobuf enum {@code EnvDeviceName}
   */
  public enum EnvDeviceName
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ENVDEVNAMEDEFAULT = 0;</code>
     */
    ENVDEVNAMEDEFAULT(0),
    /**
     * <pre>
     * 湿度
     * </pre>
     *
     * <code>TEMPERATURE = 1;</code>
     */
    TEMPERATURE(1),
    /**
     * <pre>
     * 环境温度
     * </pre>
     *
     * <code>HUMIDITY = 2;</code>
     */
    HUMIDITY(2),
    /**
     * <pre>
     * 风速
     * </pre>
     *
     * <code>WINDSPEED = 3;</code>
     */
    WINDSPEED(3),
    /**
     * <pre>
     * 水浸
     * </pre>
     *
     * <code>WATER_DETECT = 4;</code>
     */
    WATER_DETECT(4),
    /**
     * <pre>
     * 红外
     * </pre>
     *
     * <code>INFRARED = 5;</code>
     */
    INFRARED(5),
    /**
     * <pre>
     * 门禁
     * </pre>
     *
     * <code>DOOR_ACCESS = 6;</code>
     */
    DOOR_ACCESS(6),
    /**
     * <pre>
     * 烟感
     * </pre>
     *
     * <code>SMOKE = 8;</code>
     */
    SMOKE(8),
    /**
     * <pre>
     * 通风设备
     * </pre>
     *
     * <code>FAN = 10;</code>
     */
    FAN(10),
    /**
     * <pre>
     * 电子围栏
     * </pre>
     *
     * <code>ELECTRONIC_FENCE = 14;</code>
     */
    ELECTRONIC_FENCE(14),
    /**
     * <pre>
     * 火灾报警系统
     * </pre>
     *
     * <code>FIRE = 15;</code>
     */
    FIRE(15),
    /**
     * <pre>
     * 局放
     * </pre>
     *
     * <code>PARTIAL_DISCHARGE = 16;</code>
     */
    PARTIAL_DISCHARGE(16),
    /**
     * <pre>
     * 六氟化硫
     * </pre>
     *
     * <code>SF6 = 21;</code>
     */
    SF6(21),
    /**
     * <pre>
     * 含氧量
     * </pre>
     *
     * <code>O2 = 22;</code>
     */
    O2(22),
    /**
     * <pre>
     * 噪声
     * </pre>
     *
     * <code>NOISE = 23;</code>
     */
    NOISE(23),
    /**
     * <pre>
     * 震动
     * </pre>
     *
     * <code>SHOCK = 24;</code>
     */
    SHOCK(24),
    /**
     * <pre>
     * 设备连接处温度、设备温度
     * </pre>
     *
     * <code>CONNECT_TEMPERATURE = 25;</code>
     */
    CONNECT_TEMPERATURE(25),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ENVDEVNAMEDEFAULT = 0;</code>
     */
    public static final int ENVDEVNAMEDEFAULT_VALUE = 0;
    /**
     * <pre>
     * 湿度
     * </pre>
     *
     * <code>TEMPERATURE = 1;</code>
     */
    public static final int TEMPERATURE_VALUE = 1;
    /**
     * <pre>
     * 环境温度
     * </pre>
     *
     * <code>HUMIDITY = 2;</code>
     */
    public static final int HUMIDITY_VALUE = 2;
    /**
     * <pre>
     * 风速
     * </pre>
     *
     * <code>WINDSPEED = 3;</code>
     */
    public static final int WINDSPEED_VALUE = 3;
    /**
     * <pre>
     * 水浸
     * </pre>
     *
     * <code>WATER_DETECT = 4;</code>
     */
    public static final int WATER_DETECT_VALUE = 4;
    /**
     * <pre>
     * 红外
     * </pre>
     *
     * <code>INFRARED = 5;</code>
     */
    public static final int INFRARED_VALUE = 5;
    /**
     * <pre>
     * 门禁
     * </pre>
     *
     * <code>DOOR_ACCESS = 6;</code>
     */
    public static final int DOOR_ACCESS_VALUE = 6;
    /**
     * <pre>
     * 烟感
     * </pre>
     *
     * <code>SMOKE = 8;</code>
     */
    public static final int SMOKE_VALUE = 8;
    /**
     * <pre>
     * 通风设备
     * </pre>
     *
     * <code>FAN = 10;</code>
     */
    public static final int FAN_VALUE = 10;
    /**
     * <pre>
     * 电子围栏
     * </pre>
     *
     * <code>ELECTRONIC_FENCE = 14;</code>
     */
    public static final int ELECTRONIC_FENCE_VALUE = 14;
    /**
     * <pre>
     * 火灾报警系统
     * </pre>
     *
     * <code>FIRE = 15;</code>
     */
    public static final int FIRE_VALUE = 15;
    /**
     * <pre>
     * 局放
     * </pre>
     *
     * <code>PARTIAL_DISCHARGE = 16;</code>
     */
    public static final int PARTIAL_DISCHARGE_VALUE = 16;
    /**
     * <pre>
     * 六氟化硫
     * </pre>
     *
     * <code>SF6 = 21;</code>
     */
    public static final int SF6_VALUE = 21;
    /**
     * <pre>
     * 含氧量
     * </pre>
     *
     * <code>O2 = 22;</code>
     */
    public static final int O2_VALUE = 22;
    /**
     * <pre>
     * 噪声
     * </pre>
     *
     * <code>NOISE = 23;</code>
     */
    public static final int NOISE_VALUE = 23;
    /**
     * <pre>
     * 震动
     * </pre>
     *
     * <code>SHOCK = 24;</code>
     */
    public static final int SHOCK_VALUE = 24;
    /**
     * <pre>
     * 设备连接处温度、设备温度
     * </pre>
     *
     * <code>CONNECT_TEMPERATURE = 25;</code>
     */
    public static final int CONNECT_TEMPERATURE_VALUE = 25;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static EnvDeviceName valueOf(int value) {
      return forNumber(value);
    }

    public static EnvDeviceName forNumber(int value) {
      switch (value) {
        case 0: return ENVDEVNAMEDEFAULT;
        case 1: return TEMPERATURE;
        case 2: return HUMIDITY;
        case 3: return WINDSPEED;
        case 4: return WATER_DETECT;
        case 5: return INFRARED;
        case 6: return DOOR_ACCESS;
        case 8: return SMOKE;
        case 10: return FAN;
        case 14: return ELECTRONIC_FENCE;
        case 15: return FIRE;
        case 16: return PARTIAL_DISCHARGE;
        case 21: return SF6;
        case 22: return O2;
        case 23: return NOISE;
        case 24: return SHOCK;
        case 25: return CONNECT_TEMPERATURE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EnvDeviceName>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EnvDeviceName> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EnvDeviceName>() {
            public EnvDeviceName findValueByNumber(int number) {
              return EnvDeviceName.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return MessageProtobuf.getDescriptor().getEnumTypes().get(2);
    }

    private static final EnvDeviceName[] VALUES = values();

    public static EnvDeviceName valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EnvDeviceName(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EnvDeviceName)
  }

  /**
   * <pre>
   * 视频设备子类型
   * </pre>
   *
   * Protobuf enum {@code VideoDeviceName}
   */
  public enum VideoDeviceName
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>VIDEODEVNAMEDEFAULT = 0;</code>
     */
    VIDEODEVNAMEDEFAULT(0),
    /**
     * <pre>
     * 枪机
     * </pre>
     *
     * <code>CAMERA = 1;</code>
     */
    CAMERA(1),
    /**
     * <pre>
     * 球机
     * </pre>
     *
     * <code>DOME = 2;</code>
     */
    DOME(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>VIDEODEVNAMEDEFAULT = 0;</code>
     */
    public static final int VIDEODEVNAMEDEFAULT_VALUE = 0;
    /**
     * <pre>
     * 枪机
     * </pre>
     *
     * <code>CAMERA = 1;</code>
     */
    public static final int CAMERA_VALUE = 1;
    /**
     * <pre>
     * 球机
     * </pre>
     *
     * <code>DOME = 2;</code>
     */
    public static final int DOME_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static VideoDeviceName valueOf(int value) {
      return forNumber(value);
    }

    public static VideoDeviceName forNumber(int value) {
      switch (value) {
        case 0: return VIDEODEVNAMEDEFAULT;
        case 1: return CAMERA;
        case 2: return DOME;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<VideoDeviceName>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        VideoDeviceName> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<VideoDeviceName>() {
            public VideoDeviceName findValueByNumber(int number) {
              return VideoDeviceName.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return MessageProtobuf.getDescriptor().getEnumTypes().get(3);
    }

    private static final VideoDeviceName[] VALUES = values();

    public static VideoDeviceName valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private VideoDeviceName(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:VideoDeviceName)
  }

  /**
   * Protobuf enum {@code OtherDeviceName}
   */
  public enum OtherDeviceName
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OTHERDEVNAMEDEFAULT = 0;</code>
     */
    OTHERDEVNAMEDEFAULT(0),
    /**
     * <pre>
     * 声光告警
     * </pre>
     *
     * <code>SOUND_ALARM = 1;</code>
     */
    SOUND_ALARM(1),
    /**
     * <pre>
     * 空调控制器
     * </pre>
     *
     * <code>AIR_CONDITIONING = 2;</code>
     */
    AIR_CONDITIONING(2),
    /**
     * <pre>
     * 灯光照明
     * </pre>
     *
     * <code>LIGHT = 3;</code>
     */
    LIGHT(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>OTHERDEVNAMEDEFAULT = 0;</code>
     */
    public static final int OTHERDEVNAMEDEFAULT_VALUE = 0;
    /**
     * <pre>
     * 声光告警
     * </pre>
     *
     * <code>SOUND_ALARM = 1;</code>
     */
    public static final int SOUND_ALARM_VALUE = 1;
    /**
     * <pre>
     * 空调控制器
     * </pre>
     *
     * <code>AIR_CONDITIONING = 2;</code>
     */
    public static final int AIR_CONDITIONING_VALUE = 2;
    /**
     * <pre>
     * 灯光照明
     * </pre>
     *
     * <code>LIGHT = 3;</code>
     */
    public static final int LIGHT_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static OtherDeviceName valueOf(int value) {
      return forNumber(value);
    }

    public static OtherDeviceName forNumber(int value) {
      switch (value) {
        case 0: return OTHERDEVNAMEDEFAULT;
        case 1: return SOUND_ALARM;
        case 2: return AIR_CONDITIONING;
        case 3: return LIGHT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OtherDeviceName>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OtherDeviceName> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OtherDeviceName>() {
            public OtherDeviceName findValueByNumber(int number) {
              return OtherDeviceName.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return MessageProtobuf.getDescriptor().getEnumTypes().get(4);
    }

    private static final OtherDeviceName[] VALUES = values();

    public static OtherDeviceName valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private OtherDeviceName(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:OtherDeviceName)
  }

  /**
   * Protobuf enum {@code PrimaryEquipmentDeviceName}
   */
  public enum PrimaryEquipmentDeviceName
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PEDEVNAMEDEFAULT = 0;</code>
     */
    PEDEVNAMEDEFAULT(0),
    /**
     * <pre>
     *   变压器
     * </pre>
     *
     * <code>TRANSFORMER = 1;</code>
     */
    TRANSFORMER(1),
    /**
     * <pre>
     *   调相机
     * </pre>
     *
     * <code>PHASE_MODIFIER = 2;</code>
     */
    PHASE_MODIFIER(2),
    /**
     * <pre>
     *   断路器
     * </pre>
     *
     * <code>CIRCUIT_BREAKER = 3;</code>
     */
    CIRCUIT_BREAKER(3),
    /**
     * <pre>
     *     隔离开关
     * </pre>
     *
     * <code>DISCONNECTING_SWITCH = 4;</code>
     */
    DISCONNECTING_SWITCH(4),
    /**
     * <pre>
     * 熔断器
     * </pre>
     *
     * <code>FUSE = 5;</code>
     */
    FUSE(5),
    /**
     * <pre>
     *  电容器
     * </pre>
     *
     * <code>CAPACITOR = 6;</code>
     */
    CAPACITOR(6),
    /**
     * <pre>
     * 蓄电池
     * </pre>
     *
     * <code>STORAGE_BATTERY = 7;</code>
     */
    STORAGE_BATTERY(7),
    /**
     * <pre>
     * 电抗器
     * </pre>
     *
     * <code>REACTOR = 8;</code>
     */
    REACTOR(8),
    /**
     * <pre>
     * 避雷器
     * </pre>
     *
     * <code>SURGE_ARRESTERS = 9;</code>
     */
    SURGE_ARRESTERS(9),
    /**
     * <pre>
     * 电压互感器
     * </pre>
     *
     * <code>POTENTIAL_TRANSFORMER = 10;</code>
     */
    POTENTIAL_TRANSFORMER(10),
    /**
     * <pre>
     * 电流互感器
     * </pre>
     *
     * <code>CURRENT_TRANSFORMER = 11;</code>
     */
    CURRENT_TRANSFORMER(11),
    /**
     * <pre>
     * 母线
     * </pre>
     *
     * <code>BUS_LINE = 12;</code>
     */
    BUS_LINE(12),
    /**
     * <pre>
     * 接地开关
     * </pre>
     *
     * <code>EARTH_SWITCH = 13;</code>
     */
    EARTH_SWITCH(13),
    /**
     * <pre>
     * 发电机
     * </pre>
     *
     * <code>DYNAMO = 30;</code>
     */
    DYNAMO(30),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>PEDEVNAMEDEFAULT = 0;</code>
     */
    public static final int PEDEVNAMEDEFAULT_VALUE = 0;
    /**
     * <pre>
     *   变压器
     * </pre>
     *
     * <code>TRANSFORMER = 1;</code>
     */
    public static final int TRANSFORMER_VALUE = 1;
    /**
     * <pre>
     *   调相机
     * </pre>
     *
     * <code>PHASE_MODIFIER = 2;</code>
     */
    public static final int PHASE_MODIFIER_VALUE = 2;
    /**
     * <pre>
     *   断路器
     * </pre>
     *
     * <code>CIRCUIT_BREAKER = 3;</code>
     */
    public static final int CIRCUIT_BREAKER_VALUE = 3;
    /**
     * <pre>
     *     隔离开关
     * </pre>
     *
     * <code>DISCONNECTING_SWITCH = 4;</code>
     */
    public static final int DISCONNECTING_SWITCH_VALUE = 4;
    /**
     * <pre>
     * 熔断器
     * </pre>
     *
     * <code>FUSE = 5;</code>
     */
    public static final int FUSE_VALUE = 5;
    /**
     * <pre>
     *  电容器
     * </pre>
     *
     * <code>CAPACITOR = 6;</code>
     */
    public static final int CAPACITOR_VALUE = 6;
    /**
     * <pre>
     * 蓄电池
     * </pre>
     *
     * <code>STORAGE_BATTERY = 7;</code>
     */
    public static final int STORAGE_BATTERY_VALUE = 7;
    /**
     * <pre>
     * 电抗器
     * </pre>
     *
     * <code>REACTOR = 8;</code>
     */
    public static final int REACTOR_VALUE = 8;
    /**
     * <pre>
     * 避雷器
     * </pre>
     *
     * <code>SURGE_ARRESTERS = 9;</code>
     */
    public static final int SURGE_ARRESTERS_VALUE = 9;
    /**
     * <pre>
     * 电压互感器
     * </pre>
     *
     * <code>POTENTIAL_TRANSFORMER = 10;</code>
     */
    public static final int POTENTIAL_TRANSFORMER_VALUE = 10;
    /**
     * <pre>
     * 电流互感器
     * </pre>
     *
     * <code>CURRENT_TRANSFORMER = 11;</code>
     */
    public static final int CURRENT_TRANSFORMER_VALUE = 11;
    /**
     * <pre>
     * 母线
     * </pre>
     *
     * <code>BUS_LINE = 12;</code>
     */
    public static final int BUS_LINE_VALUE = 12;
    /**
     * <pre>
     * 接地开关
     * </pre>
     *
     * <code>EARTH_SWITCH = 13;</code>
     */
    public static final int EARTH_SWITCH_VALUE = 13;
    /**
     * <pre>
     * 发电机
     * </pre>
     *
     * <code>DYNAMO = 30;</code>
     */
    public static final int DYNAMO_VALUE = 30;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static PrimaryEquipmentDeviceName valueOf(int value) {
      return forNumber(value);
    }

    public static PrimaryEquipmentDeviceName forNumber(int value) {
      switch (value) {
        case 0: return PEDEVNAMEDEFAULT;
        case 1: return TRANSFORMER;
        case 2: return PHASE_MODIFIER;
        case 3: return CIRCUIT_BREAKER;
        case 4: return DISCONNECTING_SWITCH;
        case 5: return FUSE;
        case 6: return CAPACITOR;
        case 7: return STORAGE_BATTERY;
        case 8: return REACTOR;
        case 9: return SURGE_ARRESTERS;
        case 10: return POTENTIAL_TRANSFORMER;
        case 11: return CURRENT_TRANSFORMER;
        case 12: return BUS_LINE;
        case 13: return EARTH_SWITCH;
        case 30: return DYNAMO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PrimaryEquipmentDeviceName>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PrimaryEquipmentDeviceName> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PrimaryEquipmentDeviceName>() {
            public PrimaryEquipmentDeviceName findValueByNumber(int number) {
              return PrimaryEquipmentDeviceName.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return MessageProtobuf.getDescriptor().getEnumTypes().get(5);
    }

    private static final PrimaryEquipmentDeviceName[] VALUES = values();

    public static PrimaryEquipmentDeviceName valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PrimaryEquipmentDeviceName(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:PrimaryEquipmentDeviceName)
  }

  /**
   * <pre>
   * 告警状态
   * </pre>
   *
   * Protobuf enum {@code AlarmState}
   */
  public enum AlarmState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ALARM_ONDEFAULT = 0;</code>
     */
    ALARM_ONDEFAULT(0),
    /**
     * <pre>
     * 告警产生
     * </pre>
     *
     * <code>ALARM_ON = 1;</code>
     */
    ALARM_ON(1),
    /**
     * <pre>
     * 告警消失
     * </pre>
     *
     * <code>ALARM_OFF = 2;</code>
     */
    ALARM_OFF(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ALARM_ONDEFAULT = 0;</code>
     */
    public static final int ALARM_ONDEFAULT_VALUE = 0;
    /**
     * <pre>
     * 告警产生
     * </pre>
     *
     * <code>ALARM_ON = 1;</code>
     */
    public static final int ALARM_ON_VALUE = 1;
    /**
     * <pre>
     * 告警消失
     * </pre>
     *
     * <code>ALARM_OFF = 2;</code>
     */
    public static final int ALARM_OFF_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static AlarmState valueOf(int value) {
      return forNumber(value);
    }

    public static AlarmState forNumber(int value) {
      switch (value) {
        case 0: return ALARM_ONDEFAULT;
        case 1: return ALARM_ON;
        case 2: return ALARM_OFF;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AlarmState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AlarmState> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AlarmState>() {
            public AlarmState findValueByNumber(int number) {
              return AlarmState.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return MessageProtobuf.getDescriptor().getEnumTypes().get(6);
    }

    private static final AlarmState[] VALUES = values();

    public static AlarmState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AlarmState(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:AlarmState)
  }

  /**
   * <pre>
   * 告警级别
   * </pre>
   *
   * Protobuf enum {@code AlarmLevel}
   */
  public enum AlarmLevel
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ALARM_NORMALDEFAULT = 0;</code>
     */
    ALARM_NORMALDEFAULT(0),
    /**
     * <pre>
     * 普通告警
     * </pre>
     *
     * <code>ALARM_NORMAL = 1;</code>
     */
    ALARM_NORMAL(1),
    /**
     * <pre>
     * 严重告警
     * </pre>
     *
     * <code>ALARM_CRITICAL = 2;</code>
     */
    ALARM_CRITICAL(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ALARM_NORMALDEFAULT = 0;</code>
     */
    public static final int ALARM_NORMALDEFAULT_VALUE = 0;
    /**
     * <pre>
     * 普通告警
     * </pre>
     *
     * <code>ALARM_NORMAL = 1;</code>
     */
    public static final int ALARM_NORMAL_VALUE = 1;
    /**
     * <pre>
     * 严重告警
     * </pre>
     *
     * <code>ALARM_CRITICAL = 2;</code>
     */
    public static final int ALARM_CRITICAL_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static AlarmLevel valueOf(int value) {
      return forNumber(value);
    }

    public static AlarmLevel forNumber(int value) {
      switch (value) {
        case 0: return ALARM_NORMALDEFAULT;
        case 1: return ALARM_NORMAL;
        case 2: return ALARM_CRITICAL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AlarmLevel>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AlarmLevel> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AlarmLevel>() {
            public AlarmLevel findValueByNumber(int number) {
              return AlarmLevel.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return MessageProtobuf.getDescriptor().getEnumTypes().get(7);
    }

    private static final AlarmLevel[] VALUES = values();

    public static AlarmLevel valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AlarmLevel(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:AlarmLevel)
  }

  /**
   * <pre>
   * 告警类型
   * </pre>
   *
   * Protobuf enum {@code AlarmType}
   */
  public enum AlarmType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DEVICE_FAILDEFAULT = 0;</code>
     */
    DEVICE_FAILDEFAULT(0),
    /**
     * <pre>
     * 设备失效
     * </pre>
     *
     * <code>ALMTYPE_DEVICE_FAIL = 1;</code>
     */
    ALMTYPE_DEVICE_FAIL(1),
    /**
     * <pre>
     * 视频遮挡告警
     * </pre>
     *
     * <code>ALMTYPE_HIDE_DETECT = 2;</code>
     */
    ALMTYPE_HIDE_DETECT(2),
    /**
     * <pre>
     * 视频丢失告警
     * </pre>
     *
     * <code>ALMTYPE_LOSS_DETECT = 3;</code>
     */
    ALMTYPE_LOSS_DETECT(3),
    /**
     * <pre>
     * 视频移动侦测告警
     * </pre>
     *
     * <code>ALMTYPE_MOTION_DETECT = 4;</code>
     */
    ALMTYPE_MOTION_DETECT(4),
    /**
     * <pre>
     * 磁盘满告警
     * </pre>
     *
     * <code>ALMTYPE_DISK_FULL = 5;</code>
     */
    ALMTYPE_DISK_FULL(5),
    /**
     * <pre>
     * 磁盘出错告警
     * </pre>
     *
     * <code>ALMTYPE_DISK_ERROR = 6;</code>
     */
    ALMTYPE_DISK_ERROR(6),
    /**
     * <pre>
     * 温度环境量告警
     * </pre>
     *
     * <code>ALMTYPE_TEMPERATURE = 7;</code>
     */
    ALMTYPE_TEMPERATURE(7),
    /**
     * <pre>
     * 湿度环境量告警
     * </pre>
     *
     * <code>ALMTYPE_HUMIDITY = 8;</code>
     */
    ALMTYPE_HUMIDITY(8),
    /**
     * <pre>
     * 风速环境量告警
     * </pre>
     *
     * <code>ALMTYPE_WINDSPEED = 10;</code>
     */
    ALMTYPE_WINDSPEED(10),
    /**
     * <pre>
     * 红外感应告警
     * </pre>
     *
     * <code>ALMTYPE_INFRARED = 11;</code>
     */
    ALMTYPE_INFRARED(11),
    /**
     * <pre>
     * 水浸告警
     * </pre>
     *
     * <code>ALMTYPE_WATER_DETECT = 12;</code>
     */
    ALMTYPE_WATER_DETECT(12),
    /**
     * <pre>
     * 门禁告警
     * </pre>
     *
     * <code>ALMTYPE_DOOR_GUARD = 13;</code>
     */
    ALMTYPE_DOOR_GUARD(13),
    /**
     * <pre>
     * 网络中断
     * </pre>
     *
     * <code>ALMTYPE_NET = 14;</code>
     */
    ALMTYPE_NET(14),
    /**
     * <pre>
     * 警戒线
     * </pre>
     *
     * <code>ALMTYPE_LINE_DETECTION = 15;</code>
     */
    ALMTYPE_LINE_DETECTION(15),
    /**
     * <pre>
     * 警戒区
     * </pre>
     *
     * <code>ALMTYPE_REGION_DETECTION = 16;</code>
     */
    ALMTYPE_REGION_DETECTION(16),
    /**
     * <pre>
     * 设备目录更新
     * </pre>
     *
     * <code>ALMTYPE_DEVICE_REFRESH = 17;</code>
     */
    ALMTYPE_DEVICE_REFRESH(17),
    /**
     * <pre>
     * 烟感告警
     * </pre>
     *
     * <code>ALMTYPE_SMOKE = 20;</code>
     */
    ALMTYPE_SMOKE(20),
    /**
     * <pre>
     * 火灾
     * </pre>
     *
     * <code>ALMTYPE_FIRE = 21;</code>
     */
    ALMTYPE_FIRE(21),
    /**
     * <pre>
     * 六氟化硫
     * </pre>
     *
     * <code>ALMTYPE_SF6 = 22;</code>
     */
    ALMTYPE_SF6(22),
    /**
     * <pre>
     * 氧气
     * </pre>
     *
     * <code>ALMTYPE_O2 = 23;</code>
     */
    ALMTYPE_O2(23),
    /**
     * <pre>
     * 噪声
     * </pre>
     *
     * <code>ALMTYPE_SOUND = 24;</code>
     */
    ALMTYPE_SOUND(24),
    /**
     * <pre>
     * 震动
     * </pre>
     *
     * <code>ALMTYPE_SHOKE = 25;</code>
     */
    ALMTYPE_SHOKE(25),
    /**
     * <pre>
     * 局部放电
     * </pre>
     *
     * <code>ALMTYPE_PARTIAL_DISCHARGE = 30;</code>
     */
    ALMTYPE_PARTIAL_DISCHARGE(30),
    /**
     * <pre>
     * 连接头温度
     * </pre>
     *
     * <code>ALMTYPE_CONNECT_TEMPERATURE = 31;</code>
     */
    ALMTYPE_CONNECT_TEMPERATURE(31),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>DEVICE_FAILDEFAULT = 0;</code>
     */
    public static final int DEVICE_FAILDEFAULT_VALUE = 0;
    /**
     * <pre>
     * 设备失效
     * </pre>
     *
     * <code>ALMTYPE_DEVICE_FAIL = 1;</code>
     */
    public static final int ALMTYPE_DEVICE_FAIL_VALUE = 1;
    /**
     * <pre>
     * 视频遮挡告警
     * </pre>
     *
     * <code>ALMTYPE_HIDE_DETECT = 2;</code>
     */
    public static final int ALMTYPE_HIDE_DETECT_VALUE = 2;
    /**
     * <pre>
     * 视频丢失告警
     * </pre>
     *
     * <code>ALMTYPE_LOSS_DETECT = 3;</code>
     */
    public static final int ALMTYPE_LOSS_DETECT_VALUE = 3;
    /**
     * <pre>
     * 视频移动侦测告警
     * </pre>
     *
     * <code>ALMTYPE_MOTION_DETECT = 4;</code>
     */
    public static final int ALMTYPE_MOTION_DETECT_VALUE = 4;
    /**
     * <pre>
     * 磁盘满告警
     * </pre>
     *
     * <code>ALMTYPE_DISK_FULL = 5;</code>
     */
    public static final int ALMTYPE_DISK_FULL_VALUE = 5;
    /**
     * <pre>
     * 磁盘出错告警
     * </pre>
     *
     * <code>ALMTYPE_DISK_ERROR = 6;</code>
     */
    public static final int ALMTYPE_DISK_ERROR_VALUE = 6;
    /**
     * <pre>
     * 温度环境量告警
     * </pre>
     *
     * <code>ALMTYPE_TEMPERATURE = 7;</code>
     */
    public static final int ALMTYPE_TEMPERATURE_VALUE = 7;
    /**
     * <pre>
     * 湿度环境量告警
     * </pre>
     *
     * <code>ALMTYPE_HUMIDITY = 8;</code>
     */
    public static final int ALMTYPE_HUMIDITY_VALUE = 8;
    /**
     * <pre>
     * 风速环境量告警
     * </pre>
     *
     * <code>ALMTYPE_WINDSPEED = 10;</code>
     */
    public static final int ALMTYPE_WINDSPEED_VALUE = 10;
    /**
     * <pre>
     * 红外感应告警
     * </pre>
     *
     * <code>ALMTYPE_INFRARED = 11;</code>
     */
    public static final int ALMTYPE_INFRARED_VALUE = 11;
    /**
     * <pre>
     * 水浸告警
     * </pre>
     *
     * <code>ALMTYPE_WATER_DETECT = 12;</code>
     */
    public static final int ALMTYPE_WATER_DETECT_VALUE = 12;
    /**
     * <pre>
     * 门禁告警
     * </pre>
     *
     * <code>ALMTYPE_DOOR_GUARD = 13;</code>
     */
    public static final int ALMTYPE_DOOR_GUARD_VALUE = 13;
    /**
     * <pre>
     * 网络中断
     * </pre>
     *
     * <code>ALMTYPE_NET = 14;</code>
     */
    public static final int ALMTYPE_NET_VALUE = 14;
    /**
     * <pre>
     * 警戒线
     * </pre>
     *
     * <code>ALMTYPE_LINE_DETECTION = 15;</code>
     */
    public static final int ALMTYPE_LINE_DETECTION_VALUE = 15;
    /**
     * <pre>
     * 警戒区
     * </pre>
     *
     * <code>ALMTYPE_REGION_DETECTION = 16;</code>
     */
    public static final int ALMTYPE_REGION_DETECTION_VALUE = 16;
    /**
     * <pre>
     * 设备目录更新
     * </pre>
     *
     * <code>ALMTYPE_DEVICE_REFRESH = 17;</code>
     */
    public static final int ALMTYPE_DEVICE_REFRESH_VALUE = 17;
    /**
     * <pre>
     * 烟感告警
     * </pre>
     *
     * <code>ALMTYPE_SMOKE = 20;</code>
     */
    public static final int ALMTYPE_SMOKE_VALUE = 20;
    /**
     * <pre>
     * 火灾
     * </pre>
     *
     * <code>ALMTYPE_FIRE = 21;</code>
     */
    public static final int ALMTYPE_FIRE_VALUE = 21;
    /**
     * <pre>
     * 六氟化硫
     * </pre>
     *
     * <code>ALMTYPE_SF6 = 22;</code>
     */
    public static final int ALMTYPE_SF6_VALUE = 22;
    /**
     * <pre>
     * 氧气
     * </pre>
     *
     * <code>ALMTYPE_O2 = 23;</code>
     */
    public static final int ALMTYPE_O2_VALUE = 23;
    /**
     * <pre>
     * 噪声
     * </pre>
     *
     * <code>ALMTYPE_SOUND = 24;</code>
     */
    public static final int ALMTYPE_SOUND_VALUE = 24;
    /**
     * <pre>
     * 震动
     * </pre>
     *
     * <code>ALMTYPE_SHOKE = 25;</code>
     */
    public static final int ALMTYPE_SHOKE_VALUE = 25;
    /**
     * <pre>
     * 局部放电
     * </pre>
     *
     * <code>ALMTYPE_PARTIAL_DISCHARGE = 30;</code>
     */
    public static final int ALMTYPE_PARTIAL_DISCHARGE_VALUE = 30;
    /**
     * <pre>
     * 连接头温度
     * </pre>
     *
     * <code>ALMTYPE_CONNECT_TEMPERATURE = 31;</code>
     */
    public static final int ALMTYPE_CONNECT_TEMPERATURE_VALUE = 31;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static AlarmType valueOf(int value) {
      return forNumber(value);
    }

    public static AlarmType forNumber(int value) {
      switch (value) {
        case 0: return DEVICE_FAILDEFAULT;
        case 1: return ALMTYPE_DEVICE_FAIL;
        case 2: return ALMTYPE_HIDE_DETECT;
        case 3: return ALMTYPE_LOSS_DETECT;
        case 4: return ALMTYPE_MOTION_DETECT;
        case 5: return ALMTYPE_DISK_FULL;
        case 6: return ALMTYPE_DISK_ERROR;
        case 7: return ALMTYPE_TEMPERATURE;
        case 8: return ALMTYPE_HUMIDITY;
        case 10: return ALMTYPE_WINDSPEED;
        case 11: return ALMTYPE_INFRARED;
        case 12: return ALMTYPE_WATER_DETECT;
        case 13: return ALMTYPE_DOOR_GUARD;
        case 14: return ALMTYPE_NET;
        case 15: return ALMTYPE_LINE_DETECTION;
        case 16: return ALMTYPE_REGION_DETECTION;
        case 17: return ALMTYPE_DEVICE_REFRESH;
        case 20: return ALMTYPE_SMOKE;
        case 21: return ALMTYPE_FIRE;
        case 22: return ALMTYPE_SF6;
        case 23: return ALMTYPE_O2;
        case 24: return ALMTYPE_SOUND;
        case 25: return ALMTYPE_SHOKE;
        case 30: return ALMTYPE_PARTIAL_DISCHARGE;
        case 31: return ALMTYPE_CONNECT_TEMPERATURE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AlarmType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AlarmType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AlarmType>() {
            public AlarmType findValueByNumber(int number) {
              return AlarmType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return MessageProtobuf.getDescriptor().getEnumTypes().get(8);
    }

    private static final AlarmType[] VALUES = values();

    public static AlarmType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AlarmType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:AlarmType)
  }

  /**
   * Protobuf enum {@code ControlCommand}
   */
  public enum ControlCommand
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>COMMAND_NONE = 0;</code>
     */
    COMMAND_NONE(0),
    /**
     * <pre>
     * 重启设备
     * </pre>
     *
     * <code>DEVICE_REBOOT = 1;</code>
     */
    DEVICE_REBOOT(1),
    /**
     * <pre>
     * 打开设备
     * </pre>
     *
     * <code>CONTROL_ON = 2;</code>
     */
    CONTROL_ON(2),
    /**
     * <pre>
     * 关闭设备
     * </pre>
     *
     * <code>CONTROL_OFF = 3;</code>
     */
    CONTROL_OFF(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>COMMAND_NONE = 0;</code>
     */
    public static final int COMMAND_NONE_VALUE = 0;
    /**
     * <pre>
     * 重启设备
     * </pre>
     *
     * <code>DEVICE_REBOOT = 1;</code>
     */
    public static final int DEVICE_REBOOT_VALUE = 1;
    /**
     * <pre>
     * 打开设备
     * </pre>
     *
     * <code>CONTROL_ON = 2;</code>
     */
    public static final int CONTROL_ON_VALUE = 2;
    /**
     * <pre>
     * 关闭设备
     * </pre>
     *
     * <code>CONTROL_OFF = 3;</code>
     */
    public static final int CONTROL_OFF_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static ControlCommand valueOf(int value) {
      return forNumber(value);
    }

    public static ControlCommand forNumber(int value) {
      switch (value) {
        case 0: return COMMAND_NONE;
        case 1: return DEVICE_REBOOT;
        case 2: return CONTROL_ON;
        case 3: return CONTROL_OFF;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ControlCommand>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ControlCommand> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ControlCommand>() {
            public ControlCommand findValueByNumber(int number) {
              return ControlCommand.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return MessageProtobuf.getDescriptor().getEnumTypes().get(9);
    }

    private static final ControlCommand[] VALUES = values();

    public static ControlCommand valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ControlCommand(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ControlCommand)
  }

  /**
   * Protobuf enum {@code DeviceState}
   */
  public enum DeviceState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DEVICE_OFF = 0;</code>
     */
    DEVICE_OFF(0),
    /**
     * <code>DEVICE_ON = 1;</code>
     */
    DEVICE_ON(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>DEVICE_OFF = 0;</code>
     */
    public static final int DEVICE_OFF_VALUE = 0;
    /**
     * <code>DEVICE_ON = 1;</code>
     */
    public static final int DEVICE_ON_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static DeviceState valueOf(int value) {
      return forNumber(value);
    }

    public static DeviceState forNumber(int value) {
      switch (value) {
        case 0: return DEVICE_OFF;
        case 1: return DEVICE_ON;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DeviceState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DeviceState> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DeviceState>() {
            public DeviceState findValueByNumber(int number) {
              return DeviceState.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return MessageProtobuf.getDescriptor().getEnumTypes().get(10);
    }

    private static final DeviceState[] VALUES = values();

    public static DeviceState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DeviceState(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DeviceState)
  }

  public interface PDGMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PDGMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 消息头部
     * </pre>
     *
     * <code>.PDGHeader pDGHeader = 1;</code>
     */
    boolean hasPDGHeader();
    /**
     * <pre>
     * 消息头部
     * </pre>
     *
     * <code>.PDGHeader pDGHeader = 1;</code>
     */
    PDGHeader getPDGHeader();
    /**
     * <pre>
     * 消息头部
     * </pre>
     *
     * <code>.PDGHeader pDGHeader = 1;</code>
     */
    PDGHeaderOrBuilder getPDGHeaderOrBuilder();

    /**
     * <pre>
     *注册信息
     * </pre>
     *
     * <code>.Register register = 2;</code>
     */
    Register getRegister();
    /**
     * <pre>
     *注册信息
     * </pre>
     *
     * <code>.Register register = 2;</code>
     */
    RegisterOrBuilder getRegisterOrBuilder();

    /**
     * <pre>
     *注册响应
     * </pre>
     *
     * <code>.RegisterRsp registerRsp = 3;</code>
     */
    RegisterRsp getRegisterRsp();
    /**
     * <pre>
     *注册响应
     * </pre>
     *
     * <code>.RegisterRsp registerRsp = 3;</code>
     */
    RegisterRspOrBuilder getRegisterRspOrBuilder();

    /**
     * <pre>
     *心跳
     * </pre>
     *
     * <code>.Heartbeat heartbeat = 4;</code>
     */
    Heartbeat getHeartbeat();
    /**
     * <pre>
     *心跳
     * </pre>
     *
     * <code>.Heartbeat heartbeat = 4;</code>
     */
    HeartbeatOrBuilder getHeartbeatOrBuilder();

    /**
     * <pre>
     *心跳响应
     * </pre>
     *
     * <code>.HeartbeatRsp HeartbeatRsp = 5;</code>
     */
    HeartbeatRsp getHeartbeatRsp();
    /**
     * <pre>
     *心跳响应
     * </pre>
     *
     * <code>.HeartbeatRsp HeartbeatRsp = 5;</code>
     */
    HeartbeatRspOrBuilder getHeartbeatRspOrBuilder();

    /**
     * <pre>
     *上报采集值
     * </pre>
     *
     * <code>.ReportSensorData reportSensorData = 6;</code>
     */
    ReportSensorData getReportSensorData();
    /**
     * <pre>
     *上报采集值
     * </pre>
     *
     * <code>.ReportSensorData reportSensorData = 6;</code>
     */
    ReportSensorDataOrBuilder getReportSensorDataOrBuilder();

    /**
     * <code>.ReportSensorDataRsp ReportSensorDataRsp = 7;</code>
     */
    ReportSensorDataRsp getReportSensorDataRsp();
    /**
     * <code>.ReportSensorDataRsp ReportSensorDataRsp = 7;</code>
     */
    ReportSensorDataRspOrBuilder getReportSensorDataRspOrBuilder();

    /**
     * <pre>
     *告警上报
     * </pre>
     *
     * <code>.ReportAlarm reportAlarm = 8;</code>
     */
    ReportAlarm getReportAlarm();
    /**
     * <pre>
     *告警上报
     * </pre>
     *
     * <code>.ReportAlarm reportAlarm = 8;</code>
     */
    ReportAlarmOrBuilder getReportAlarmOrBuilder();

    /**
     * <code>.ReportAlarmRsp reportAlarmRsp = 9;</code>
     */
    ReportAlarmRsp getReportAlarmRsp();
    /**
     * <code>.ReportAlarmRsp reportAlarmRsp = 9;</code>
     */
    ReportAlarmRspOrBuilder getReportAlarmRspOrBuilder();

    /**
     * <pre>
     *上报设备列表
     * </pre>
     *
     * <code>.Catalog catalog = 10;</code>
     */
    Catalog getCatalog();
    /**
     * <pre>
     *上报设备列表
     * </pre>
     *
     * <code>.Catalog catalog = 10;</code>
     */
    CatalogOrBuilder getCatalogOrBuilder();

    /**
     * <code>.CatalogRsp catalogRsp = 11;</code>
     */
    CatalogRsp getCatalogRsp();
    /**
     * <code>.CatalogRsp catalogRsp = 11;</code>
     */
    CatalogRspOrBuilder getCatalogRspOrBuilder();

    /**
     * <pre>
     *请求对时
     * </pre>
     *
     * <code>.UpdateTime updateTime = 12;</code>
     */
    UpdateTime getUpdateTime();
    /**
     * <pre>
     *请求对时
     * </pre>
     *
     * <code>.UpdateTime updateTime = 12;</code>
     */
    UpdateTimeOrBuilder getUpdateTimeOrBuilder();

    /**
     * <code>.UpdateTimeRsp updateTimeRsp = 13;</code>
     */
    UpdateTimeRsp getUpdateTimeRsp();
    /**
     * <code>.UpdateTimeRsp updateTimeRsp = 13;</code>
     */
    UpdateTimeRspOrBuilder getUpdateTimeRspOrBuilder();

    /**
     * <pre>
     * 控制命令
     * </pre>
     *
     * <code>.Control control = 14;</code>
     */
    Control getControl();
    /**
     * <pre>
     * 控制命令
     * </pre>
     *
     * <code>.Control control = 14;</code>
     */
    ControlOrBuilder getControlOrBuilder();

    /**
     * <code>.ControlRsp controlRsp = 15;</code>
     */
    ControlRsp getControlRsp();
    /**
     * <code>.ControlRsp controlRsp = 15;</code>
     */
    ControlRspOrBuilder getControlRspOrBuilder();

    /**
     * <pre>
     * 设备状态上报
     * </pre>
     *
     * <code>.ReportDeviceState reportDeviceState = 16;</code>
     */
    ReportDeviceState getReportDeviceState();
    /**
     * <pre>
     * 设备状态上报
     * </pre>
     *
     * <code>.ReportDeviceState reportDeviceState = 16;</code>
     */
    ReportDeviceStateOrBuilder getReportDeviceStateOrBuilder();

    /**
     * <code>.ReportDeviceStateRsp reportDeviceStateRsp = 17;</code>
     */
    ReportDeviceStateRsp getReportDeviceStateRsp();
    /**
     * <code>.ReportDeviceStateRsp reportDeviceStateRsp = 17;</code>
     */
    ReportDeviceStateRspOrBuilder getReportDeviceStateRspOrBuilder();

    public PDGMessage.MessageBodyCase getMessageBodyCase();
  }
  /**
   * <pre>
   * 站端与主站传递的消息体
   * </pre>
   *
   * Protobuf type {@code PDGMessage}
   */
  public  static final class PDGMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:PDGMessage)
      PDGMessageOrBuilder {
    // Use PDGMessage.newBuilder() to construct.
    private PDGMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PDGMessage() {
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PDGMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              PDGHeader.Builder subBuilder = null;
              if (pDGHeader_ != null) {
                subBuilder = pDGHeader_.toBuilder();
              }
              pDGHeader_ = input.readMessage(PDGHeader.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pDGHeader_);
                pDGHeader_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              Register.Builder subBuilder = null;
              if (messageBodyCase_ == 2) {
                subBuilder = ((Register) messageBody_).toBuilder();
              }
              messageBody_ =
                  input.readMessage(Register.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((Register) messageBody_);
                messageBody_ = subBuilder.buildPartial();
              }
              messageBodyCase_ = 2;
              break;
            }
            case 26: {
              RegisterRsp.Builder subBuilder = null;
              if (messageBodyCase_ == 3) {
                subBuilder = ((RegisterRsp) messageBody_).toBuilder();
              }
              messageBody_ =
                  input.readMessage(RegisterRsp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((RegisterRsp) messageBody_);
                messageBody_ = subBuilder.buildPartial();
              }
              messageBodyCase_ = 3;
              break;
            }
            case 34: {
              Heartbeat.Builder subBuilder = null;
              if (messageBodyCase_ == 4) {
                subBuilder = ((Heartbeat) messageBody_).toBuilder();
              }
              messageBody_ =
                  input.readMessage(Heartbeat.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((Heartbeat) messageBody_);
                messageBody_ = subBuilder.buildPartial();
              }
              messageBodyCase_ = 4;
              break;
            }
            case 42: {
              HeartbeatRsp.Builder subBuilder = null;
              if (messageBodyCase_ == 5) {
                subBuilder = ((HeartbeatRsp) messageBody_).toBuilder();
              }
              messageBody_ =
                  input.readMessage(HeartbeatRsp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((HeartbeatRsp) messageBody_);
                messageBody_ = subBuilder.buildPartial();
              }
              messageBodyCase_ = 5;
              break;
            }
            case 50: {
              ReportSensorData.Builder subBuilder = null;
              if (messageBodyCase_ == 6) {
                subBuilder = ((ReportSensorData) messageBody_).toBuilder();
              }
              messageBody_ =
                  input.readMessage(ReportSensorData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((ReportSensorData) messageBody_);
                messageBody_ = subBuilder.buildPartial();
              }
              messageBodyCase_ = 6;
              break;
            }
            case 58: {
              ReportSensorDataRsp.Builder subBuilder = null;
              if (messageBodyCase_ == 7) {
                subBuilder = ((ReportSensorDataRsp) messageBody_).toBuilder();
              }
              messageBody_ =
                  input.readMessage(ReportSensorDataRsp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((ReportSensorDataRsp) messageBody_);
                messageBody_ = subBuilder.buildPartial();
              }
              messageBodyCase_ = 7;
              break;
            }
            case 66: {
              ReportAlarm.Builder subBuilder = null;
              if (messageBodyCase_ == 8) {
                subBuilder = ((ReportAlarm) messageBody_).toBuilder();
              }
              messageBody_ =
                  input.readMessage(ReportAlarm.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((ReportAlarm) messageBody_);
                messageBody_ = subBuilder.buildPartial();
              }
              messageBodyCase_ = 8;
              break;
            }
            case 74: {
              ReportAlarmRsp.Builder subBuilder = null;
              if (messageBodyCase_ == 9) {
                subBuilder = ((ReportAlarmRsp) messageBody_).toBuilder();
              }
              messageBody_ =
                  input.readMessage(ReportAlarmRsp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((ReportAlarmRsp) messageBody_);
                messageBody_ = subBuilder.buildPartial();
              }
              messageBodyCase_ = 9;
              break;
            }
            case 82: {
              Catalog.Builder subBuilder = null;
              if (messageBodyCase_ == 10) {
                subBuilder = ((Catalog) messageBody_).toBuilder();
              }
              messageBody_ =
                  input.readMessage(Catalog.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((Catalog) messageBody_);
                messageBody_ = subBuilder.buildPartial();
              }
              messageBodyCase_ = 10;
              break;
            }
            case 90: {
              CatalogRsp.Builder subBuilder = null;
              if (messageBodyCase_ == 11) {
                subBuilder = ((CatalogRsp) messageBody_).toBuilder();
              }
              messageBody_ =
                  input.readMessage(CatalogRsp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((CatalogRsp) messageBody_);
                messageBody_ = subBuilder.buildPartial();
              }
              messageBodyCase_ = 11;
              break;
            }
            case 98: {
              UpdateTime.Builder subBuilder = null;
              if (messageBodyCase_ == 12) {
                subBuilder = ((UpdateTime) messageBody_).toBuilder();
              }
              messageBody_ =
                  input.readMessage(UpdateTime.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((UpdateTime) messageBody_);
                messageBody_ = subBuilder.buildPartial();
              }
              messageBodyCase_ = 12;
              break;
            }
            case 106: {
              UpdateTimeRsp.Builder subBuilder = null;
              if (messageBodyCase_ == 13) {
                subBuilder = ((UpdateTimeRsp) messageBody_).toBuilder();
              }
              messageBody_ =
                  input.readMessage(UpdateTimeRsp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((UpdateTimeRsp) messageBody_);
                messageBody_ = subBuilder.buildPartial();
              }
              messageBodyCase_ = 13;
              break;
            }
            case 114: {
              Control.Builder subBuilder = null;
              if (messageBodyCase_ == 14) {
                subBuilder = ((Control) messageBody_).toBuilder();
              }
              messageBody_ =
                  input.readMessage(Control.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((Control) messageBody_);
                messageBody_ = subBuilder.buildPartial();
              }
              messageBodyCase_ = 14;
              break;
            }
            case 122: {
              ControlRsp.Builder subBuilder = null;
              if (messageBodyCase_ == 15) {
                subBuilder = ((ControlRsp) messageBody_).toBuilder();
              }
              messageBody_ =
                  input.readMessage(ControlRsp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((ControlRsp) messageBody_);
                messageBody_ = subBuilder.buildPartial();
              }
              messageBodyCase_ = 15;
              break;
            }
            case 130: {
              ReportDeviceState.Builder subBuilder = null;
              if (messageBodyCase_ == 16) {
                subBuilder = ((ReportDeviceState) messageBody_).toBuilder();
              }
              messageBody_ =
                  input.readMessage(ReportDeviceState.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((ReportDeviceState) messageBody_);
                messageBody_ = subBuilder.buildPartial();
              }
              messageBodyCase_ = 16;
              break;
            }
            case 138: {
              ReportDeviceStateRsp.Builder subBuilder = null;
              if (messageBodyCase_ == 17) {
                subBuilder = ((ReportDeviceStateRsp) messageBody_).toBuilder();
              }
              messageBody_ =
                  input.readMessage(ReportDeviceStateRsp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((ReportDeviceStateRsp) messageBody_);
                messageBody_ = subBuilder.buildPartial();
              }
              messageBodyCase_ = 17;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MessageProtobuf.internal_static_PDGMessage_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MessageProtobuf.internal_static_PDGMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              PDGMessage.class, Builder.class);
    }

    private int messageBodyCase_ = 0;
    private Object messageBody_;
    public enum MessageBodyCase
        implements com.google.protobuf.Internal.EnumLite {
      REGISTER(2),
      REGISTERRSP(3),
      HEARTBEAT(4),
      HEARTBEATRSP(5),
      REPORTSENSORDATA(6),
      REPORTSENSORDATARSP(7),
      REPORTALARM(8),
      REPORTALARMRSP(9),
      CATALOG(10),
      CATALOGRSP(11),
      UPDATETIME(12),
      UPDATETIMERSP(13),
      CONTROL(14),
      CONTROLRSP(15),
      REPORTDEVICESTATE(16),
      REPORTDEVICESTATERSP(17),
      MESSAGEBODY_NOT_SET(0);
      private final int value;
      private MessageBodyCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static MessageBodyCase valueOf(int value) {
        return forNumber(value);
      }

      public static MessageBodyCase forNumber(int value) {
        switch (value) {
          case 2: return REGISTER;
          case 3: return REGISTERRSP;
          case 4: return HEARTBEAT;
          case 5: return HEARTBEATRSP;
          case 6: return REPORTSENSORDATA;
          case 7: return REPORTSENSORDATARSP;
          case 8: return REPORTALARM;
          case 9: return REPORTALARMRSP;
          case 10: return CATALOG;
          case 11: return CATALOGRSP;
          case 12: return UPDATETIME;
          case 13: return UPDATETIMERSP;
          case 14: return CONTROL;
          case 15: return CONTROLRSP;
          case 16: return REPORTDEVICESTATE;
          case 17: return REPORTDEVICESTATERSP;
          case 0: return MESSAGEBODY_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public MessageBodyCase
    getMessageBodyCase() {
      return MessageBodyCase.forNumber(
          messageBodyCase_);
    }

    public static final int PDGHEADER_FIELD_NUMBER = 1;
    private PDGHeader pDGHeader_;
    /**
     * <pre>
     * 消息头部
     * </pre>
     *
     * <code>.PDGHeader pDGHeader = 1;</code>
     */
    public boolean hasPDGHeader() {
      return pDGHeader_ != null;
    }
    /**
     * <pre>
     * 消息头部
     * </pre>
     *
     * <code>.PDGHeader pDGHeader = 1;</code>
     */
    public PDGHeader getPDGHeader() {
      return pDGHeader_ == null ? PDGHeader.getDefaultInstance() : pDGHeader_;
    }
    /**
     * <pre>
     * 消息头部
     * </pre>
     *
     * <code>.PDGHeader pDGHeader = 1;</code>
     */
    public PDGHeaderOrBuilder getPDGHeaderOrBuilder() {
      return getPDGHeader();
    }

    public static final int REGISTER_FIELD_NUMBER = 2;
    /**
     * <pre>
     *注册信息
     * </pre>
     *
     * <code>.Register register = 2;</code>
     */
    public Register getRegister() {
      if (messageBodyCase_ == 2) {
         return (Register) messageBody_;
      }
      return Register.getDefaultInstance();
    }
    /**
     * <pre>
     *注册信息
     * </pre>
     *
     * <code>.Register register = 2;</code>
     */
    public RegisterOrBuilder getRegisterOrBuilder() {
      if (messageBodyCase_ == 2) {
         return (Register) messageBody_;
      }
      return Register.getDefaultInstance();
    }

    public static final int REGISTERRSP_FIELD_NUMBER = 3;
    /**
     * <pre>
     *注册响应
     * </pre>
     *
     * <code>.RegisterRsp registerRsp = 3;</code>
     */
    public RegisterRsp getRegisterRsp() {
      if (messageBodyCase_ == 3) {
         return (RegisterRsp) messageBody_;
      }
      return RegisterRsp.getDefaultInstance();
    }
    /**
     * <pre>
     *注册响应
     * </pre>
     *
     * <code>.RegisterRsp registerRsp = 3;</code>
     */
    public RegisterRspOrBuilder getRegisterRspOrBuilder() {
      if (messageBodyCase_ == 3) {
         return (RegisterRsp) messageBody_;
      }
      return RegisterRsp.getDefaultInstance();
    }

    public static final int HEARTBEAT_FIELD_NUMBER = 4;
    /**
     * <pre>
     *心跳
     * </pre>
     *
     * <code>.Heartbeat heartbeat = 4;</code>
     */
    public Heartbeat getHeartbeat() {
      if (messageBodyCase_ == 4) {
         return (Heartbeat) messageBody_;
      }
      return Heartbeat.getDefaultInstance();
    }
    /**
     * <pre>
     *心跳
     * </pre>
     *
     * <code>.Heartbeat heartbeat = 4;</code>
     */
    public HeartbeatOrBuilder getHeartbeatOrBuilder() {
      if (messageBodyCase_ == 4) {
         return (Heartbeat) messageBody_;
      }
      return Heartbeat.getDefaultInstance();
    }

    public static final int HEARTBEATRSP_FIELD_NUMBER = 5;
    /**
     * <pre>
     *心跳响应
     * </pre>
     *
     * <code>.HeartbeatRsp HeartbeatRsp = 5;</code>
     */
    public HeartbeatRsp getHeartbeatRsp() {
      if (messageBodyCase_ == 5) {
         return (HeartbeatRsp) messageBody_;
      }
      return HeartbeatRsp.getDefaultInstance();
    }
    /**
     * <pre>
     *心跳响应
     * </pre>
     *
     * <code>.HeartbeatRsp HeartbeatRsp = 5;</code>
     */
    public HeartbeatRspOrBuilder getHeartbeatRspOrBuilder() {
      if (messageBodyCase_ == 5) {
         return (HeartbeatRsp) messageBody_;
      }
      return HeartbeatRsp.getDefaultInstance();
    }

    public static final int REPORTSENSORDATA_FIELD_NUMBER = 6;
    /**
     * <pre>
     *上报采集值
     * </pre>
     *
     * <code>.ReportSensorData reportSensorData = 6;</code>
     */
    public ReportSensorData getReportSensorData() {
      if (messageBodyCase_ == 6) {
         return (ReportSensorData) messageBody_;
      }
      return ReportSensorData.getDefaultInstance();
    }
    /**
     * <pre>
     *上报采集值
     * </pre>
     *
     * <code>.ReportSensorData reportSensorData = 6;</code>
     */
    public ReportSensorDataOrBuilder getReportSensorDataOrBuilder() {
      if (messageBodyCase_ == 6) {
         return (ReportSensorData) messageBody_;
      }
      return ReportSensorData.getDefaultInstance();
    }

    public static final int REPORTSENSORDATARSP_FIELD_NUMBER = 7;
    /**
     * <code>.ReportSensorDataRsp ReportSensorDataRsp = 7;</code>
     */
    public ReportSensorDataRsp getReportSensorDataRsp() {
      if (messageBodyCase_ == 7) {
         return (ReportSensorDataRsp) messageBody_;
      }
      return ReportSensorDataRsp.getDefaultInstance();
    }
    /**
     * <code>.ReportSensorDataRsp ReportSensorDataRsp = 7;</code>
     */
    public ReportSensorDataRspOrBuilder getReportSensorDataRspOrBuilder() {
      if (messageBodyCase_ == 7) {
         return (ReportSensorDataRsp) messageBody_;
      }
      return ReportSensorDataRsp.getDefaultInstance();
    }

    public static final int REPORTALARM_FIELD_NUMBER = 8;
    /**
     * <pre>
     *告警上报
     * </pre>
     *
     * <code>.ReportAlarm reportAlarm = 8;</code>
     */
    public ReportAlarm getReportAlarm() {
      if (messageBodyCase_ == 8) {
         return (ReportAlarm) messageBody_;
      }
      return ReportAlarm.getDefaultInstance();
    }
    /**
     * <pre>
     *告警上报
     * </pre>
     *
     * <code>.ReportAlarm reportAlarm = 8;</code>
     */
    public ReportAlarmOrBuilder getReportAlarmOrBuilder() {
      if (messageBodyCase_ == 8) {
         return (ReportAlarm) messageBody_;
      }
      return ReportAlarm.getDefaultInstance();
    }

    public static final int REPORTALARMRSP_FIELD_NUMBER = 9;
    /**
     * <code>.ReportAlarmRsp reportAlarmRsp = 9;</code>
     */
    public ReportAlarmRsp getReportAlarmRsp() {
      if (messageBodyCase_ == 9) {
         return (ReportAlarmRsp) messageBody_;
      }
      return ReportAlarmRsp.getDefaultInstance();
    }
    /**
     * <code>.ReportAlarmRsp reportAlarmRsp = 9;</code>
     */
    public ReportAlarmRspOrBuilder getReportAlarmRspOrBuilder() {
      if (messageBodyCase_ == 9) {
         return (ReportAlarmRsp) messageBody_;
      }
      return ReportAlarmRsp.getDefaultInstance();
    }

    public static final int CATALOG_FIELD_NUMBER = 10;
    /**
     * <pre>
     *上报设备列表
     * </pre>
     *
     * <code>.Catalog catalog = 10;</code>
     */
    public Catalog getCatalog() {
      if (messageBodyCase_ == 10) {
         return (Catalog) messageBody_;
      }
      return Catalog.getDefaultInstance();
    }
    /**
     * <pre>
     *上报设备列表
     * </pre>
     *
     * <code>.Catalog catalog = 10;</code>
     */
    public CatalogOrBuilder getCatalogOrBuilder() {
      if (messageBodyCase_ == 10) {
         return (Catalog) messageBody_;
      }
      return Catalog.getDefaultInstance();
    }

    public static final int CATALOGRSP_FIELD_NUMBER = 11;
    /**
     * <code>.CatalogRsp catalogRsp = 11;</code>
     */
    public CatalogRsp getCatalogRsp() {
      if (messageBodyCase_ == 11) {
         return (CatalogRsp) messageBody_;
      }
      return CatalogRsp.getDefaultInstance();
    }
    /**
     * <code>.CatalogRsp catalogRsp = 11;</code>
     */
    public CatalogRspOrBuilder getCatalogRspOrBuilder() {
      if (messageBodyCase_ == 11) {
         return (CatalogRsp) messageBody_;
      }
      return CatalogRsp.getDefaultInstance();
    }

    public static final int UPDATETIME_FIELD_NUMBER = 12;
    /**
     * <pre>
     *请求对时
     * </pre>
     *
     * <code>.UpdateTime updateTime = 12;</code>
     */
    public UpdateTime getUpdateTime() {
      if (messageBodyCase_ == 12) {
         return (UpdateTime) messageBody_;
      }
      return UpdateTime.getDefaultInstance();
    }
    /**
     * <pre>
     *请求对时
     * </pre>
     *
     * <code>.UpdateTime updateTime = 12;</code>
     */
    public UpdateTimeOrBuilder getUpdateTimeOrBuilder() {
      if (messageBodyCase_ == 12) {
         return (UpdateTime) messageBody_;
      }
      return UpdateTime.getDefaultInstance();
    }

    public static final int UPDATETIMERSP_FIELD_NUMBER = 13;
    /**
     * <code>.UpdateTimeRsp updateTimeRsp = 13;</code>
     */
    public UpdateTimeRsp getUpdateTimeRsp() {
      if (messageBodyCase_ == 13) {
         return (UpdateTimeRsp) messageBody_;
      }
      return UpdateTimeRsp.getDefaultInstance();
    }
    /**
     * <code>.UpdateTimeRsp updateTimeRsp = 13;</code>
     */
    public UpdateTimeRspOrBuilder getUpdateTimeRspOrBuilder() {
      if (messageBodyCase_ == 13) {
         return (UpdateTimeRsp) messageBody_;
      }
      return UpdateTimeRsp.getDefaultInstance();
    }

    public static final int CONTROL_FIELD_NUMBER = 14;
    /**
     * <pre>
     * 控制命令
     * </pre>
     *
     * <code>.Control control = 14;</code>
     */
    public Control getControl() {
      if (messageBodyCase_ == 14) {
         return (Control) messageBody_;
      }
      return Control.getDefaultInstance();
    }
    /**
     * <pre>
     * 控制命令
     * </pre>
     *
     * <code>.Control control = 14;</code>
     */
    public ControlOrBuilder getControlOrBuilder() {
      if (messageBodyCase_ == 14) {
         return (Control) messageBody_;
      }
      return Control.getDefaultInstance();
    }

    public static final int CONTROLRSP_FIELD_NUMBER = 15;
    /**
     * <code>.ControlRsp controlRsp = 15;</code>
     */
    public ControlRsp getControlRsp() {
      if (messageBodyCase_ == 15) {
         return (ControlRsp) messageBody_;
      }
      return ControlRsp.getDefaultInstance();
    }
    /**
     * <code>.ControlRsp controlRsp = 15;</code>
     */
    public ControlRspOrBuilder getControlRspOrBuilder() {
      if (messageBodyCase_ == 15) {
         return (ControlRsp) messageBody_;
      }
      return ControlRsp.getDefaultInstance();
    }

    public static final int REPORTDEVICESTATE_FIELD_NUMBER = 16;
    /**
     * <pre>
     * 设备状态上报
     * </pre>
     *
     * <code>.ReportDeviceState reportDeviceState = 16;</code>
     */
    public ReportDeviceState getReportDeviceState() {
      if (messageBodyCase_ == 16) {
         return (ReportDeviceState) messageBody_;
      }
      return ReportDeviceState.getDefaultInstance();
    }
    /**
     * <pre>
     * 设备状态上报
     * </pre>
     *
     * <code>.ReportDeviceState reportDeviceState = 16;</code>
     */
    public ReportDeviceStateOrBuilder getReportDeviceStateOrBuilder() {
      if (messageBodyCase_ == 16) {
         return (ReportDeviceState) messageBody_;
      }
      return ReportDeviceState.getDefaultInstance();
    }

    public static final int REPORTDEVICESTATERSP_FIELD_NUMBER = 17;
    /**
     * <code>.ReportDeviceStateRsp reportDeviceStateRsp = 17;</code>
     */
    public ReportDeviceStateRsp getReportDeviceStateRsp() {
      if (messageBodyCase_ == 17) {
         return (ReportDeviceStateRsp) messageBody_;
      }
      return ReportDeviceStateRsp.getDefaultInstance();
    }
    /**
     * <code>.ReportDeviceStateRsp reportDeviceStateRsp = 17;</code>
     */
    public ReportDeviceStateRspOrBuilder getReportDeviceStateRspOrBuilder() {
      if (messageBodyCase_ == 17) {
         return (ReportDeviceStateRsp) messageBody_;
      }
      return ReportDeviceStateRsp.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (pDGHeader_ != null) {
        output.writeMessage(1, getPDGHeader());
      }
      if (messageBodyCase_ == 2) {
        output.writeMessage(2, (Register) messageBody_);
      }
      if (messageBodyCase_ == 3) {
        output.writeMessage(3, (RegisterRsp) messageBody_);
      }
      if (messageBodyCase_ == 4) {
        output.writeMessage(4, (Heartbeat) messageBody_);
      }
      if (messageBodyCase_ == 5) {
        output.writeMessage(5, (HeartbeatRsp) messageBody_);
      }
      if (messageBodyCase_ == 6) {
        output.writeMessage(6, (ReportSensorData) messageBody_);
      }
      if (messageBodyCase_ == 7) {
        output.writeMessage(7, (ReportSensorDataRsp) messageBody_);
      }
      if (messageBodyCase_ == 8) {
        output.writeMessage(8, (ReportAlarm) messageBody_);
      }
      if (messageBodyCase_ == 9) {
        output.writeMessage(9, (ReportAlarmRsp) messageBody_);
      }
      if (messageBodyCase_ == 10) {
        output.writeMessage(10, (Catalog) messageBody_);
      }
      if (messageBodyCase_ == 11) {
        output.writeMessage(11, (CatalogRsp) messageBody_);
      }
      if (messageBodyCase_ == 12) {
        output.writeMessage(12, (UpdateTime) messageBody_);
      }
      if (messageBodyCase_ == 13) {
        output.writeMessage(13, (UpdateTimeRsp) messageBody_);
      }
      if (messageBodyCase_ == 14) {
        output.writeMessage(14, (Control) messageBody_);
      }
      if (messageBodyCase_ == 15) {
        output.writeMessage(15, (ControlRsp) messageBody_);
      }
      if (messageBodyCase_ == 16) {
        output.writeMessage(16, (ReportDeviceState) messageBody_);
      }
      if (messageBodyCase_ == 17) {
        output.writeMessage(17, (ReportDeviceStateRsp) messageBody_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (pDGHeader_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPDGHeader());
      }
      if (messageBodyCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (Register) messageBody_);
      }
      if (messageBodyCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (RegisterRsp) messageBody_);
      }
      if (messageBodyCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (Heartbeat) messageBody_);
      }
      if (messageBodyCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (HeartbeatRsp) messageBody_);
      }
      if (messageBodyCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (ReportSensorData) messageBody_);
      }
      if (messageBodyCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (ReportSensorDataRsp) messageBody_);
      }
      if (messageBodyCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, (ReportAlarm) messageBody_);
      }
      if (messageBodyCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, (ReportAlarmRsp) messageBody_);
      }
      if (messageBodyCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, (Catalog) messageBody_);
      }
      if (messageBodyCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, (CatalogRsp) messageBody_);
      }
      if (messageBodyCase_ == 12) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, (UpdateTime) messageBody_);
      }
      if (messageBodyCase_ == 13) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, (UpdateTimeRsp) messageBody_);
      }
      if (messageBodyCase_ == 14) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, (Control) messageBody_);
      }
      if (messageBodyCase_ == 15) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, (ControlRsp) messageBody_);
      }
      if (messageBodyCase_ == 16) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, (ReportDeviceState) messageBody_);
      }
      if (messageBodyCase_ == 17) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, (ReportDeviceStateRsp) messageBody_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof PDGMessage)) {
        return super.equals(obj);
      }
      PDGMessage other = (PDGMessage) obj;

      boolean result = true;
      result = result && (hasPDGHeader() == other.hasPDGHeader());
      if (hasPDGHeader()) {
        result = result && getPDGHeader()
            .equals(other.getPDGHeader());
      }
      result = result && getMessageBodyCase().equals(
          other.getMessageBodyCase());
      if (!result) return false;
      switch (messageBodyCase_) {
        case 2:
          result = result && getRegister()
              .equals(other.getRegister());
          break;
        case 3:
          result = result && getRegisterRsp()
              .equals(other.getRegisterRsp());
          break;
        case 4:
          result = result && getHeartbeat()
              .equals(other.getHeartbeat());
          break;
        case 5:
          result = result && getHeartbeatRsp()
              .equals(other.getHeartbeatRsp());
          break;
        case 6:
          result = result && getReportSensorData()
              .equals(other.getReportSensorData());
          break;
        case 7:
          result = result && getReportSensorDataRsp()
              .equals(other.getReportSensorDataRsp());
          break;
        case 8:
          result = result && getReportAlarm()
              .equals(other.getReportAlarm());
          break;
        case 9:
          result = result && getReportAlarmRsp()
              .equals(other.getReportAlarmRsp());
          break;
        case 10:
          result = result && getCatalog()
              .equals(other.getCatalog());
          break;
        case 11:
          result = result && getCatalogRsp()
              .equals(other.getCatalogRsp());
          break;
        case 12:
          result = result && getUpdateTime()
              .equals(other.getUpdateTime());
          break;
        case 13:
          result = result && getUpdateTimeRsp()
              .equals(other.getUpdateTimeRsp());
          break;
        case 14:
          result = result && getControl()
              .equals(other.getControl());
          break;
        case 15:
          result = result && getControlRsp()
              .equals(other.getControlRsp());
          break;
        case 16:
          result = result && getReportDeviceState()
              .equals(other.getReportDeviceState());
          break;
        case 17:
          result = result && getReportDeviceStateRsp()
              .equals(other.getReportDeviceStateRsp());
          break;
        case 0:
        default:
      }
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPDGHeader()) {
        hash = (37 * hash) + PDGHEADER_FIELD_NUMBER;
        hash = (53 * hash) + getPDGHeader().hashCode();
      }
      switch (messageBodyCase_) {
        case 2:
          hash = (37 * hash) + REGISTER_FIELD_NUMBER;
          hash = (53 * hash) + getRegister().hashCode();
          break;
        case 3:
          hash = (37 * hash) + REGISTERRSP_FIELD_NUMBER;
          hash = (53 * hash) + getRegisterRsp().hashCode();
          break;
        case 4:
          hash = (37 * hash) + HEARTBEAT_FIELD_NUMBER;
          hash = (53 * hash) + getHeartbeat().hashCode();
          break;
        case 5:
          hash = (37 * hash) + HEARTBEATRSP_FIELD_NUMBER;
          hash = (53 * hash) + getHeartbeatRsp().hashCode();
          break;
        case 6:
          hash = (37 * hash) + REPORTSENSORDATA_FIELD_NUMBER;
          hash = (53 * hash) + getReportSensorData().hashCode();
          break;
        case 7:
          hash = (37 * hash) + REPORTSENSORDATARSP_FIELD_NUMBER;
          hash = (53 * hash) + getReportSensorDataRsp().hashCode();
          break;
        case 8:
          hash = (37 * hash) + REPORTALARM_FIELD_NUMBER;
          hash = (53 * hash) + getReportAlarm().hashCode();
          break;
        case 9:
          hash = (37 * hash) + REPORTALARMRSP_FIELD_NUMBER;
          hash = (53 * hash) + getReportAlarmRsp().hashCode();
          break;
        case 10:
          hash = (37 * hash) + CATALOG_FIELD_NUMBER;
          hash = (53 * hash) + getCatalog().hashCode();
          break;
        case 11:
          hash = (37 * hash) + CATALOGRSP_FIELD_NUMBER;
          hash = (53 * hash) + getCatalogRsp().hashCode();
          break;
        case 12:
          hash = (37 * hash) + UPDATETIME_FIELD_NUMBER;
          hash = (53 * hash) + getUpdateTime().hashCode();
          break;
        case 13:
          hash = (37 * hash) + UPDATETIMERSP_FIELD_NUMBER;
          hash = (53 * hash) + getUpdateTimeRsp().hashCode();
          break;
        case 14:
          hash = (37 * hash) + CONTROL_FIELD_NUMBER;
          hash = (53 * hash) + getControl().hashCode();
          break;
        case 15:
          hash = (37 * hash) + CONTROLRSP_FIELD_NUMBER;
          hash = (53 * hash) + getControlRsp().hashCode();
          break;
        case 16:
          hash = (37 * hash) + REPORTDEVICESTATE_FIELD_NUMBER;
          hash = (53 * hash) + getReportDeviceState().hashCode();
          break;
        case 17:
          hash = (37 * hash) + REPORTDEVICESTATERSP_FIELD_NUMBER;
          hash = (53 * hash) + getReportDeviceStateRsp().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static PDGMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PDGMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PDGMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PDGMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PDGMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PDGMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static PDGMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static PDGMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static PDGMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PDGMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(PDGMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 站端与主站传递的消息体
     * </pre>
     *
     * Protobuf type {@code PDGMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PDGMessage)
        PDGMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MessageProtobuf.internal_static_PDGMessage_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MessageProtobuf.internal_static_PDGMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                PDGMessage.class, Builder.class);
      }

      // Construct using shenzhen.teamway.pdg.protobuf.MessageProtobuf.PDGMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (pDGHeaderBuilder_ == null) {
          pDGHeader_ = null;
        } else {
          pDGHeader_ = null;
          pDGHeaderBuilder_ = null;
        }
        messageBodyCase_ = 0;
        messageBody_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MessageProtobuf.internal_static_PDGMessage_descriptor;
      }

      public PDGMessage getDefaultInstanceForType() {
        return PDGMessage.getDefaultInstance();
      }

      public PDGMessage build() {
        PDGMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public PDGMessage buildPartial() {
        PDGMessage result = new PDGMessage(this);
        if (pDGHeaderBuilder_ == null) {
          result.pDGHeader_ = pDGHeader_;
        } else {
          result.pDGHeader_ = pDGHeaderBuilder_.build();
        }
        if (messageBodyCase_ == 2) {
          if (registerBuilder_ == null) {
            result.messageBody_ = messageBody_;
          } else {
            result.messageBody_ = registerBuilder_.build();
          }
        }
        if (messageBodyCase_ == 3) {
          if (registerRspBuilder_ == null) {
            result.messageBody_ = messageBody_;
          } else {
            result.messageBody_ = registerRspBuilder_.build();
          }
        }
        if (messageBodyCase_ == 4) {
          if (heartbeatBuilder_ == null) {
            result.messageBody_ = messageBody_;
          } else {
            result.messageBody_ = heartbeatBuilder_.build();
          }
        }
        if (messageBodyCase_ == 5) {
          if (heartbeatRspBuilder_ == null) {
            result.messageBody_ = messageBody_;
          } else {
            result.messageBody_ = heartbeatRspBuilder_.build();
          }
        }
        if (messageBodyCase_ == 6) {
          if (reportSensorDataBuilder_ == null) {
            result.messageBody_ = messageBody_;
          } else {
            result.messageBody_ = reportSensorDataBuilder_.build();
          }
        }
        if (messageBodyCase_ == 7) {
          if (reportSensorDataRspBuilder_ == null) {
            result.messageBody_ = messageBody_;
          } else {
            result.messageBody_ = reportSensorDataRspBuilder_.build();
          }
        }
        if (messageBodyCase_ == 8) {
          if (reportAlarmBuilder_ == null) {
            result.messageBody_ = messageBody_;
          } else {
            result.messageBody_ = reportAlarmBuilder_.build();
          }
        }
        if (messageBodyCase_ == 9) {
          if (reportAlarmRspBuilder_ == null) {
            result.messageBody_ = messageBody_;
          } else {
            result.messageBody_ = reportAlarmRspBuilder_.build();
          }
        }
        if (messageBodyCase_ == 10) {
          if (catalogBuilder_ == null) {
            result.messageBody_ = messageBody_;
          } else {
            result.messageBody_ = catalogBuilder_.build();
          }
        }
        if (messageBodyCase_ == 11) {
          if (catalogRspBuilder_ == null) {
            result.messageBody_ = messageBody_;
          } else {
            result.messageBody_ = catalogRspBuilder_.build();
          }
        }
        if (messageBodyCase_ == 12) {
          if (updateTimeBuilder_ == null) {
            result.messageBody_ = messageBody_;
          } else {
            result.messageBody_ = updateTimeBuilder_.build();
          }
        }
        if (messageBodyCase_ == 13) {
          if (updateTimeRspBuilder_ == null) {
            result.messageBody_ = messageBody_;
          } else {
            result.messageBody_ = updateTimeRspBuilder_.build();
          }
        }
        if (messageBodyCase_ == 14) {
          if (controlBuilder_ == null) {
            result.messageBody_ = messageBody_;
          } else {
            result.messageBody_ = controlBuilder_.build();
          }
        }
        if (messageBodyCase_ == 15) {
          if (controlRspBuilder_ == null) {
            result.messageBody_ = messageBody_;
          } else {
            result.messageBody_ = controlRspBuilder_.build();
          }
        }
        if (messageBodyCase_ == 16) {
          if (reportDeviceStateBuilder_ == null) {
            result.messageBody_ = messageBody_;
          } else {
            result.messageBody_ = reportDeviceStateBuilder_.build();
          }
        }
        if (messageBodyCase_ == 17) {
          if (reportDeviceStateRspBuilder_ == null) {
            result.messageBody_ = messageBody_;
          } else {
            result.messageBody_ = reportDeviceStateRspBuilder_.build();
          }
        }
        result.messageBodyCase_ = messageBodyCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof PDGMessage) {
          return mergeFrom((PDGMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(PDGMessage other) {
        if (other == PDGMessage.getDefaultInstance()) return this;
        if (other.hasPDGHeader()) {
          mergePDGHeader(other.getPDGHeader());
        }
        switch (other.getMessageBodyCase()) {
          case REGISTER: {
            mergeRegister(other.getRegister());
            break;
          }
          case REGISTERRSP: {
            mergeRegisterRsp(other.getRegisterRsp());
            break;
          }
          case HEARTBEAT: {
            mergeHeartbeat(other.getHeartbeat());
            break;
          }
          case HEARTBEATRSP: {
            mergeHeartbeatRsp(other.getHeartbeatRsp());
            break;
          }
          case REPORTSENSORDATA: {
            mergeReportSensorData(other.getReportSensorData());
            break;
          }
          case REPORTSENSORDATARSP: {
            mergeReportSensorDataRsp(other.getReportSensorDataRsp());
            break;
          }
          case REPORTALARM: {
            mergeReportAlarm(other.getReportAlarm());
            break;
          }
          case REPORTALARMRSP: {
            mergeReportAlarmRsp(other.getReportAlarmRsp());
            break;
          }
          case CATALOG: {
            mergeCatalog(other.getCatalog());
            break;
          }
          case CATALOGRSP: {
            mergeCatalogRsp(other.getCatalogRsp());
            break;
          }
          case UPDATETIME: {
            mergeUpdateTime(other.getUpdateTime());
            break;
          }
          case UPDATETIMERSP: {
            mergeUpdateTimeRsp(other.getUpdateTimeRsp());
            break;
          }
          case CONTROL: {
            mergeControl(other.getControl());
            break;
          }
          case CONTROLRSP: {
            mergeControlRsp(other.getControlRsp());
            break;
          }
          case REPORTDEVICESTATE: {
            mergeReportDeviceState(other.getReportDeviceState());
            break;
          }
          case REPORTDEVICESTATERSP: {
            mergeReportDeviceStateRsp(other.getReportDeviceStateRsp());
            break;
          }
          case MESSAGEBODY_NOT_SET: {
            break;
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        PDGMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (PDGMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int messageBodyCase_ = 0;
      private Object messageBody_;
      public MessageBodyCase
          getMessageBodyCase() {
        return MessageBodyCase.forNumber(
            messageBodyCase_);
      }

      public Builder clearMessageBody() {
        messageBodyCase_ = 0;
        messageBody_ = null;
        onChanged();
        return this;
      }


      private PDGHeader pDGHeader_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          PDGHeader, PDGHeader.Builder, PDGHeaderOrBuilder> pDGHeaderBuilder_;
      /**
       * <pre>
       * 消息头部
       * </pre>
       *
       * <code>.PDGHeader pDGHeader = 1;</code>
       */
      public boolean hasPDGHeader() {
        return pDGHeaderBuilder_ != null || pDGHeader_ != null;
      }
      /**
       * <pre>
       * 消息头部
       * </pre>
       *
       * <code>.PDGHeader pDGHeader = 1;</code>
       */
      public PDGHeader getPDGHeader() {
        if (pDGHeaderBuilder_ == null) {
          return pDGHeader_ == null ? PDGHeader.getDefaultInstance() : pDGHeader_;
        } else {
          return pDGHeaderBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 消息头部
       * </pre>
       *
       * <code>.PDGHeader pDGHeader = 1;</code>
       */
      public Builder setPDGHeader(PDGHeader value) {
        if (pDGHeaderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pDGHeader_ = value;
          onChanged();
        } else {
          pDGHeaderBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 消息头部
       * </pre>
       *
       * <code>.PDGHeader pDGHeader = 1;</code>
       */
      public Builder setPDGHeader(
          PDGHeader.Builder builderForValue) {
        if (pDGHeaderBuilder_ == null) {
          pDGHeader_ = builderForValue.build();
          onChanged();
        } else {
          pDGHeaderBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 消息头部
       * </pre>
       *
       * <code>.PDGHeader pDGHeader = 1;</code>
       */
      public Builder mergePDGHeader(PDGHeader value) {
        if (pDGHeaderBuilder_ == null) {
          if (pDGHeader_ != null) {
            pDGHeader_ =
              PDGHeader.newBuilder(pDGHeader_).mergeFrom(value).buildPartial();
          } else {
            pDGHeader_ = value;
          }
          onChanged();
        } else {
          pDGHeaderBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 消息头部
       * </pre>
       *
       * <code>.PDGHeader pDGHeader = 1;</code>
       */
      public Builder clearPDGHeader() {
        if (pDGHeaderBuilder_ == null) {
          pDGHeader_ = null;
          onChanged();
        } else {
          pDGHeader_ = null;
          pDGHeaderBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 消息头部
       * </pre>
       *
       * <code>.PDGHeader pDGHeader = 1;</code>
       */
      public PDGHeader.Builder getPDGHeaderBuilder() {
        
        onChanged();
        return getPDGHeaderFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 消息头部
       * </pre>
       *
       * <code>.PDGHeader pDGHeader = 1;</code>
       */
      public PDGHeaderOrBuilder getPDGHeaderOrBuilder() {
        if (pDGHeaderBuilder_ != null) {
          return pDGHeaderBuilder_.getMessageOrBuilder();
        } else {
          return pDGHeader_ == null ?
              PDGHeader.getDefaultInstance() : pDGHeader_;
        }
      }
      /**
       * <pre>
       * 消息头部
       * </pre>
       *
       * <code>.PDGHeader pDGHeader = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          PDGHeader, PDGHeader.Builder, PDGHeaderOrBuilder>
          getPDGHeaderFieldBuilder() {
        if (pDGHeaderBuilder_ == null) {
          pDGHeaderBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              PDGHeader, PDGHeader.Builder, PDGHeaderOrBuilder>(
                  getPDGHeader(),
                  getParentForChildren(),
                  isClean());
          pDGHeader_ = null;
        }
        return pDGHeaderBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          Register, Register.Builder, RegisterOrBuilder> registerBuilder_;
      /**
       * <pre>
       *注册信息
       * </pre>
       *
       * <code>.Register register = 2;</code>
       */
      public Register getRegister() {
        if (registerBuilder_ == null) {
          if (messageBodyCase_ == 2) {
            return (Register) messageBody_;
          }
          return Register.getDefaultInstance();
        } else {
          if (messageBodyCase_ == 2) {
            return registerBuilder_.getMessage();
          }
          return Register.getDefaultInstance();
        }
      }
      /**
       * <pre>
       *注册信息
       * </pre>
       *
       * <code>.Register register = 2;</code>
       */
      public Builder setRegister(Register value) {
        if (registerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          messageBody_ = value;
          onChanged();
        } else {
          registerBuilder_.setMessage(value);
        }
        messageBodyCase_ = 2;
        return this;
      }
      /**
       * <pre>
       *注册信息
       * </pre>
       *
       * <code>.Register register = 2;</code>
       */
      public Builder setRegister(
          Register.Builder builderForValue) {
        if (registerBuilder_ == null) {
          messageBody_ = builderForValue.build();
          onChanged();
        } else {
          registerBuilder_.setMessage(builderForValue.build());
        }
        messageBodyCase_ = 2;
        return this;
      }
      /**
       * <pre>
       *注册信息
       * </pre>
       *
       * <code>.Register register = 2;</code>
       */
      public Builder mergeRegister(Register value) {
        if (registerBuilder_ == null) {
          if (messageBodyCase_ == 2 &&
              messageBody_ != Register.getDefaultInstance()) {
            messageBody_ = Register.newBuilder((Register) messageBody_)
                .mergeFrom(value).buildPartial();
          } else {
            messageBody_ = value;
          }
          onChanged();
        } else {
          if (messageBodyCase_ == 2) {
            registerBuilder_.mergeFrom(value);
          }
          registerBuilder_.setMessage(value);
        }
        messageBodyCase_ = 2;
        return this;
      }
      /**
       * <pre>
       *注册信息
       * </pre>
       *
       * <code>.Register register = 2;</code>
       */
      public Builder clearRegister() {
        if (registerBuilder_ == null) {
          if (messageBodyCase_ == 2) {
            messageBodyCase_ = 0;
            messageBody_ = null;
            onChanged();
          }
        } else {
          if (messageBodyCase_ == 2) {
            messageBodyCase_ = 0;
            messageBody_ = null;
          }
          registerBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *注册信息
       * </pre>
       *
       * <code>.Register register = 2;</code>
       */
      public Register.Builder getRegisterBuilder() {
        return getRegisterFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *注册信息
       * </pre>
       *
       * <code>.Register register = 2;</code>
       */
      public RegisterOrBuilder getRegisterOrBuilder() {
        if ((messageBodyCase_ == 2) && (registerBuilder_ != null)) {
          return registerBuilder_.getMessageOrBuilder();
        } else {
          if (messageBodyCase_ == 2) {
            return (Register) messageBody_;
          }
          return Register.getDefaultInstance();
        }
      }
      /**
       * <pre>
       *注册信息
       * </pre>
       *
       * <code>.Register register = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Register, Register.Builder, RegisterOrBuilder>
          getRegisterFieldBuilder() {
        if (registerBuilder_ == null) {
          if (!(messageBodyCase_ == 2)) {
            messageBody_ = Register.getDefaultInstance();
          }
          registerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Register, Register.Builder, RegisterOrBuilder>(
                  (Register) messageBody_,
                  getParentForChildren(),
                  isClean());
          messageBody_ = null;
        }
        messageBodyCase_ = 2;
        onChanged();;
        return registerBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          RegisterRsp, RegisterRsp.Builder, RegisterRspOrBuilder> registerRspBuilder_;
      /**
       * <pre>
       *注册响应
       * </pre>
       *
       * <code>.RegisterRsp registerRsp = 3;</code>
       */
      public RegisterRsp getRegisterRsp() {
        if (registerRspBuilder_ == null) {
          if (messageBodyCase_ == 3) {
            return (RegisterRsp) messageBody_;
          }
          return RegisterRsp.getDefaultInstance();
        } else {
          if (messageBodyCase_ == 3) {
            return registerRspBuilder_.getMessage();
          }
          return RegisterRsp.getDefaultInstance();
        }
      }
      /**
       * <pre>
       *注册响应
       * </pre>
       *
       * <code>.RegisterRsp registerRsp = 3;</code>
       */
      public Builder setRegisterRsp(RegisterRsp value) {
        if (registerRspBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          messageBody_ = value;
          onChanged();
        } else {
          registerRspBuilder_.setMessage(value);
        }
        messageBodyCase_ = 3;
        return this;
      }
      /**
       * <pre>
       *注册响应
       * </pre>
       *
       * <code>.RegisterRsp registerRsp = 3;</code>
       */
      public Builder setRegisterRsp(
          RegisterRsp.Builder builderForValue) {
        if (registerRspBuilder_ == null) {
          messageBody_ = builderForValue.build();
          onChanged();
        } else {
          registerRspBuilder_.setMessage(builderForValue.build());
        }
        messageBodyCase_ = 3;
        return this;
      }
      /**
       * <pre>
       *注册响应
       * </pre>
       *
       * <code>.RegisterRsp registerRsp = 3;</code>
       */
      public Builder mergeRegisterRsp(RegisterRsp value) {
        if (registerRspBuilder_ == null) {
          if (messageBodyCase_ == 3 &&
              messageBody_ != RegisterRsp.getDefaultInstance()) {
            messageBody_ = RegisterRsp.newBuilder((RegisterRsp) messageBody_)
                .mergeFrom(value).buildPartial();
          } else {
            messageBody_ = value;
          }
          onChanged();
        } else {
          if (messageBodyCase_ == 3) {
            registerRspBuilder_.mergeFrom(value);
          }
          registerRspBuilder_.setMessage(value);
        }
        messageBodyCase_ = 3;
        return this;
      }
      /**
       * <pre>
       *注册响应
       * </pre>
       *
       * <code>.RegisterRsp registerRsp = 3;</code>
       */
      public Builder clearRegisterRsp() {
        if (registerRspBuilder_ == null) {
          if (messageBodyCase_ == 3) {
            messageBodyCase_ = 0;
            messageBody_ = null;
            onChanged();
          }
        } else {
          if (messageBodyCase_ == 3) {
            messageBodyCase_ = 0;
            messageBody_ = null;
          }
          registerRspBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *注册响应
       * </pre>
       *
       * <code>.RegisterRsp registerRsp = 3;</code>
       */
      public RegisterRsp.Builder getRegisterRspBuilder() {
        return getRegisterRspFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *注册响应
       * </pre>
       *
       * <code>.RegisterRsp registerRsp = 3;</code>
       */
      public RegisterRspOrBuilder getRegisterRspOrBuilder() {
        if ((messageBodyCase_ == 3) && (registerRspBuilder_ != null)) {
          return registerRspBuilder_.getMessageOrBuilder();
        } else {
          if (messageBodyCase_ == 3) {
            return (RegisterRsp) messageBody_;
          }
          return RegisterRsp.getDefaultInstance();
        }
      }
      /**
       * <pre>
       *注册响应
       * </pre>
       *
       * <code>.RegisterRsp registerRsp = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          RegisterRsp, RegisterRsp.Builder, RegisterRspOrBuilder>
          getRegisterRspFieldBuilder() {
        if (registerRspBuilder_ == null) {
          if (!(messageBodyCase_ == 3)) {
            messageBody_ = RegisterRsp.getDefaultInstance();
          }
          registerRspBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              RegisterRsp, RegisterRsp.Builder, RegisterRspOrBuilder>(
                  (RegisterRsp) messageBody_,
                  getParentForChildren(),
                  isClean());
          messageBody_ = null;
        }
        messageBodyCase_ = 3;
        onChanged();;
        return registerRspBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          Heartbeat, Heartbeat.Builder, HeartbeatOrBuilder> heartbeatBuilder_;
      /**
       * <pre>
       *心跳
       * </pre>
       *
       * <code>.Heartbeat heartbeat = 4;</code>
       */
      public Heartbeat getHeartbeat() {
        if (heartbeatBuilder_ == null) {
          if (messageBodyCase_ == 4) {
            return (Heartbeat) messageBody_;
          }
          return Heartbeat.getDefaultInstance();
        } else {
          if (messageBodyCase_ == 4) {
            return heartbeatBuilder_.getMessage();
          }
          return Heartbeat.getDefaultInstance();
        }
      }
      /**
       * <pre>
       *心跳
       * </pre>
       *
       * <code>.Heartbeat heartbeat = 4;</code>
       */
      public Builder setHeartbeat(Heartbeat value) {
        if (heartbeatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          messageBody_ = value;
          onChanged();
        } else {
          heartbeatBuilder_.setMessage(value);
        }
        messageBodyCase_ = 4;
        return this;
      }
      /**
       * <pre>
       *心跳
       * </pre>
       *
       * <code>.Heartbeat heartbeat = 4;</code>
       */
      public Builder setHeartbeat(
          Heartbeat.Builder builderForValue) {
        if (heartbeatBuilder_ == null) {
          messageBody_ = builderForValue.build();
          onChanged();
        } else {
          heartbeatBuilder_.setMessage(builderForValue.build());
        }
        messageBodyCase_ = 4;
        return this;
      }
      /**
       * <pre>
       *心跳
       * </pre>
       *
       * <code>.Heartbeat heartbeat = 4;</code>
       */
      public Builder mergeHeartbeat(Heartbeat value) {
        if (heartbeatBuilder_ == null) {
          if (messageBodyCase_ == 4 &&
              messageBody_ != Heartbeat.getDefaultInstance()) {
            messageBody_ = Heartbeat.newBuilder((Heartbeat) messageBody_)
                .mergeFrom(value).buildPartial();
          } else {
            messageBody_ = value;
          }
          onChanged();
        } else {
          if (messageBodyCase_ == 4) {
            heartbeatBuilder_.mergeFrom(value);
          }
          heartbeatBuilder_.setMessage(value);
        }
        messageBodyCase_ = 4;
        return this;
      }
      /**
       * <pre>
       *心跳
       * </pre>
       *
       * <code>.Heartbeat heartbeat = 4;</code>
       */
      public Builder clearHeartbeat() {
        if (heartbeatBuilder_ == null) {
          if (messageBodyCase_ == 4) {
            messageBodyCase_ = 0;
            messageBody_ = null;
            onChanged();
          }
        } else {
          if (messageBodyCase_ == 4) {
            messageBodyCase_ = 0;
            messageBody_ = null;
          }
          heartbeatBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *心跳
       * </pre>
       *
       * <code>.Heartbeat heartbeat = 4;</code>
       */
      public Heartbeat.Builder getHeartbeatBuilder() {
        return getHeartbeatFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *心跳
       * </pre>
       *
       * <code>.Heartbeat heartbeat = 4;</code>
       */
      public HeartbeatOrBuilder getHeartbeatOrBuilder() {
        if ((messageBodyCase_ == 4) && (heartbeatBuilder_ != null)) {
          return heartbeatBuilder_.getMessageOrBuilder();
        } else {
          if (messageBodyCase_ == 4) {
            return (Heartbeat) messageBody_;
          }
          return Heartbeat.getDefaultInstance();
        }
      }
      /**
       * <pre>
       *心跳
       * </pre>
       *
       * <code>.Heartbeat heartbeat = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Heartbeat, Heartbeat.Builder, HeartbeatOrBuilder>
          getHeartbeatFieldBuilder() {
        if (heartbeatBuilder_ == null) {
          if (!(messageBodyCase_ == 4)) {
            messageBody_ = Heartbeat.getDefaultInstance();
          }
          heartbeatBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Heartbeat, Heartbeat.Builder, HeartbeatOrBuilder>(
                  (Heartbeat) messageBody_,
                  getParentForChildren(),
                  isClean());
          messageBody_ = null;
        }
        messageBodyCase_ = 4;
        onChanged();;
        return heartbeatBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          HeartbeatRsp, HeartbeatRsp.Builder, HeartbeatRspOrBuilder> heartbeatRspBuilder_;
      /**
       * <pre>
       *心跳响应
       * </pre>
       *
       * <code>.HeartbeatRsp HeartbeatRsp = 5;</code>
       */
      public HeartbeatRsp getHeartbeatRsp() {
        if (heartbeatRspBuilder_ == null) {
          if (messageBodyCase_ == 5) {
            return (HeartbeatRsp) messageBody_;
          }
          return HeartbeatRsp.getDefaultInstance();
        } else {
          if (messageBodyCase_ == 5) {
            return heartbeatRspBuilder_.getMessage();
          }
          return HeartbeatRsp.getDefaultInstance();
        }
      }
      /**
       * <pre>
       *心跳响应
       * </pre>
       *
       * <code>.HeartbeatRsp HeartbeatRsp = 5;</code>
       */
      public Builder setHeartbeatRsp(HeartbeatRsp value) {
        if (heartbeatRspBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          messageBody_ = value;
          onChanged();
        } else {
          heartbeatRspBuilder_.setMessage(value);
        }
        messageBodyCase_ = 5;
        return this;
      }
      /**
       * <pre>
       *心跳响应
       * </pre>
       *
       * <code>.HeartbeatRsp HeartbeatRsp = 5;</code>
       */
      public Builder setHeartbeatRsp(
          HeartbeatRsp.Builder builderForValue) {
        if (heartbeatRspBuilder_ == null) {
          messageBody_ = builderForValue.build();
          onChanged();
        } else {
          heartbeatRspBuilder_.setMessage(builderForValue.build());
        }
        messageBodyCase_ = 5;
        return this;
      }
      /**
       * <pre>
       *心跳响应
       * </pre>
       *
       * <code>.HeartbeatRsp HeartbeatRsp = 5;</code>
       */
      public Builder mergeHeartbeatRsp(HeartbeatRsp value) {
        if (heartbeatRspBuilder_ == null) {
          if (messageBodyCase_ == 5 &&
              messageBody_ != HeartbeatRsp.getDefaultInstance()) {
            messageBody_ = HeartbeatRsp.newBuilder((HeartbeatRsp) messageBody_)
                .mergeFrom(value).buildPartial();
          } else {
            messageBody_ = value;
          }
          onChanged();
        } else {
          if (messageBodyCase_ == 5) {
            heartbeatRspBuilder_.mergeFrom(value);
          }
          heartbeatRspBuilder_.setMessage(value);
        }
        messageBodyCase_ = 5;
        return this;
      }
      /**
       * <pre>
       *心跳响应
       * </pre>
       *
       * <code>.HeartbeatRsp HeartbeatRsp = 5;</code>
       */
      public Builder clearHeartbeatRsp() {
        if (heartbeatRspBuilder_ == null) {
          if (messageBodyCase_ == 5) {
            messageBodyCase_ = 0;
            messageBody_ = null;
            onChanged();
          }
        } else {
          if (messageBodyCase_ == 5) {
            messageBodyCase_ = 0;
            messageBody_ = null;
          }
          heartbeatRspBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *心跳响应
       * </pre>
       *
       * <code>.HeartbeatRsp HeartbeatRsp = 5;</code>
       */
      public HeartbeatRsp.Builder getHeartbeatRspBuilder() {
        return getHeartbeatRspFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *心跳响应
       * </pre>
       *
       * <code>.HeartbeatRsp HeartbeatRsp = 5;</code>
       */
      public HeartbeatRspOrBuilder getHeartbeatRspOrBuilder() {
        if ((messageBodyCase_ == 5) && (heartbeatRspBuilder_ != null)) {
          return heartbeatRspBuilder_.getMessageOrBuilder();
        } else {
          if (messageBodyCase_ == 5) {
            return (HeartbeatRsp) messageBody_;
          }
          return HeartbeatRsp.getDefaultInstance();
        }
      }
      /**
       * <pre>
       *心跳响应
       * </pre>
       *
       * <code>.HeartbeatRsp HeartbeatRsp = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          HeartbeatRsp, HeartbeatRsp.Builder, HeartbeatRspOrBuilder>
          getHeartbeatRspFieldBuilder() {
        if (heartbeatRspBuilder_ == null) {
          if (!(messageBodyCase_ == 5)) {
            messageBody_ = HeartbeatRsp.getDefaultInstance();
          }
          heartbeatRspBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              HeartbeatRsp, HeartbeatRsp.Builder, HeartbeatRspOrBuilder>(
                  (HeartbeatRsp) messageBody_,
                  getParentForChildren(),
                  isClean());
          messageBody_ = null;
        }
        messageBodyCase_ = 5;
        onChanged();;
        return heartbeatRspBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          ReportSensorData, ReportSensorData.Builder, ReportSensorDataOrBuilder> reportSensorDataBuilder_;
      /**
       * <pre>
       *上报采集值
       * </pre>
       *
       * <code>.ReportSensorData reportSensorData = 6;</code>
       */
      public ReportSensorData getReportSensorData() {
        if (reportSensorDataBuilder_ == null) {
          if (messageBodyCase_ == 6) {
            return (ReportSensorData) messageBody_;
          }
          return ReportSensorData.getDefaultInstance();
        } else {
          if (messageBodyCase_ == 6) {
            return reportSensorDataBuilder_.getMessage();
          }
          return ReportSensorData.getDefaultInstance();
        }
      }
      /**
       * <pre>
       *上报采集值
       * </pre>
       *
       * <code>.ReportSensorData reportSensorData = 6;</code>
       */
      public Builder setReportSensorData(ReportSensorData value) {
        if (reportSensorDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          messageBody_ = value;
          onChanged();
        } else {
          reportSensorDataBuilder_.setMessage(value);
        }
        messageBodyCase_ = 6;
        return this;
      }
      /**
       * <pre>
       *上报采集值
       * </pre>
       *
       * <code>.ReportSensorData reportSensorData = 6;</code>
       */
      public Builder setReportSensorData(
          ReportSensorData.Builder builderForValue) {
        if (reportSensorDataBuilder_ == null) {
          messageBody_ = builderForValue.build();
          onChanged();
        } else {
          reportSensorDataBuilder_.setMessage(builderForValue.build());
        }
        messageBodyCase_ = 6;
        return this;
      }
      /**
       * <pre>
       *上报采集值
       * </pre>
       *
       * <code>.ReportSensorData reportSensorData = 6;</code>
       */
      public Builder mergeReportSensorData(ReportSensorData value) {
        if (reportSensorDataBuilder_ == null) {
          if (messageBodyCase_ == 6 &&
              messageBody_ != ReportSensorData.getDefaultInstance()) {
            messageBody_ = ReportSensorData.newBuilder((ReportSensorData) messageBody_)
                .mergeFrom(value).buildPartial();
          } else {
            messageBody_ = value;
          }
          onChanged();
        } else {
          if (messageBodyCase_ == 6) {
            reportSensorDataBuilder_.mergeFrom(value);
          }
          reportSensorDataBuilder_.setMessage(value);
        }
        messageBodyCase_ = 6;
        return this;
      }
      /**
       * <pre>
       *上报采集值
       * </pre>
       *
       * <code>.ReportSensorData reportSensorData = 6;</code>
       */
      public Builder clearReportSensorData() {
        if (reportSensorDataBuilder_ == null) {
          if (messageBodyCase_ == 6) {
            messageBodyCase_ = 0;
            messageBody_ = null;
            onChanged();
          }
        } else {
          if (messageBodyCase_ == 6) {
            messageBodyCase_ = 0;
            messageBody_ = null;
          }
          reportSensorDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *上报采集值
       * </pre>
       *
       * <code>.ReportSensorData reportSensorData = 6;</code>
       */
      public ReportSensorData.Builder getReportSensorDataBuilder() {
        return getReportSensorDataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *上报采集值
       * </pre>
       *
       * <code>.ReportSensorData reportSensorData = 6;</code>
       */
      public ReportSensorDataOrBuilder getReportSensorDataOrBuilder() {
        if ((messageBodyCase_ == 6) && (reportSensorDataBuilder_ != null)) {
          return reportSensorDataBuilder_.getMessageOrBuilder();
        } else {
          if (messageBodyCase_ == 6) {
            return (ReportSensorData) messageBody_;
          }
          return ReportSensorData.getDefaultInstance();
        }
      }
      /**
       * <pre>
       *上报采集值
       * </pre>
       *
       * <code>.ReportSensorData reportSensorData = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ReportSensorData, ReportSensorData.Builder, ReportSensorDataOrBuilder>
          getReportSensorDataFieldBuilder() {
        if (reportSensorDataBuilder_ == null) {
          if (!(messageBodyCase_ == 6)) {
            messageBody_ = ReportSensorData.getDefaultInstance();
          }
          reportSensorDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ReportSensorData, ReportSensorData.Builder, ReportSensorDataOrBuilder>(
                  (ReportSensorData) messageBody_,
                  getParentForChildren(),
                  isClean());
          messageBody_ = null;
        }
        messageBodyCase_ = 6;
        onChanged();;
        return reportSensorDataBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          ReportSensorDataRsp, ReportSensorDataRsp.Builder, ReportSensorDataRspOrBuilder> reportSensorDataRspBuilder_;
      /**
       * <code>.ReportSensorDataRsp ReportSensorDataRsp = 7;</code>
       */
      public ReportSensorDataRsp getReportSensorDataRsp() {
        if (reportSensorDataRspBuilder_ == null) {
          if (messageBodyCase_ == 7) {
            return (ReportSensorDataRsp) messageBody_;
          }
          return ReportSensorDataRsp.getDefaultInstance();
        } else {
          if (messageBodyCase_ == 7) {
            return reportSensorDataRspBuilder_.getMessage();
          }
          return ReportSensorDataRsp.getDefaultInstance();
        }
      }
      /**
       * <code>.ReportSensorDataRsp ReportSensorDataRsp = 7;</code>
       */
      public Builder setReportSensorDataRsp(ReportSensorDataRsp value) {
        if (reportSensorDataRspBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          messageBody_ = value;
          onChanged();
        } else {
          reportSensorDataRspBuilder_.setMessage(value);
        }
        messageBodyCase_ = 7;
        return this;
      }
      /**
       * <code>.ReportSensorDataRsp ReportSensorDataRsp = 7;</code>
       */
      public Builder setReportSensorDataRsp(
          ReportSensorDataRsp.Builder builderForValue) {
        if (reportSensorDataRspBuilder_ == null) {
          messageBody_ = builderForValue.build();
          onChanged();
        } else {
          reportSensorDataRspBuilder_.setMessage(builderForValue.build());
        }
        messageBodyCase_ = 7;
        return this;
      }
      /**
       * <code>.ReportSensorDataRsp ReportSensorDataRsp = 7;</code>
       */
      public Builder mergeReportSensorDataRsp(ReportSensorDataRsp value) {
        if (reportSensorDataRspBuilder_ == null) {
          if (messageBodyCase_ == 7 &&
              messageBody_ != ReportSensorDataRsp.getDefaultInstance()) {
            messageBody_ = ReportSensorDataRsp.newBuilder((ReportSensorDataRsp) messageBody_)
                .mergeFrom(value).buildPartial();
          } else {
            messageBody_ = value;
          }
          onChanged();
        } else {
          if (messageBodyCase_ == 7) {
            reportSensorDataRspBuilder_.mergeFrom(value);
          }
          reportSensorDataRspBuilder_.setMessage(value);
        }
        messageBodyCase_ = 7;
        return this;
      }
      /**
       * <code>.ReportSensorDataRsp ReportSensorDataRsp = 7;</code>
       */
      public Builder clearReportSensorDataRsp() {
        if (reportSensorDataRspBuilder_ == null) {
          if (messageBodyCase_ == 7) {
            messageBodyCase_ = 0;
            messageBody_ = null;
            onChanged();
          }
        } else {
          if (messageBodyCase_ == 7) {
            messageBodyCase_ = 0;
            messageBody_ = null;
          }
          reportSensorDataRspBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.ReportSensorDataRsp ReportSensorDataRsp = 7;</code>
       */
      public ReportSensorDataRsp.Builder getReportSensorDataRspBuilder() {
        return getReportSensorDataRspFieldBuilder().getBuilder();
      }
      /**
       * <code>.ReportSensorDataRsp ReportSensorDataRsp = 7;</code>
       */
      public ReportSensorDataRspOrBuilder getReportSensorDataRspOrBuilder() {
        if ((messageBodyCase_ == 7) && (reportSensorDataRspBuilder_ != null)) {
          return reportSensorDataRspBuilder_.getMessageOrBuilder();
        } else {
          if (messageBodyCase_ == 7) {
            return (ReportSensorDataRsp) messageBody_;
          }
          return ReportSensorDataRsp.getDefaultInstance();
        }
      }
      /**
       * <code>.ReportSensorDataRsp ReportSensorDataRsp = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ReportSensorDataRsp, ReportSensorDataRsp.Builder, ReportSensorDataRspOrBuilder>
          getReportSensorDataRspFieldBuilder() {
        if (reportSensorDataRspBuilder_ == null) {
          if (!(messageBodyCase_ == 7)) {
            messageBody_ = ReportSensorDataRsp.getDefaultInstance();
          }
          reportSensorDataRspBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ReportSensorDataRsp, ReportSensorDataRsp.Builder, ReportSensorDataRspOrBuilder>(
                  (ReportSensorDataRsp) messageBody_,
                  getParentForChildren(),
                  isClean());
          messageBody_ = null;
        }
        messageBodyCase_ = 7;
        onChanged();;
        return reportSensorDataRspBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          ReportAlarm, ReportAlarm.Builder, ReportAlarmOrBuilder> reportAlarmBuilder_;
      /**
       * <pre>
       *告警上报
       * </pre>
       *
       * <code>.ReportAlarm reportAlarm = 8;</code>
       */
      public ReportAlarm getReportAlarm() {
        if (reportAlarmBuilder_ == null) {
          if (messageBodyCase_ == 8) {
            return (ReportAlarm) messageBody_;
          }
          return ReportAlarm.getDefaultInstance();
        } else {
          if (messageBodyCase_ == 8) {
            return reportAlarmBuilder_.getMessage();
          }
          return ReportAlarm.getDefaultInstance();
        }
      }
      /**
       * <pre>
       *告警上报
       * </pre>
       *
       * <code>.ReportAlarm reportAlarm = 8;</code>
       */
      public Builder setReportAlarm(ReportAlarm value) {
        if (reportAlarmBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          messageBody_ = value;
          onChanged();
        } else {
          reportAlarmBuilder_.setMessage(value);
        }
        messageBodyCase_ = 8;
        return this;
      }
      /**
       * <pre>
       *告警上报
       * </pre>
       *
       * <code>.ReportAlarm reportAlarm = 8;</code>
       */
      public Builder setReportAlarm(
          ReportAlarm.Builder builderForValue) {
        if (reportAlarmBuilder_ == null) {
          messageBody_ = builderForValue.build();
          onChanged();
        } else {
          reportAlarmBuilder_.setMessage(builderForValue.build());
        }
        messageBodyCase_ = 8;
        return this;
      }
      /**
       * <pre>
       *告警上报
       * </pre>
       *
       * <code>.ReportAlarm reportAlarm = 8;</code>
       */
      public Builder mergeReportAlarm(ReportAlarm value) {
        if (reportAlarmBuilder_ == null) {
          if (messageBodyCase_ == 8 &&
              messageBody_ != ReportAlarm.getDefaultInstance()) {
            messageBody_ = ReportAlarm.newBuilder((ReportAlarm) messageBody_)
                .mergeFrom(value).buildPartial();
          } else {
            messageBody_ = value;
          }
          onChanged();
        } else {
          if (messageBodyCase_ == 8) {
            reportAlarmBuilder_.mergeFrom(value);
          }
          reportAlarmBuilder_.setMessage(value);
        }
        messageBodyCase_ = 8;
        return this;
      }
      /**
       * <pre>
       *告警上报
       * </pre>
       *
       * <code>.ReportAlarm reportAlarm = 8;</code>
       */
      public Builder clearReportAlarm() {
        if (reportAlarmBuilder_ == null) {
          if (messageBodyCase_ == 8) {
            messageBodyCase_ = 0;
            messageBody_ = null;
            onChanged();
          }
        } else {
          if (messageBodyCase_ == 8) {
            messageBodyCase_ = 0;
            messageBody_ = null;
          }
          reportAlarmBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *告警上报
       * </pre>
       *
       * <code>.ReportAlarm reportAlarm = 8;</code>
       */
      public ReportAlarm.Builder getReportAlarmBuilder() {
        return getReportAlarmFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *告警上报
       * </pre>
       *
       * <code>.ReportAlarm reportAlarm = 8;</code>
       */
      public ReportAlarmOrBuilder getReportAlarmOrBuilder() {
        if ((messageBodyCase_ == 8) && (reportAlarmBuilder_ != null)) {
          return reportAlarmBuilder_.getMessageOrBuilder();
        } else {
          if (messageBodyCase_ == 8) {
            return (ReportAlarm) messageBody_;
          }
          return ReportAlarm.getDefaultInstance();
        }
      }
      /**
       * <pre>
       *告警上报
       * </pre>
       *
       * <code>.ReportAlarm reportAlarm = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ReportAlarm, ReportAlarm.Builder, ReportAlarmOrBuilder>
          getReportAlarmFieldBuilder() {
        if (reportAlarmBuilder_ == null) {
          if (!(messageBodyCase_ == 8)) {
            messageBody_ = ReportAlarm.getDefaultInstance();
          }
          reportAlarmBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ReportAlarm, ReportAlarm.Builder, ReportAlarmOrBuilder>(
                  (ReportAlarm) messageBody_,
                  getParentForChildren(),
                  isClean());
          messageBody_ = null;
        }
        messageBodyCase_ = 8;
        onChanged();;
        return reportAlarmBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          ReportAlarmRsp, ReportAlarmRsp.Builder, ReportAlarmRspOrBuilder> reportAlarmRspBuilder_;
      /**
       * <code>.ReportAlarmRsp reportAlarmRsp = 9;</code>
       */
      public ReportAlarmRsp getReportAlarmRsp() {
        if (reportAlarmRspBuilder_ == null) {
          if (messageBodyCase_ == 9) {
            return (ReportAlarmRsp) messageBody_;
          }
          return ReportAlarmRsp.getDefaultInstance();
        } else {
          if (messageBodyCase_ == 9) {
            return reportAlarmRspBuilder_.getMessage();
          }
          return ReportAlarmRsp.getDefaultInstance();
        }
      }
      /**
       * <code>.ReportAlarmRsp reportAlarmRsp = 9;</code>
       */
      public Builder setReportAlarmRsp(ReportAlarmRsp value) {
        if (reportAlarmRspBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          messageBody_ = value;
          onChanged();
        } else {
          reportAlarmRspBuilder_.setMessage(value);
        }
        messageBodyCase_ = 9;
        return this;
      }
      /**
       * <code>.ReportAlarmRsp reportAlarmRsp = 9;</code>
       */
      public Builder setReportAlarmRsp(
          ReportAlarmRsp.Builder builderForValue) {
        if (reportAlarmRspBuilder_ == null) {
          messageBody_ = builderForValue.build();
          onChanged();
        } else {
          reportAlarmRspBuilder_.setMessage(builderForValue.build());
        }
        messageBodyCase_ = 9;
        return this;
      }
      /**
       * <code>.ReportAlarmRsp reportAlarmRsp = 9;</code>
       */
      public Builder mergeReportAlarmRsp(ReportAlarmRsp value) {
        if (reportAlarmRspBuilder_ == null) {
          if (messageBodyCase_ == 9 &&
              messageBody_ != ReportAlarmRsp.getDefaultInstance()) {
            messageBody_ = ReportAlarmRsp.newBuilder((ReportAlarmRsp) messageBody_)
                .mergeFrom(value).buildPartial();
          } else {
            messageBody_ = value;
          }
          onChanged();
        } else {
          if (messageBodyCase_ == 9) {
            reportAlarmRspBuilder_.mergeFrom(value);
          }
          reportAlarmRspBuilder_.setMessage(value);
        }
        messageBodyCase_ = 9;
        return this;
      }
      /**
       * <code>.ReportAlarmRsp reportAlarmRsp = 9;</code>
       */
      public Builder clearReportAlarmRsp() {
        if (reportAlarmRspBuilder_ == null) {
          if (messageBodyCase_ == 9) {
            messageBodyCase_ = 0;
            messageBody_ = null;
            onChanged();
          }
        } else {
          if (messageBodyCase_ == 9) {
            messageBodyCase_ = 0;
            messageBody_ = null;
          }
          reportAlarmRspBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.ReportAlarmRsp reportAlarmRsp = 9;</code>
       */
      public ReportAlarmRsp.Builder getReportAlarmRspBuilder() {
        return getReportAlarmRspFieldBuilder().getBuilder();
      }
      /**
       * <code>.ReportAlarmRsp reportAlarmRsp = 9;</code>
       */
      public ReportAlarmRspOrBuilder getReportAlarmRspOrBuilder() {
        if ((messageBodyCase_ == 9) && (reportAlarmRspBuilder_ != null)) {
          return reportAlarmRspBuilder_.getMessageOrBuilder();
        } else {
          if (messageBodyCase_ == 9) {
            return (ReportAlarmRsp) messageBody_;
          }
          return ReportAlarmRsp.getDefaultInstance();
        }
      }
      /**
       * <code>.ReportAlarmRsp reportAlarmRsp = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ReportAlarmRsp, ReportAlarmRsp.Builder, ReportAlarmRspOrBuilder>
          getReportAlarmRspFieldBuilder() {
        if (reportAlarmRspBuilder_ == null) {
          if (!(messageBodyCase_ == 9)) {
            messageBody_ = ReportAlarmRsp.getDefaultInstance();
          }
          reportAlarmRspBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ReportAlarmRsp, ReportAlarmRsp.Builder, ReportAlarmRspOrBuilder>(
                  (ReportAlarmRsp) messageBody_,
                  getParentForChildren(),
                  isClean());
          messageBody_ = null;
        }
        messageBodyCase_ = 9;
        onChanged();;
        return reportAlarmRspBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          Catalog, Catalog.Builder, CatalogOrBuilder> catalogBuilder_;
      /**
       * <pre>
       *上报设备列表
       * </pre>
       *
       * <code>.Catalog catalog = 10;</code>
       */
      public Catalog getCatalog() {
        if (catalogBuilder_ == null) {
          if (messageBodyCase_ == 10) {
            return (Catalog) messageBody_;
          }
          return Catalog.getDefaultInstance();
        } else {
          if (messageBodyCase_ == 10) {
            return catalogBuilder_.getMessage();
          }
          return Catalog.getDefaultInstance();
        }
      }
      /**
       * <pre>
       *上报设备列表
       * </pre>
       *
       * <code>.Catalog catalog = 10;</code>
       */
      public Builder setCatalog(Catalog value) {
        if (catalogBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          messageBody_ = value;
          onChanged();
        } else {
          catalogBuilder_.setMessage(value);
        }
        messageBodyCase_ = 10;
        return this;
      }
      /**
       * <pre>
       *上报设备列表
       * </pre>
       *
       * <code>.Catalog catalog = 10;</code>
       */
      public Builder setCatalog(
          Catalog.Builder builderForValue) {
        if (catalogBuilder_ == null) {
          messageBody_ = builderForValue.build();
          onChanged();
        } else {
          catalogBuilder_.setMessage(builderForValue.build());
        }
        messageBodyCase_ = 10;
        return this;
      }
      /**
       * <pre>
       *上报设备列表
       * </pre>
       *
       * <code>.Catalog catalog = 10;</code>
       */
      public Builder mergeCatalog(Catalog value) {
        if (catalogBuilder_ == null) {
          if (messageBodyCase_ == 10 &&
              messageBody_ != Catalog.getDefaultInstance()) {
            messageBody_ = Catalog.newBuilder((Catalog) messageBody_)
                .mergeFrom(value).buildPartial();
          } else {
            messageBody_ = value;
          }
          onChanged();
        } else {
          if (messageBodyCase_ == 10) {
            catalogBuilder_.mergeFrom(value);
          }
          catalogBuilder_.setMessage(value);
        }
        messageBodyCase_ = 10;
        return this;
      }
      /**
       * <pre>
       *上报设备列表
       * </pre>
       *
       * <code>.Catalog catalog = 10;</code>
       */
      public Builder clearCatalog() {
        if (catalogBuilder_ == null) {
          if (messageBodyCase_ == 10) {
            messageBodyCase_ = 0;
            messageBody_ = null;
            onChanged();
          }
        } else {
          if (messageBodyCase_ == 10) {
            messageBodyCase_ = 0;
            messageBody_ = null;
          }
          catalogBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *上报设备列表
       * </pre>
       *
       * <code>.Catalog catalog = 10;</code>
       */
      public Catalog.Builder getCatalogBuilder() {
        return getCatalogFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *上报设备列表
       * </pre>
       *
       * <code>.Catalog catalog = 10;</code>
       */
      public CatalogOrBuilder getCatalogOrBuilder() {
        if ((messageBodyCase_ == 10) && (catalogBuilder_ != null)) {
          return catalogBuilder_.getMessageOrBuilder();
        } else {
          if (messageBodyCase_ == 10) {
            return (Catalog) messageBody_;
          }
          return Catalog.getDefaultInstance();
        }
      }
      /**
       * <pre>
       *上报设备列表
       * </pre>
       *
       * <code>.Catalog catalog = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Catalog, Catalog.Builder, CatalogOrBuilder>
          getCatalogFieldBuilder() {
        if (catalogBuilder_ == null) {
          if (!(messageBodyCase_ == 10)) {
            messageBody_ = Catalog.getDefaultInstance();
          }
          catalogBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Catalog, Catalog.Builder, CatalogOrBuilder>(
                  (Catalog) messageBody_,
                  getParentForChildren(),
                  isClean());
          messageBody_ = null;
        }
        messageBodyCase_ = 10;
        onChanged();;
        return catalogBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          CatalogRsp, CatalogRsp.Builder, CatalogRspOrBuilder> catalogRspBuilder_;
      /**
       * <code>.CatalogRsp catalogRsp = 11;</code>
       */
      public CatalogRsp getCatalogRsp() {
        if (catalogRspBuilder_ == null) {
          if (messageBodyCase_ == 11) {
            return (CatalogRsp) messageBody_;
          }
          return CatalogRsp.getDefaultInstance();
        } else {
          if (messageBodyCase_ == 11) {
            return catalogRspBuilder_.getMessage();
          }
          return CatalogRsp.getDefaultInstance();
        }
      }
      /**
       * <code>.CatalogRsp catalogRsp = 11;</code>
       */
      public Builder setCatalogRsp(CatalogRsp value) {
        if (catalogRspBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          messageBody_ = value;
          onChanged();
        } else {
          catalogRspBuilder_.setMessage(value);
        }
        messageBodyCase_ = 11;
        return this;
      }
      /**
       * <code>.CatalogRsp catalogRsp = 11;</code>
       */
      public Builder setCatalogRsp(
          CatalogRsp.Builder builderForValue) {
        if (catalogRspBuilder_ == null) {
          messageBody_ = builderForValue.build();
          onChanged();
        } else {
          catalogRspBuilder_.setMessage(builderForValue.build());
        }
        messageBodyCase_ = 11;
        return this;
      }
      /**
       * <code>.CatalogRsp catalogRsp = 11;</code>
       */
      public Builder mergeCatalogRsp(CatalogRsp value) {
        if (catalogRspBuilder_ == null) {
          if (messageBodyCase_ == 11 &&
              messageBody_ != CatalogRsp.getDefaultInstance()) {
            messageBody_ = CatalogRsp.newBuilder((CatalogRsp) messageBody_)
                .mergeFrom(value).buildPartial();
          } else {
            messageBody_ = value;
          }
          onChanged();
        } else {
          if (messageBodyCase_ == 11) {
            catalogRspBuilder_.mergeFrom(value);
          }
          catalogRspBuilder_.setMessage(value);
        }
        messageBodyCase_ = 11;
        return this;
      }
      /**
       * <code>.CatalogRsp catalogRsp = 11;</code>
       */
      public Builder clearCatalogRsp() {
        if (catalogRspBuilder_ == null) {
          if (messageBodyCase_ == 11) {
            messageBodyCase_ = 0;
            messageBody_ = null;
            onChanged();
          }
        } else {
          if (messageBodyCase_ == 11) {
            messageBodyCase_ = 0;
            messageBody_ = null;
          }
          catalogRspBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.CatalogRsp catalogRsp = 11;</code>
       */
      public CatalogRsp.Builder getCatalogRspBuilder() {
        return getCatalogRspFieldBuilder().getBuilder();
      }
      /**
       * <code>.CatalogRsp catalogRsp = 11;</code>
       */
      public CatalogRspOrBuilder getCatalogRspOrBuilder() {
        if ((messageBodyCase_ == 11) && (catalogRspBuilder_ != null)) {
          return catalogRspBuilder_.getMessageOrBuilder();
        } else {
          if (messageBodyCase_ == 11) {
            return (CatalogRsp) messageBody_;
          }
          return CatalogRsp.getDefaultInstance();
        }
      }
      /**
       * <code>.CatalogRsp catalogRsp = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          CatalogRsp, CatalogRsp.Builder, CatalogRspOrBuilder>
          getCatalogRspFieldBuilder() {
        if (catalogRspBuilder_ == null) {
          if (!(messageBodyCase_ == 11)) {
            messageBody_ = CatalogRsp.getDefaultInstance();
          }
          catalogRspBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              CatalogRsp, CatalogRsp.Builder, CatalogRspOrBuilder>(
                  (CatalogRsp) messageBody_,
                  getParentForChildren(),
                  isClean());
          messageBody_ = null;
        }
        messageBodyCase_ = 11;
        onChanged();;
        return catalogRspBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          UpdateTime, UpdateTime.Builder, UpdateTimeOrBuilder> updateTimeBuilder_;
      /**
       * <pre>
       *请求对时
       * </pre>
       *
       * <code>.UpdateTime updateTime = 12;</code>
       */
      public UpdateTime getUpdateTime() {
        if (updateTimeBuilder_ == null) {
          if (messageBodyCase_ == 12) {
            return (UpdateTime) messageBody_;
          }
          return UpdateTime.getDefaultInstance();
        } else {
          if (messageBodyCase_ == 12) {
            return updateTimeBuilder_.getMessage();
          }
          return UpdateTime.getDefaultInstance();
        }
      }
      /**
       * <pre>
       *请求对时
       * </pre>
       *
       * <code>.UpdateTime updateTime = 12;</code>
       */
      public Builder setUpdateTime(UpdateTime value) {
        if (updateTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          messageBody_ = value;
          onChanged();
        } else {
          updateTimeBuilder_.setMessage(value);
        }
        messageBodyCase_ = 12;
        return this;
      }
      /**
       * <pre>
       *请求对时
       * </pre>
       *
       * <code>.UpdateTime updateTime = 12;</code>
       */
      public Builder setUpdateTime(
          UpdateTime.Builder builderForValue) {
        if (updateTimeBuilder_ == null) {
          messageBody_ = builderForValue.build();
          onChanged();
        } else {
          updateTimeBuilder_.setMessage(builderForValue.build());
        }
        messageBodyCase_ = 12;
        return this;
      }
      /**
       * <pre>
       *请求对时
       * </pre>
       *
       * <code>.UpdateTime updateTime = 12;</code>
       */
      public Builder mergeUpdateTime(UpdateTime value) {
        if (updateTimeBuilder_ == null) {
          if (messageBodyCase_ == 12 &&
              messageBody_ != UpdateTime.getDefaultInstance()) {
            messageBody_ = UpdateTime.newBuilder((UpdateTime) messageBody_)
                .mergeFrom(value).buildPartial();
          } else {
            messageBody_ = value;
          }
          onChanged();
        } else {
          if (messageBodyCase_ == 12) {
            updateTimeBuilder_.mergeFrom(value);
          }
          updateTimeBuilder_.setMessage(value);
        }
        messageBodyCase_ = 12;
        return this;
      }
      /**
       * <pre>
       *请求对时
       * </pre>
       *
       * <code>.UpdateTime updateTime = 12;</code>
       */
      public Builder clearUpdateTime() {
        if (updateTimeBuilder_ == null) {
          if (messageBodyCase_ == 12) {
            messageBodyCase_ = 0;
            messageBody_ = null;
            onChanged();
          }
        } else {
          if (messageBodyCase_ == 12) {
            messageBodyCase_ = 0;
            messageBody_ = null;
          }
          updateTimeBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *请求对时
       * </pre>
       *
       * <code>.UpdateTime updateTime = 12;</code>
       */
      public UpdateTime.Builder getUpdateTimeBuilder() {
        return getUpdateTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *请求对时
       * </pre>
       *
       * <code>.UpdateTime updateTime = 12;</code>
       */
      public UpdateTimeOrBuilder getUpdateTimeOrBuilder() {
        if ((messageBodyCase_ == 12) && (updateTimeBuilder_ != null)) {
          return updateTimeBuilder_.getMessageOrBuilder();
        } else {
          if (messageBodyCase_ == 12) {
            return (UpdateTime) messageBody_;
          }
          return UpdateTime.getDefaultInstance();
        }
      }
      /**
       * <pre>
       *请求对时
       * </pre>
       *
       * <code>.UpdateTime updateTime = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          UpdateTime, UpdateTime.Builder, UpdateTimeOrBuilder>
          getUpdateTimeFieldBuilder() {
        if (updateTimeBuilder_ == null) {
          if (!(messageBodyCase_ == 12)) {
            messageBody_ = UpdateTime.getDefaultInstance();
          }
          updateTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              UpdateTime, UpdateTime.Builder, UpdateTimeOrBuilder>(
                  (UpdateTime) messageBody_,
                  getParentForChildren(),
                  isClean());
          messageBody_ = null;
        }
        messageBodyCase_ = 12;
        onChanged();;
        return updateTimeBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          UpdateTimeRsp, UpdateTimeRsp.Builder, UpdateTimeRspOrBuilder> updateTimeRspBuilder_;
      /**
       * <code>.UpdateTimeRsp updateTimeRsp = 13;</code>
       */
      public UpdateTimeRsp getUpdateTimeRsp() {
        if (updateTimeRspBuilder_ == null) {
          if (messageBodyCase_ == 13) {
            return (UpdateTimeRsp) messageBody_;
          }
          return UpdateTimeRsp.getDefaultInstance();
        } else {
          if (messageBodyCase_ == 13) {
            return updateTimeRspBuilder_.getMessage();
          }
          return UpdateTimeRsp.getDefaultInstance();
        }
      }
      /**
       * <code>.UpdateTimeRsp updateTimeRsp = 13;</code>
       */
      public Builder setUpdateTimeRsp(UpdateTimeRsp value) {
        if (updateTimeRspBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          messageBody_ = value;
          onChanged();
        } else {
          updateTimeRspBuilder_.setMessage(value);
        }
        messageBodyCase_ = 13;
        return this;
      }
      /**
       * <code>.UpdateTimeRsp updateTimeRsp = 13;</code>
       */
      public Builder setUpdateTimeRsp(
          UpdateTimeRsp.Builder builderForValue) {
        if (updateTimeRspBuilder_ == null) {
          messageBody_ = builderForValue.build();
          onChanged();
        } else {
          updateTimeRspBuilder_.setMessage(builderForValue.build());
        }
        messageBodyCase_ = 13;
        return this;
      }
      /**
       * <code>.UpdateTimeRsp updateTimeRsp = 13;</code>
       */
      public Builder mergeUpdateTimeRsp(UpdateTimeRsp value) {
        if (updateTimeRspBuilder_ == null) {
          if (messageBodyCase_ == 13 &&
              messageBody_ != UpdateTimeRsp.getDefaultInstance()) {
            messageBody_ = UpdateTimeRsp.newBuilder((UpdateTimeRsp) messageBody_)
                .mergeFrom(value).buildPartial();
          } else {
            messageBody_ = value;
          }
          onChanged();
        } else {
          if (messageBodyCase_ == 13) {
            updateTimeRspBuilder_.mergeFrom(value);
          }
          updateTimeRspBuilder_.setMessage(value);
        }
        messageBodyCase_ = 13;
        return this;
      }
      /**
       * <code>.UpdateTimeRsp updateTimeRsp = 13;</code>
       */
      public Builder clearUpdateTimeRsp() {
        if (updateTimeRspBuilder_ == null) {
          if (messageBodyCase_ == 13) {
            messageBodyCase_ = 0;
            messageBody_ = null;
            onChanged();
          }
        } else {
          if (messageBodyCase_ == 13) {
            messageBodyCase_ = 0;
            messageBody_ = null;
          }
          updateTimeRspBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.UpdateTimeRsp updateTimeRsp = 13;</code>
       */
      public UpdateTimeRsp.Builder getUpdateTimeRspBuilder() {
        return getUpdateTimeRspFieldBuilder().getBuilder();
      }
      /**
       * <code>.UpdateTimeRsp updateTimeRsp = 13;</code>
       */
      public UpdateTimeRspOrBuilder getUpdateTimeRspOrBuilder() {
        if ((messageBodyCase_ == 13) && (updateTimeRspBuilder_ != null)) {
          return updateTimeRspBuilder_.getMessageOrBuilder();
        } else {
          if (messageBodyCase_ == 13) {
            return (UpdateTimeRsp) messageBody_;
          }
          return UpdateTimeRsp.getDefaultInstance();
        }
      }
      /**
       * <code>.UpdateTimeRsp updateTimeRsp = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          UpdateTimeRsp, UpdateTimeRsp.Builder, UpdateTimeRspOrBuilder>
          getUpdateTimeRspFieldBuilder() {
        if (updateTimeRspBuilder_ == null) {
          if (!(messageBodyCase_ == 13)) {
            messageBody_ = UpdateTimeRsp.getDefaultInstance();
          }
          updateTimeRspBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              UpdateTimeRsp, UpdateTimeRsp.Builder, UpdateTimeRspOrBuilder>(
                  (UpdateTimeRsp) messageBody_,
                  getParentForChildren(),
                  isClean());
          messageBody_ = null;
        }
        messageBodyCase_ = 13;
        onChanged();;
        return updateTimeRspBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          Control, Control.Builder, ControlOrBuilder> controlBuilder_;
      /**
       * <pre>
       * 控制命令
       * </pre>
       *
       * <code>.Control control = 14;</code>
       */
      public Control getControl() {
        if (controlBuilder_ == null) {
          if (messageBodyCase_ == 14) {
            return (Control) messageBody_;
          }
          return Control.getDefaultInstance();
        } else {
          if (messageBodyCase_ == 14) {
            return controlBuilder_.getMessage();
          }
          return Control.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * 控制命令
       * </pre>
       *
       * <code>.Control control = 14;</code>
       */
      public Builder setControl(Control value) {
        if (controlBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          messageBody_ = value;
          onChanged();
        } else {
          controlBuilder_.setMessage(value);
        }
        messageBodyCase_ = 14;
        return this;
      }
      /**
       * <pre>
       * 控制命令
       * </pre>
       *
       * <code>.Control control = 14;</code>
       */
      public Builder setControl(
          Control.Builder builderForValue) {
        if (controlBuilder_ == null) {
          messageBody_ = builderForValue.build();
          onChanged();
        } else {
          controlBuilder_.setMessage(builderForValue.build());
        }
        messageBodyCase_ = 14;
        return this;
      }
      /**
       * <pre>
       * 控制命令
       * </pre>
       *
       * <code>.Control control = 14;</code>
       */
      public Builder mergeControl(Control value) {
        if (controlBuilder_ == null) {
          if (messageBodyCase_ == 14 &&
              messageBody_ != Control.getDefaultInstance()) {
            messageBody_ = Control.newBuilder((Control) messageBody_)
                .mergeFrom(value).buildPartial();
          } else {
            messageBody_ = value;
          }
          onChanged();
        } else {
          if (messageBodyCase_ == 14) {
            controlBuilder_.mergeFrom(value);
          }
          controlBuilder_.setMessage(value);
        }
        messageBodyCase_ = 14;
        return this;
      }
      /**
       * <pre>
       * 控制命令
       * </pre>
       *
       * <code>.Control control = 14;</code>
       */
      public Builder clearControl() {
        if (controlBuilder_ == null) {
          if (messageBodyCase_ == 14) {
            messageBodyCase_ = 0;
            messageBody_ = null;
            onChanged();
          }
        } else {
          if (messageBodyCase_ == 14) {
            messageBodyCase_ = 0;
            messageBody_ = null;
          }
          controlBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 控制命令
       * </pre>
       *
       * <code>.Control control = 14;</code>
       */
      public Control.Builder getControlBuilder() {
        return getControlFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 控制命令
       * </pre>
       *
       * <code>.Control control = 14;</code>
       */
      public ControlOrBuilder getControlOrBuilder() {
        if ((messageBodyCase_ == 14) && (controlBuilder_ != null)) {
          return controlBuilder_.getMessageOrBuilder();
        } else {
          if (messageBodyCase_ == 14) {
            return (Control) messageBody_;
          }
          return Control.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * 控制命令
       * </pre>
       *
       * <code>.Control control = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          Control, Control.Builder, ControlOrBuilder>
          getControlFieldBuilder() {
        if (controlBuilder_ == null) {
          if (!(messageBodyCase_ == 14)) {
            messageBody_ = Control.getDefaultInstance();
          }
          controlBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              Control, Control.Builder, ControlOrBuilder>(
                  (Control) messageBody_,
                  getParentForChildren(),
                  isClean());
          messageBody_ = null;
        }
        messageBodyCase_ = 14;
        onChanged();;
        return controlBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          ControlRsp, ControlRsp.Builder, ControlRspOrBuilder> controlRspBuilder_;
      /**
       * <code>.ControlRsp controlRsp = 15;</code>
       */
      public ControlRsp getControlRsp() {
        if (controlRspBuilder_ == null) {
          if (messageBodyCase_ == 15) {
            return (ControlRsp) messageBody_;
          }
          return ControlRsp.getDefaultInstance();
        } else {
          if (messageBodyCase_ == 15) {
            return controlRspBuilder_.getMessage();
          }
          return ControlRsp.getDefaultInstance();
        }
      }
      /**
       * <code>.ControlRsp controlRsp = 15;</code>
       */
      public Builder setControlRsp(ControlRsp value) {
        if (controlRspBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          messageBody_ = value;
          onChanged();
        } else {
          controlRspBuilder_.setMessage(value);
        }
        messageBodyCase_ = 15;
        return this;
      }
      /**
       * <code>.ControlRsp controlRsp = 15;</code>
       */
      public Builder setControlRsp(
          ControlRsp.Builder builderForValue) {
        if (controlRspBuilder_ == null) {
          messageBody_ = builderForValue.build();
          onChanged();
        } else {
          controlRspBuilder_.setMessage(builderForValue.build());
        }
        messageBodyCase_ = 15;
        return this;
      }
      /**
       * <code>.ControlRsp controlRsp = 15;</code>
       */
      public Builder mergeControlRsp(ControlRsp value) {
        if (controlRspBuilder_ == null) {
          if (messageBodyCase_ == 15 &&
              messageBody_ != ControlRsp.getDefaultInstance()) {
            messageBody_ = ControlRsp.newBuilder((ControlRsp) messageBody_)
                .mergeFrom(value).buildPartial();
          } else {
            messageBody_ = value;
          }
          onChanged();
        } else {
          if (messageBodyCase_ == 15) {
            controlRspBuilder_.mergeFrom(value);
          }
          controlRspBuilder_.setMessage(value);
        }
        messageBodyCase_ = 15;
        return this;
      }
      /**
       * <code>.ControlRsp controlRsp = 15;</code>
       */
      public Builder clearControlRsp() {
        if (controlRspBuilder_ == null) {
          if (messageBodyCase_ == 15) {
            messageBodyCase_ = 0;
            messageBody_ = null;
            onChanged();
          }
        } else {
          if (messageBodyCase_ == 15) {
            messageBodyCase_ = 0;
            messageBody_ = null;
          }
          controlRspBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.ControlRsp controlRsp = 15;</code>
       */
      public ControlRsp.Builder getControlRspBuilder() {
        return getControlRspFieldBuilder().getBuilder();
      }
      /**
       * <code>.ControlRsp controlRsp = 15;</code>
       */
      public ControlRspOrBuilder getControlRspOrBuilder() {
        if ((messageBodyCase_ == 15) && (controlRspBuilder_ != null)) {
          return controlRspBuilder_.getMessageOrBuilder();
        } else {
          if (messageBodyCase_ == 15) {
            return (ControlRsp) messageBody_;
          }
          return ControlRsp.getDefaultInstance();
        }
      }
      /**
       * <code>.ControlRsp controlRsp = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ControlRsp, ControlRsp.Builder, ControlRspOrBuilder>
          getControlRspFieldBuilder() {
        if (controlRspBuilder_ == null) {
          if (!(messageBodyCase_ == 15)) {
            messageBody_ = ControlRsp.getDefaultInstance();
          }
          controlRspBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ControlRsp, ControlRsp.Builder, ControlRspOrBuilder>(
                  (ControlRsp) messageBody_,
                  getParentForChildren(),
                  isClean());
          messageBody_ = null;
        }
        messageBodyCase_ = 15;
        onChanged();;
        return controlRspBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          ReportDeviceState, ReportDeviceState.Builder, ReportDeviceStateOrBuilder> reportDeviceStateBuilder_;
      /**
       * <pre>
       * 设备状态上报
       * </pre>
       *
       * <code>.ReportDeviceState reportDeviceState = 16;</code>
       */
      public ReportDeviceState getReportDeviceState() {
        if (reportDeviceStateBuilder_ == null) {
          if (messageBodyCase_ == 16) {
            return (ReportDeviceState) messageBody_;
          }
          return ReportDeviceState.getDefaultInstance();
        } else {
          if (messageBodyCase_ == 16) {
            return reportDeviceStateBuilder_.getMessage();
          }
          return ReportDeviceState.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * 设备状态上报
       * </pre>
       *
       * <code>.ReportDeviceState reportDeviceState = 16;</code>
       */
      public Builder setReportDeviceState(ReportDeviceState value) {
        if (reportDeviceStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          messageBody_ = value;
          onChanged();
        } else {
          reportDeviceStateBuilder_.setMessage(value);
        }
        messageBodyCase_ = 16;
        return this;
      }
      /**
       * <pre>
       * 设备状态上报
       * </pre>
       *
       * <code>.ReportDeviceState reportDeviceState = 16;</code>
       */
      public Builder setReportDeviceState(
          ReportDeviceState.Builder builderForValue) {
        if (reportDeviceStateBuilder_ == null) {
          messageBody_ = builderForValue.build();
          onChanged();
        } else {
          reportDeviceStateBuilder_.setMessage(builderForValue.build());
        }
        messageBodyCase_ = 16;
        return this;
      }
      /**
       * <pre>
       * 设备状态上报
       * </pre>
       *
       * <code>.ReportDeviceState reportDeviceState = 16;</code>
       */
      public Builder mergeReportDeviceState(ReportDeviceState value) {
        if (reportDeviceStateBuilder_ == null) {
          if (messageBodyCase_ == 16 &&
              messageBody_ != ReportDeviceState.getDefaultInstance()) {
            messageBody_ = ReportDeviceState.newBuilder((ReportDeviceState) messageBody_)
                .mergeFrom(value).buildPartial();
          } else {
            messageBody_ = value;
          }
          onChanged();
        } else {
          if (messageBodyCase_ == 16) {
            reportDeviceStateBuilder_.mergeFrom(value);
          }
          reportDeviceStateBuilder_.setMessage(value);
        }
        messageBodyCase_ = 16;
        return this;
      }
      /**
       * <pre>
       * 设备状态上报
       * </pre>
       *
       * <code>.ReportDeviceState reportDeviceState = 16;</code>
       */
      public Builder clearReportDeviceState() {
        if (reportDeviceStateBuilder_ == null) {
          if (messageBodyCase_ == 16) {
            messageBodyCase_ = 0;
            messageBody_ = null;
            onChanged();
          }
        } else {
          if (messageBodyCase_ == 16) {
            messageBodyCase_ = 0;
            messageBody_ = null;
          }
          reportDeviceStateBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 设备状态上报
       * </pre>
       *
       * <code>.ReportDeviceState reportDeviceState = 16;</code>
       */
      public ReportDeviceState.Builder getReportDeviceStateBuilder() {
        return getReportDeviceStateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 设备状态上报
       * </pre>
       *
       * <code>.ReportDeviceState reportDeviceState = 16;</code>
       */
      public ReportDeviceStateOrBuilder getReportDeviceStateOrBuilder() {
        if ((messageBodyCase_ == 16) && (reportDeviceStateBuilder_ != null)) {
          return reportDeviceStateBuilder_.getMessageOrBuilder();
        } else {
          if (messageBodyCase_ == 16) {
            return (ReportDeviceState) messageBody_;
          }
          return ReportDeviceState.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * 设备状态上报
       * </pre>
       *
       * <code>.ReportDeviceState reportDeviceState = 16;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ReportDeviceState, ReportDeviceState.Builder, ReportDeviceStateOrBuilder>
          getReportDeviceStateFieldBuilder() {
        if (reportDeviceStateBuilder_ == null) {
          if (!(messageBodyCase_ == 16)) {
            messageBody_ = ReportDeviceState.getDefaultInstance();
          }
          reportDeviceStateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ReportDeviceState, ReportDeviceState.Builder, ReportDeviceStateOrBuilder>(
                  (ReportDeviceState) messageBody_,
                  getParentForChildren(),
                  isClean());
          messageBody_ = null;
        }
        messageBodyCase_ = 16;
        onChanged();;
        return reportDeviceStateBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          ReportDeviceStateRsp, ReportDeviceStateRsp.Builder, ReportDeviceStateRspOrBuilder> reportDeviceStateRspBuilder_;
      /**
       * <code>.ReportDeviceStateRsp reportDeviceStateRsp = 17;</code>
       */
      public ReportDeviceStateRsp getReportDeviceStateRsp() {
        if (reportDeviceStateRspBuilder_ == null) {
          if (messageBodyCase_ == 17) {
            return (ReportDeviceStateRsp) messageBody_;
          }
          return ReportDeviceStateRsp.getDefaultInstance();
        } else {
          if (messageBodyCase_ == 17) {
            return reportDeviceStateRspBuilder_.getMessage();
          }
          return ReportDeviceStateRsp.getDefaultInstance();
        }
      }
      /**
       * <code>.ReportDeviceStateRsp reportDeviceStateRsp = 17;</code>
       */
      public Builder setReportDeviceStateRsp(ReportDeviceStateRsp value) {
        if (reportDeviceStateRspBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          messageBody_ = value;
          onChanged();
        } else {
          reportDeviceStateRspBuilder_.setMessage(value);
        }
        messageBodyCase_ = 17;
        return this;
      }
      /**
       * <code>.ReportDeviceStateRsp reportDeviceStateRsp = 17;</code>
       */
      public Builder setReportDeviceStateRsp(
          ReportDeviceStateRsp.Builder builderForValue) {
        if (reportDeviceStateRspBuilder_ == null) {
          messageBody_ = builderForValue.build();
          onChanged();
        } else {
          reportDeviceStateRspBuilder_.setMessage(builderForValue.build());
        }
        messageBodyCase_ = 17;
        return this;
      }
      /**
       * <code>.ReportDeviceStateRsp reportDeviceStateRsp = 17;</code>
       */
      public Builder mergeReportDeviceStateRsp(ReportDeviceStateRsp value) {
        if (reportDeviceStateRspBuilder_ == null) {
          if (messageBodyCase_ == 17 &&
              messageBody_ != ReportDeviceStateRsp.getDefaultInstance()) {
            messageBody_ = ReportDeviceStateRsp.newBuilder((ReportDeviceStateRsp) messageBody_)
                .mergeFrom(value).buildPartial();
          } else {
            messageBody_ = value;
          }
          onChanged();
        } else {
          if (messageBodyCase_ == 17) {
            reportDeviceStateRspBuilder_.mergeFrom(value);
          }
          reportDeviceStateRspBuilder_.setMessage(value);
        }
        messageBodyCase_ = 17;
        return this;
      }
      /**
       * <code>.ReportDeviceStateRsp reportDeviceStateRsp = 17;</code>
       */
      public Builder clearReportDeviceStateRsp() {
        if (reportDeviceStateRspBuilder_ == null) {
          if (messageBodyCase_ == 17) {
            messageBodyCase_ = 0;
            messageBody_ = null;
            onChanged();
          }
        } else {
          if (messageBodyCase_ == 17) {
            messageBodyCase_ = 0;
            messageBody_ = null;
          }
          reportDeviceStateRspBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.ReportDeviceStateRsp reportDeviceStateRsp = 17;</code>
       */
      public ReportDeviceStateRsp.Builder getReportDeviceStateRspBuilder() {
        return getReportDeviceStateRspFieldBuilder().getBuilder();
      }
      /**
       * <code>.ReportDeviceStateRsp reportDeviceStateRsp = 17;</code>
       */
      public ReportDeviceStateRspOrBuilder getReportDeviceStateRspOrBuilder() {
        if ((messageBodyCase_ == 17) && (reportDeviceStateRspBuilder_ != null)) {
          return reportDeviceStateRspBuilder_.getMessageOrBuilder();
        } else {
          if (messageBodyCase_ == 17) {
            return (ReportDeviceStateRsp) messageBody_;
          }
          return ReportDeviceStateRsp.getDefaultInstance();
        }
      }
      /**
       * <code>.ReportDeviceStateRsp reportDeviceStateRsp = 17;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ReportDeviceStateRsp, ReportDeviceStateRsp.Builder, ReportDeviceStateRspOrBuilder>
          getReportDeviceStateRspFieldBuilder() {
        if (reportDeviceStateRspBuilder_ == null) {
          if (!(messageBodyCase_ == 17)) {
            messageBody_ = ReportDeviceStateRsp.getDefaultInstance();
          }
          reportDeviceStateRspBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ReportDeviceStateRsp, ReportDeviceStateRsp.Builder, ReportDeviceStateRspOrBuilder>(
                  (ReportDeviceStateRsp) messageBody_,
                  getParentForChildren(),
                  isClean());
          messageBody_ = null;
        }
        messageBodyCase_ = 17;
        onChanged();;
        return reportDeviceStateRspBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:PDGMessage)
    }

    // @@protoc_insertion_point(class_scope:PDGMessage)
    private static final PDGMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PDGMessage();
    }

    public static PDGMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PDGMessage>
        PARSER = new com.google.protobuf.AbstractParser<PDGMessage>() {
      public PDGMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PDGMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PDGMessage> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<PDGMessage> getParserForType() {
      return PARSER;
    }

    public PDGMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PDGHeaderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PDGHeader)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 消息版本
     * </pre>
     *
     * <code>int32 version = 1;</code>
     */
    int getVersion();

    /**
     * <pre>
     * 站点编码
     * </pre>
     *
     * <code>string stationCode = 2;</code>
     */
    String getStationCode();
    /**
     * <pre>
     * 站点编码
     * </pre>
     *
     * <code>string stationCode = 2;</code>
     */
    com.google.protobuf.ByteString
        getStationCodeBytes();

    /**
     * <pre>
     * 会话ID  站端注册时可以为空，由主站生成返回。后续消息都带此会话ID。
     * </pre>
     *
     * <code>string session = 3;</code>
     */
    String getSession();
    /**
     * <pre>
     * 会话ID  站端注册时可以为空，由主站生成返回。后续消息都带此会话ID。
     * </pre>
     *
     * <code>string session = 3;</code>
     */
    com.google.protobuf.ByteString
        getSessionBytes();

    /**
     * <pre>
     * 消息序号
     * </pre>
     *
     * <code>int32 seq = 4;</code>
     */
    int getSeq();

    /**
     * <pre>
     * 命令，消息类型
     * </pre>
     *
     * <code>.CommandType command = 5;</code>
     */
    int getCommandValue();
    /**
     * <pre>
     * 命令，消息类型
     * </pre>
     *
     * <code>.CommandType command = 5;</code>
     */
    CommandType getCommand();

    /**
     * <pre>
     * 源IP，站端发送IP
     * </pre>
     *
     * <code>string fromAddr = 6;</code>
     */
    String getFromAddr();
    /**
     * <pre>
     * 源IP，站端发送IP
     * </pre>
     *
     * <code>string fromAddr = 6;</code>
     */
    com.google.protobuf.ByteString
        getFromAddrBytes();
  }
  /**
   * <pre>
   * 消息头部，所有消息中必需。
   * </pre>
   *
   * Protobuf type {@code PDGHeader}
   */
  public  static final class PDGHeader extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:PDGHeader)
      PDGHeaderOrBuilder {
    // Use PDGHeader.newBuilder() to construct.
    private PDGHeader(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PDGHeader() {
      version_ = 0;
      stationCode_ = "";
      session_ = "";
      seq_ = 0;
      command_ = 0;
      fromAddr_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private PDGHeader(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              version_ = input.readInt32();
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              stationCode_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              session_ = s;
              break;
            }
            case 32: {

              seq_ = input.readInt32();
              break;
            }
            case 40: {
              int rawValue = input.readEnum();

              command_ = rawValue;
              break;
            }
            case 50: {
              String s = input.readStringRequireUtf8();

              fromAddr_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MessageProtobuf.internal_static_PDGHeader_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MessageProtobuf.internal_static_PDGHeader_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              PDGHeader.class, Builder.class);
    }

    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_;
    /**
     * <pre>
     * 消息版本
     * </pre>
     *
     * <code>int32 version = 1;</code>
     */
    public int getVersion() {
      return version_;
    }

    public static final int STATIONCODE_FIELD_NUMBER = 2;
    private volatile Object stationCode_;
    /**
     * <pre>
     * 站点编码
     * </pre>
     *
     * <code>string stationCode = 2;</code>
     */
    public String getStationCode() {
      Object ref = stationCode_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        stationCode_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 站点编码
     * </pre>
     *
     * <code>string stationCode = 2;</code>
     */
    public com.google.protobuf.ByteString
        getStationCodeBytes() {
      Object ref = stationCode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        stationCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SESSION_FIELD_NUMBER = 3;
    private volatile Object session_;
    /**
     * <pre>
     * 会话ID  站端注册时可以为空，由主站生成返回。后续消息都带此会话ID。
     * </pre>
     *
     * <code>string session = 3;</code>
     */
    public String getSession() {
      Object ref = session_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        session_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 会话ID  站端注册时可以为空，由主站生成返回。后续消息都带此会话ID。
     * </pre>
     *
     * <code>string session = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSessionBytes() {
      Object ref = session_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        session_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SEQ_FIELD_NUMBER = 4;
    private int seq_;
    /**
     * <pre>
     * 消息序号
     * </pre>
     *
     * <code>int32 seq = 4;</code>
     */
    public int getSeq() {
      return seq_;
    }

    public static final int COMMAND_FIELD_NUMBER = 5;
    private int command_;
    /**
     * <pre>
     * 命令，消息类型
     * </pre>
     *
     * <code>.CommandType command = 5;</code>
     */
    public int getCommandValue() {
      return command_;
    }
    /**
     * <pre>
     * 命令，消息类型
     * </pre>
     *
     * <code>.CommandType command = 5;</code>
     */
    public CommandType getCommand() {
      CommandType result = CommandType.valueOf(command_);
      return result == null ? CommandType.UNRECOGNIZED : result;
    }

    public static final int FROMADDR_FIELD_NUMBER = 6;
    private volatile Object fromAddr_;
    /**
     * <pre>
     * 源IP，站端发送IP
     * </pre>
     *
     * <code>string fromAddr = 6;</code>
     */
    public String getFromAddr() {
      Object ref = fromAddr_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        fromAddr_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 源IP，站端发送IP
     * </pre>
     *
     * <code>string fromAddr = 6;</code>
     */
    public com.google.protobuf.ByteString
        getFromAddrBytes() {
      Object ref = fromAddr_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        fromAddr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (version_ != 0) {
        output.writeInt32(1, version_);
      }
      if (!getStationCodeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, stationCode_);
      }
      if (!getSessionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, session_);
      }
      if (seq_ != 0) {
        output.writeInt32(4, seq_);
      }
      if (command_ != CommandType.CommandTypeDEFAULT.getNumber()) {
        output.writeEnum(5, command_);
      }
      if (!getFromAddrBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, fromAddr_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (version_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, version_);
      }
      if (!getStationCodeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, stationCode_);
      }
      if (!getSessionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, session_);
      }
      if (seq_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, seq_);
      }
      if (command_ != CommandType.CommandTypeDEFAULT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, command_);
      }
      if (!getFromAddrBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, fromAddr_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof PDGHeader)) {
        return super.equals(obj);
      }
      PDGHeader other = (PDGHeader) obj;

      boolean result = true;
      result = result && (getVersion()
          == other.getVersion());
      result = result && getStationCode()
          .equals(other.getStationCode());
      result = result && getSession()
          .equals(other.getSession());
      result = result && (getSeq()
          == other.getSeq());
      result = result && command_ == other.command_;
      result = result && getFromAddr()
          .equals(other.getFromAddr());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion();
      hash = (37 * hash) + STATIONCODE_FIELD_NUMBER;
      hash = (53 * hash) + getStationCode().hashCode();
      hash = (37 * hash) + SESSION_FIELD_NUMBER;
      hash = (53 * hash) + getSession().hashCode();
      hash = (37 * hash) + SEQ_FIELD_NUMBER;
      hash = (53 * hash) + getSeq();
      hash = (37 * hash) + COMMAND_FIELD_NUMBER;
      hash = (53 * hash) + command_;
      hash = (37 * hash) + FROMADDR_FIELD_NUMBER;
      hash = (53 * hash) + getFromAddr().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static PDGHeader parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PDGHeader parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PDGHeader parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PDGHeader parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PDGHeader parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PDGHeader parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static PDGHeader parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static PDGHeader parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static PDGHeader parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PDGHeader parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(PDGHeader prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 消息头部，所有消息中必需。
     * </pre>
     *
     * Protobuf type {@code PDGHeader}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PDGHeader)
        PDGHeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MessageProtobuf.internal_static_PDGHeader_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MessageProtobuf.internal_static_PDGHeader_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                PDGHeader.class, Builder.class);
      }

      // Construct using shenzhen.teamway.pdg.protobuf.MessageProtobuf.PDGHeader.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        version_ = 0;

        stationCode_ = "";

        session_ = "";

        seq_ = 0;

        command_ = 0;

        fromAddr_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MessageProtobuf.internal_static_PDGHeader_descriptor;
      }

      public PDGHeader getDefaultInstanceForType() {
        return PDGHeader.getDefaultInstance();
      }

      public PDGHeader build() {
        PDGHeader result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public PDGHeader buildPartial() {
        PDGHeader result = new PDGHeader(this);
        result.version_ = version_;
        result.stationCode_ = stationCode_;
        result.session_ = session_;
        result.seq_ = seq_;
        result.command_ = command_;
        result.fromAddr_ = fromAddr_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof PDGHeader) {
          return mergeFrom((PDGHeader)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(PDGHeader other) {
        if (other == PDGHeader.getDefaultInstance()) return this;
        if (other.getVersion() != 0) {
          setVersion(other.getVersion());
        }
        if (!other.getStationCode().isEmpty()) {
          stationCode_ = other.stationCode_;
          onChanged();
        }
        if (!other.getSession().isEmpty()) {
          session_ = other.session_;
          onChanged();
        }
        if (other.getSeq() != 0) {
          setSeq(other.getSeq());
        }
        if (other.command_ != 0) {
          setCommandValue(other.getCommandValue());
        }
        if (!other.getFromAddr().isEmpty()) {
          fromAddr_ = other.fromAddr_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        PDGHeader parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (PDGHeader) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int version_ ;
      /**
       * <pre>
       * 消息版本
       * </pre>
       *
       * <code>int32 version = 1;</code>
       */
      public int getVersion() {
        return version_;
      }
      /**
       * <pre>
       * 消息版本
       * </pre>
       *
       * <code>int32 version = 1;</code>
       */
      public Builder setVersion(int value) {
        
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 消息版本
       * </pre>
       *
       * <code>int32 version = 1;</code>
       */
      public Builder clearVersion() {
        
        version_ = 0;
        onChanged();
        return this;
      }

      private Object stationCode_ = "";
      /**
       * <pre>
       * 站点编码
       * </pre>
       *
       * <code>string stationCode = 2;</code>
       */
      public String getStationCode() {
        Object ref = stationCode_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          stationCode_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 站点编码
       * </pre>
       *
       * <code>string stationCode = 2;</code>
       */
      public com.google.protobuf.ByteString
          getStationCodeBytes() {
        Object ref = stationCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          stationCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 站点编码
       * </pre>
       *
       * <code>string stationCode = 2;</code>
       */
      public Builder setStationCode(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        stationCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 站点编码
       * </pre>
       *
       * <code>string stationCode = 2;</code>
       */
      public Builder clearStationCode() {
        
        stationCode_ = getDefaultInstance().getStationCode();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 站点编码
       * </pre>
       *
       * <code>string stationCode = 2;</code>
       */
      public Builder setStationCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        stationCode_ = value;
        onChanged();
        return this;
      }

      private Object session_ = "";
      /**
       * <pre>
       * 会话ID  站端注册时可以为空，由主站生成返回。后续消息都带此会话ID。
       * </pre>
       *
       * <code>string session = 3;</code>
       */
      public String getSession() {
        Object ref = session_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          session_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 会话ID  站端注册时可以为空，由主站生成返回。后续消息都带此会话ID。
       * </pre>
       *
       * <code>string session = 3;</code>
       */
      public com.google.protobuf.ByteString
          getSessionBytes() {
        Object ref = session_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          session_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 会话ID  站端注册时可以为空，由主站生成返回。后续消息都带此会话ID。
       * </pre>
       *
       * <code>string session = 3;</code>
       */
      public Builder setSession(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        session_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 会话ID  站端注册时可以为空，由主站生成返回。后续消息都带此会话ID。
       * </pre>
       *
       * <code>string session = 3;</code>
       */
      public Builder clearSession() {
        
        session_ = getDefaultInstance().getSession();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 会话ID  站端注册时可以为空，由主站生成返回。后续消息都带此会话ID。
       * </pre>
       *
       * <code>string session = 3;</code>
       */
      public Builder setSessionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        session_ = value;
        onChanged();
        return this;
      }

      private int seq_ ;
      /**
       * <pre>
       * 消息序号
       * </pre>
       *
       * <code>int32 seq = 4;</code>
       */
      public int getSeq() {
        return seq_;
      }
      /**
       * <pre>
       * 消息序号
       * </pre>
       *
       * <code>int32 seq = 4;</code>
       */
      public Builder setSeq(int value) {
        
        seq_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 消息序号
       * </pre>
       *
       * <code>int32 seq = 4;</code>
       */
      public Builder clearSeq() {
        
        seq_ = 0;
        onChanged();
        return this;
      }

      private int command_ = 0;
      /**
       * <pre>
       * 命令，消息类型
       * </pre>
       *
       * <code>.CommandType command = 5;</code>
       */
      public int getCommandValue() {
        return command_;
      }
      /**
       * <pre>
       * 命令，消息类型
       * </pre>
       *
       * <code>.CommandType command = 5;</code>
       */
      public Builder setCommandValue(int value) {
        command_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 命令，消息类型
       * </pre>
       *
       * <code>.CommandType command = 5;</code>
       */
      public CommandType getCommand() {
        CommandType result = CommandType.valueOf(command_);
        return result == null ? CommandType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * 命令，消息类型
       * </pre>
       *
       * <code>.CommandType command = 5;</code>
       */
      public Builder setCommand(CommandType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        command_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 命令，消息类型
       * </pre>
       *
       * <code>.CommandType command = 5;</code>
       */
      public Builder clearCommand() {
        
        command_ = 0;
        onChanged();
        return this;
      }

      private Object fromAddr_ = "";
      /**
       * <pre>
       * 源IP，站端发送IP
       * </pre>
       *
       * <code>string fromAddr = 6;</code>
       */
      public String getFromAddr() {
        Object ref = fromAddr_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          fromAddr_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 源IP，站端发送IP
       * </pre>
       *
       * <code>string fromAddr = 6;</code>
       */
      public com.google.protobuf.ByteString
          getFromAddrBytes() {
        Object ref = fromAddr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          fromAddr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 源IP，站端发送IP
       * </pre>
       *
       * <code>string fromAddr = 6;</code>
       */
      public Builder setFromAddr(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        fromAddr_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 源IP，站端发送IP
       * </pre>
       *
       * <code>string fromAddr = 6;</code>
       */
      public Builder clearFromAddr() {
        
        fromAddr_ = getDefaultInstance().getFromAddr();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 源IP，站端发送IP
       * </pre>
       *
       * <code>string fromAddr = 6;</code>
       */
      public Builder setFromAddrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        fromAddr_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:PDGHeader)
    }

    // @@protoc_insertion_point(class_scope:PDGHeader)
    private static final PDGHeader DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PDGHeader();
    }

    public static PDGHeader getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PDGHeader>
        PARSER = new com.google.protobuf.AbstractParser<PDGHeader>() {
      public PDGHeader parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new PDGHeader(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PDGHeader> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<PDGHeader> getParserForType() {
      return PARSER;
    }

    public PDGHeader getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ResponseMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 结果，成功或失败
     * </pre>
     *
     * <code>bool result = 1;</code>
     */
    boolean getResult();

    /**
     * <pre>
     * 如果失败，失败原因。
     * </pre>
     *
     * <code>string message = 2;</code>
     */
    String getMessage();
    /**
     * <pre>
     * 如果失败，失败原因。
     * </pre>
     *
     * <code>string message = 2;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();
  }
  /**
   * <pre>
   * 响应消息
   * </pre>
   *
   * Protobuf type {@code ResponseMessage}
   */
  public  static final class ResponseMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ResponseMessage)
      ResponseMessageOrBuilder {
    // Use ResponseMessage.newBuilder() to construct.
    private ResponseMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ResponseMessage() {
      result_ = false;
      message_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ResponseMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              result_ = input.readBool();
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              message_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MessageProtobuf.internal_static_ResponseMessage_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MessageProtobuf.internal_static_ResponseMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ResponseMessage.class, Builder.class);
    }

    public static final int RESULT_FIELD_NUMBER = 1;
    private boolean result_;
    /**
     * <pre>
     * 结果，成功或失败
     * </pre>
     *
     * <code>bool result = 1;</code>
     */
    public boolean getResult() {
      return result_;
    }

    public static final int MESSAGE_FIELD_NUMBER = 2;
    private volatile Object message_;
    /**
     * <pre>
     * 如果失败，失败原因。
     * </pre>
     *
     * <code>string message = 2;</code>
     */
    public String getMessage() {
      Object ref = message_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        message_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 如果失败，失败原因。
     * </pre>
     *
     * <code>string message = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      Object ref = message_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (result_ != false) {
        output.writeBool(1, result_);
      }
      if (!getMessageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, message_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (result_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, result_);
      }
      if (!getMessageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, message_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ResponseMessage)) {
        return super.equals(obj);
      }
      ResponseMessage other = (ResponseMessage) obj;

      boolean result = true;
      result = result && (getResult()
          == other.getResult());
      result = result && getMessage()
          .equals(other.getMessage());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RESULT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getResult());
      hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getMessage().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ResponseMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ResponseMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ResponseMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ResponseMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ResponseMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ResponseMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ResponseMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ResponseMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ResponseMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ResponseMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ResponseMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 响应消息
     * </pre>
     *
     * Protobuf type {@code ResponseMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ResponseMessage)
        ResponseMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MessageProtobuf.internal_static_ResponseMessage_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MessageProtobuf.internal_static_ResponseMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ResponseMessage.class, Builder.class);
      }

      // Construct using shenzhen.teamway.pdg.protobuf.MessageProtobuf.ResponseMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        result_ = false;

        message_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MessageProtobuf.internal_static_ResponseMessage_descriptor;
      }

      public ResponseMessage getDefaultInstanceForType() {
        return ResponseMessage.getDefaultInstance();
      }

      public ResponseMessage build() {
        ResponseMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ResponseMessage buildPartial() {
        ResponseMessage result = new ResponseMessage(this);
        result.result_ = result_;
        result.message_ = message_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ResponseMessage) {
          return mergeFrom((ResponseMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ResponseMessage other) {
        if (other == ResponseMessage.getDefaultInstance()) return this;
        if (other.getResult() != false) {
          setResult(other.getResult());
        }
        if (!other.getMessage().isEmpty()) {
          message_ = other.message_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ResponseMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ResponseMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private boolean result_ ;
      /**
       * <pre>
       * 结果，成功或失败
       * </pre>
       *
       * <code>bool result = 1;</code>
       */
      public boolean getResult() {
        return result_;
      }
      /**
       * <pre>
       * 结果，成功或失败
       * </pre>
       *
       * <code>bool result = 1;</code>
       */
      public Builder setResult(boolean value) {
        
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 结果，成功或失败
       * </pre>
       *
       * <code>bool result = 1;</code>
       */
      public Builder clearResult() {
        
        result_ = false;
        onChanged();
        return this;
      }

      private Object message_ = "";
      /**
       * <pre>
       * 如果失败，失败原因。
       * </pre>
       *
       * <code>string message = 2;</code>
       */
      public String getMessage() {
        Object ref = message_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 如果失败，失败原因。
       * </pre>
       *
       * <code>string message = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 如果失败，失败原因。
       * </pre>
       *
       * <code>string message = 2;</code>
       */
      public Builder setMessage(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 如果失败，失败原因。
       * </pre>
       *
       * <code>string message = 2;</code>
       */
      public Builder clearMessage() {
        
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 如果失败，失败原因。
       * </pre>
       *
       * <code>string message = 2;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        message_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ResponseMessage)
    }

    // @@protoc_insertion_point(class_scope:ResponseMessage)
    private static final ResponseMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ResponseMessage();
    }

    public static ResponseMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ResponseMessage>
        PARSER = new com.google.protobuf.AbstractParser<ResponseMessage>() {
      public ResponseMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ResponseMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ResponseMessage> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<ResponseMessage> getParserForType() {
      return PARSER;
    }

    public ResponseMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RegisterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Register)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 登录到主站密码
     * </pre>
     *
     * <code>string password = 1;</code>
     */
    String getPassword();
    /**
     * <pre>
     * 登录到主站密码
     * </pre>
     *
     * <code>string password = 1;</code>
     */
    com.google.protobuf.ByteString
        getPasswordBytes();
  }
  /**
   * <pre>
   * 注册信息  站端 -&gt; 主站
   * </pre>
   *
   * Protobuf type {@code Register}
   */
  public  static final class Register extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Register)
      RegisterOrBuilder {
    // Use Register.newBuilder() to construct.
    private Register(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Register() {
      password_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Register(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              password_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MessageProtobuf.internal_static_Register_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MessageProtobuf.internal_static_Register_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Register.class, Builder.class);
    }

    public static final int PASSWORD_FIELD_NUMBER = 1;
    private volatile Object password_;
    /**
     * <pre>
     * 登录到主站密码
     * </pre>
     *
     * <code>string password = 1;</code>
     */
    public String getPassword() {
      Object ref = password_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        password_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 登录到主站密码
     * </pre>
     *
     * <code>string password = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      Object ref = password_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getPasswordBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, password_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getPasswordBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, password_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Register)) {
        return super.equals(obj);
      }
      Register other = (Register) obj;

      boolean result = true;
      result = result && getPassword()
          .equals(other.getPassword());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PASSWORD_FIELD_NUMBER;
      hash = (53 * hash) + getPassword().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Register parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Register parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Register parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Register parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Register parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Register parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Register parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Register parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Register parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Register parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Register prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 注册信息  站端 -&gt; 主站
     * </pre>
     *
     * Protobuf type {@code Register}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Register)
        RegisterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MessageProtobuf.internal_static_Register_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MessageProtobuf.internal_static_Register_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Register.class, Builder.class);
      }

      // Construct using shenzhen.teamway.pdg.protobuf.MessageProtobuf.Register.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        password_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MessageProtobuf.internal_static_Register_descriptor;
      }

      public Register getDefaultInstanceForType() {
        return Register.getDefaultInstance();
      }

      public Register build() {
        Register result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Register buildPartial() {
        Register result = new Register(this);
        result.password_ = password_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Register) {
          return mergeFrom((Register)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Register other) {
        if (other == Register.getDefaultInstance()) return this;
        if (!other.getPassword().isEmpty()) {
          password_ = other.password_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Register parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Register) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object password_ = "";
      /**
       * <pre>
       * 登录到主站密码
       * </pre>
       *
       * <code>string password = 1;</code>
       */
      public String getPassword() {
        Object ref = password_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          password_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 登录到主站密码
       * </pre>
       *
       * <code>string password = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        Object ref = password_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 登录到主站密码
       * </pre>
       *
       * <code>string password = 1;</code>
       */
      public Builder setPassword(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        password_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 登录到主站密码
       * </pre>
       *
       * <code>string password = 1;</code>
       */
      public Builder clearPassword() {
        
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 登录到主站密码
       * </pre>
       *
       * <code>string password = 1;</code>
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        password_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Register)
    }

    // @@protoc_insertion_point(class_scope:Register)
    private static final Register DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Register();
    }

    public static Register getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Register>
        PARSER = new com.google.protobuf.AbstractParser<Register>() {
      public Register parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Register(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Register> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Register> getParserForType() {
      return PARSER;
    }

    public Register getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RegisterRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RegisterRsp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 注册结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    boolean hasResponse();
    /**
     * <pre>
     * 注册结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    ResponseMessage getResponse();
    /**
     * <pre>
     * 注册结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    ResponseMessageOrBuilder getResponseOrBuilder();
  }
  /**
   * <pre>
   * 注册响应  主站 -&gt; 站端
   * </pre>
   *
   * Protobuf type {@code RegisterRsp}
   */
  public  static final class RegisterRsp extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RegisterRsp)
      RegisterRspOrBuilder {
    // Use RegisterRsp.newBuilder() to construct.
    private RegisterRsp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RegisterRsp() {
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RegisterRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              ResponseMessage.Builder subBuilder = null;
              if (response_ != null) {
                subBuilder = response_.toBuilder();
              }
              response_ = input.readMessage(ResponseMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(response_);
                response_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MessageProtobuf.internal_static_RegisterRsp_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MessageProtobuf.internal_static_RegisterRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RegisterRsp.class, Builder.class);
    }

    public static final int RESPONSE_FIELD_NUMBER = 1;
    private ResponseMessage response_;
    /**
     * <pre>
     * 注册结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    public boolean hasResponse() {
      return response_ != null;
    }
    /**
     * <pre>
     * 注册结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    public ResponseMessage getResponse() {
      return response_ == null ? ResponseMessage.getDefaultInstance() : response_;
    }
    /**
     * <pre>
     * 注册结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    public ResponseMessageOrBuilder getResponseOrBuilder() {
      return getResponse();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (response_ != null) {
        output.writeMessage(1, getResponse());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (response_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResponse());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RegisterRsp)) {
        return super.equals(obj);
      }
      RegisterRsp other = (RegisterRsp) obj;

      boolean result = true;
      result = result && (hasResponse() == other.hasResponse());
      if (hasResponse()) {
        result = result && getResponse()
            .equals(other.getResponse());
      }
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResponse()) {
        hash = (37 * hash) + RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + getResponse().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RegisterRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RegisterRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RegisterRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RegisterRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RegisterRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RegisterRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RegisterRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RegisterRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RegisterRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RegisterRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RegisterRsp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 注册响应  主站 -&gt; 站端
     * </pre>
     *
     * Protobuf type {@code RegisterRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RegisterRsp)
        RegisterRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MessageProtobuf.internal_static_RegisterRsp_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MessageProtobuf.internal_static_RegisterRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RegisterRsp.class, Builder.class);
      }

      // Construct using shenzhen.teamway.pdg.protobuf.MessageProtobuf.RegisterRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (responseBuilder_ == null) {
          response_ = null;
        } else {
          response_ = null;
          responseBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MessageProtobuf.internal_static_RegisterRsp_descriptor;
      }

      public RegisterRsp getDefaultInstanceForType() {
        return RegisterRsp.getDefaultInstance();
      }

      public RegisterRsp build() {
        RegisterRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public RegisterRsp buildPartial() {
        RegisterRsp result = new RegisterRsp(this);
        if (responseBuilder_ == null) {
          result.response_ = response_;
        } else {
          result.response_ = responseBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RegisterRsp) {
          return mergeFrom((RegisterRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RegisterRsp other) {
        if (other == RegisterRsp.getDefaultInstance()) return this;
        if (other.hasResponse()) {
          mergeResponse(other.getResponse());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RegisterRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RegisterRsp) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private ResponseMessage response_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          ResponseMessage, ResponseMessage.Builder, ResponseMessageOrBuilder> responseBuilder_;
      /**
       * <pre>
       * 注册结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public boolean hasResponse() {
        return responseBuilder_ != null || response_ != null;
      }
      /**
       * <pre>
       * 注册结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public ResponseMessage getResponse() {
        if (responseBuilder_ == null) {
          return response_ == null ? ResponseMessage.getDefaultInstance() : response_;
        } else {
          return responseBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 注册结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public Builder setResponse(ResponseMessage value) {
        if (responseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          response_ = value;
          onChanged();
        } else {
          responseBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 注册结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public Builder setResponse(
          ResponseMessage.Builder builderForValue) {
        if (responseBuilder_ == null) {
          response_ = builderForValue.build();
          onChanged();
        } else {
          responseBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 注册结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public Builder mergeResponse(ResponseMessage value) {
        if (responseBuilder_ == null) {
          if (response_ != null) {
            response_ =
              ResponseMessage.newBuilder(response_).mergeFrom(value).buildPartial();
          } else {
            response_ = value;
          }
          onChanged();
        } else {
          responseBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 注册结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public Builder clearResponse() {
        if (responseBuilder_ == null) {
          response_ = null;
          onChanged();
        } else {
          response_ = null;
          responseBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 注册结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public ResponseMessage.Builder getResponseBuilder() {
        
        onChanged();
        return getResponseFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 注册结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public ResponseMessageOrBuilder getResponseOrBuilder() {
        if (responseBuilder_ != null) {
          return responseBuilder_.getMessageOrBuilder();
        } else {
          return response_ == null ?
              ResponseMessage.getDefaultInstance() : response_;
        }
      }
      /**
       * <pre>
       * 注册结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ResponseMessage, ResponseMessage.Builder, ResponseMessageOrBuilder>
          getResponseFieldBuilder() {
        if (responseBuilder_ == null) {
          responseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ResponseMessage, ResponseMessage.Builder, ResponseMessageOrBuilder>(
                  getResponse(),
                  getParentForChildren(),
                  isClean());
          response_ = null;
        }
        return responseBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:RegisterRsp)
    }

    // @@protoc_insertion_point(class_scope:RegisterRsp)
    private static final RegisterRsp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RegisterRsp();
    }

    public static RegisterRsp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RegisterRsp>
        PARSER = new com.google.protobuf.AbstractParser<RegisterRsp>() {
      public RegisterRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RegisterRsp(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RegisterRsp> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RegisterRsp> getParserForType() {
      return PARSER;
    }

    public RegisterRsp getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HeartbeatOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Heartbeat)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 消息发送时间，格式:  2018-08-27 16:42:01
     * </pre>
     *
     * <code>string dateTime = 1;</code>
     */
    String getDateTime();
    /**
     * <pre>
     * 消息发送时间，格式:  2018-08-27 16:42:01
     * </pre>
     *
     * <code>string dateTime = 1;</code>
     */
    com.google.protobuf.ByteString
        getDateTimeBytes();
  }
  /**
   * <pre>
   * 心跳  站端 -&gt; 主站
   * </pre>
   *
   * Protobuf type {@code Heartbeat}
   */
  public  static final class Heartbeat extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Heartbeat)
      HeartbeatOrBuilder {
    // Use Heartbeat.newBuilder() to construct.
    private Heartbeat(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Heartbeat() {
      dateTime_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Heartbeat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              dateTime_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MessageProtobuf.internal_static_Heartbeat_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MessageProtobuf.internal_static_Heartbeat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Heartbeat.class, Builder.class);
    }

    public static final int DATETIME_FIELD_NUMBER = 1;
    private volatile Object dateTime_;
    /**
     * <pre>
     * 消息发送时间，格式:  2018-08-27 16:42:01
     * </pre>
     *
     * <code>string dateTime = 1;</code>
     */
    public String getDateTime() {
      Object ref = dateTime_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        dateTime_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 消息发送时间，格式:  2018-08-27 16:42:01
     * </pre>
     *
     * <code>string dateTime = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDateTimeBytes() {
      Object ref = dateTime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        dateTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getDateTimeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, dateTime_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getDateTimeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, dateTime_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Heartbeat)) {
        return super.equals(obj);
      }
      Heartbeat other = (Heartbeat) obj;

      boolean result = true;
      result = result && getDateTime()
          .equals(other.getDateTime());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DATETIME_FIELD_NUMBER;
      hash = (53 * hash) + getDateTime().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Heartbeat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Heartbeat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Heartbeat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Heartbeat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Heartbeat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Heartbeat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Heartbeat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Heartbeat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Heartbeat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Heartbeat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Heartbeat prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 心跳  站端 -&gt; 主站
     * </pre>
     *
     * Protobuf type {@code Heartbeat}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Heartbeat)
        HeartbeatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MessageProtobuf.internal_static_Heartbeat_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MessageProtobuf.internal_static_Heartbeat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Heartbeat.class, Builder.class);
      }

      // Construct using shenzhen.teamway.pdg.protobuf.MessageProtobuf.Heartbeat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        dateTime_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MessageProtobuf.internal_static_Heartbeat_descriptor;
      }

      public Heartbeat getDefaultInstanceForType() {
        return Heartbeat.getDefaultInstance();
      }

      public Heartbeat build() {
        Heartbeat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Heartbeat buildPartial() {
        Heartbeat result = new Heartbeat(this);
        result.dateTime_ = dateTime_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Heartbeat) {
          return mergeFrom((Heartbeat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Heartbeat other) {
        if (other == Heartbeat.getDefaultInstance()) return this;
        if (!other.getDateTime().isEmpty()) {
          dateTime_ = other.dateTime_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Heartbeat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Heartbeat) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object dateTime_ = "";
      /**
       * <pre>
       * 消息发送时间，格式:  2018-08-27 16:42:01
       * </pre>
       *
       * <code>string dateTime = 1;</code>
       */
      public String getDateTime() {
        Object ref = dateTime_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          dateTime_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 消息发送时间，格式:  2018-08-27 16:42:01
       * </pre>
       *
       * <code>string dateTime = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDateTimeBytes() {
        Object ref = dateTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          dateTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 消息发送时间，格式:  2018-08-27 16:42:01
       * </pre>
       *
       * <code>string dateTime = 1;</code>
       */
      public Builder setDateTime(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dateTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 消息发送时间，格式:  2018-08-27 16:42:01
       * </pre>
       *
       * <code>string dateTime = 1;</code>
       */
      public Builder clearDateTime() {
        
        dateTime_ = getDefaultInstance().getDateTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 消息发送时间，格式:  2018-08-27 16:42:01
       * </pre>
       *
       * <code>string dateTime = 1;</code>
       */
      public Builder setDateTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        dateTime_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Heartbeat)
    }

    // @@protoc_insertion_point(class_scope:Heartbeat)
    private static final Heartbeat DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Heartbeat();
    }

    public static Heartbeat getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Heartbeat>
        PARSER = new com.google.protobuf.AbstractParser<Heartbeat>() {
      public Heartbeat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Heartbeat(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Heartbeat> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Heartbeat> getParserForType() {
      return PARSER;
    }

    public Heartbeat getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HeartbeatRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:HeartbeatRsp)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * 心跳  主站 -&gt; 站端
   * </pre>
   *
   * Protobuf type {@code HeartbeatRsp}
   */
  public  static final class HeartbeatRsp extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:HeartbeatRsp)
      HeartbeatRspOrBuilder {
    // Use HeartbeatRsp.newBuilder() to construct.
    private HeartbeatRsp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HeartbeatRsp() {
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private HeartbeatRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MessageProtobuf.internal_static_HeartbeatRsp_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MessageProtobuf.internal_static_HeartbeatRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              HeartbeatRsp.class, Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof HeartbeatRsp)) {
        return super.equals(obj);
      }
      HeartbeatRsp other = (HeartbeatRsp) obj;

      boolean result = true;
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static HeartbeatRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HeartbeatRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HeartbeatRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HeartbeatRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HeartbeatRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static HeartbeatRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static HeartbeatRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static HeartbeatRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static HeartbeatRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static HeartbeatRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(HeartbeatRsp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 心跳  主站 -&gt; 站端
     * </pre>
     *
     * Protobuf type {@code HeartbeatRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:HeartbeatRsp)
        HeartbeatRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MessageProtobuf.internal_static_HeartbeatRsp_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MessageProtobuf.internal_static_HeartbeatRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                HeartbeatRsp.class, Builder.class);
      }

      // Construct using shenzhen.teamway.pdg.protobuf.MessageProtobuf.HeartbeatRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MessageProtobuf.internal_static_HeartbeatRsp_descriptor;
      }

      public HeartbeatRsp getDefaultInstanceForType() {
        return HeartbeatRsp.getDefaultInstance();
      }

      public HeartbeatRsp build() {
        HeartbeatRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public HeartbeatRsp buildPartial() {
        HeartbeatRsp result = new HeartbeatRsp(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof HeartbeatRsp) {
          return mergeFrom((HeartbeatRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(HeartbeatRsp other) {
        if (other == HeartbeatRsp.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        HeartbeatRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (HeartbeatRsp) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:HeartbeatRsp)
    }

    // @@protoc_insertion_point(class_scope:HeartbeatRsp)
    private static final HeartbeatRsp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new HeartbeatRsp();
    }

    public static HeartbeatRsp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HeartbeatRsp>
        PARSER = new com.google.protobuf.AbstractParser<HeartbeatRsp>() {
      public HeartbeatRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new HeartbeatRsp(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HeartbeatRsp> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<HeartbeatRsp> getParserForType() {
      return PARSER;
    }

    public HeartbeatRsp getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ReportSensorDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ReportSensorData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 设备编码
     * </pre>
     *
     * <code>string deviceCode = 1;</code>
     */
    String getDeviceCode();
    /**
     * <pre>
     * 设备编码
     * </pre>
     *
     * <code>string deviceCode = 1;</code>
     */
    com.google.protobuf.ByteString
        getDeviceCodeBytes();

    /**
     * <pre>
     * 上报时间，格式:  2018-08-27 16:42:01
     * </pre>
     *
     * <code>string reportTime = 2;</code>
     */
    String getReportTime();
    /**
     * <pre>
     * 上报时间，格式:  2018-08-27 16:42:01
     * </pre>
     *
     * <code>string reportTime = 2;</code>
     */
    com.google.protobuf.ByteString
        getReportTimeBytes();

    /**
     * <pre>
     * 采集值，如果设备是开关量，1.0表示打开，0.0表示关闭。
     * </pre>
     *
     * <code>double value = 3;</code>
     */
    double getValue();
  }
  /**
   * <pre>
   * 上报采集值 站端 -&gt; 主站
   * </pre>
   *
   * Protobuf type {@code ReportSensorData}
   */
  public  static final class ReportSensorData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ReportSensorData)
      ReportSensorDataOrBuilder {
    // Use ReportSensorData.newBuilder() to construct.
    private ReportSensorData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ReportSensorData() {
      deviceCode_ = "";
      reportTime_ = "";
      value_ = 0D;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ReportSensorData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              deviceCode_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              reportTime_ = s;
              break;
            }
            case 25: {

              value_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MessageProtobuf.internal_static_ReportSensorData_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MessageProtobuf.internal_static_ReportSensorData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ReportSensorData.class, Builder.class);
    }

    public static final int DEVICECODE_FIELD_NUMBER = 1;
    private volatile Object deviceCode_;
    /**
     * <pre>
     * 设备编码
     * </pre>
     *
     * <code>string deviceCode = 1;</code>
     */
    public String getDeviceCode() {
      Object ref = deviceCode_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        deviceCode_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 设备编码
     * </pre>
     *
     * <code>string deviceCode = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceCodeBytes() {
      Object ref = deviceCode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        deviceCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REPORTTIME_FIELD_NUMBER = 2;
    private volatile Object reportTime_;
    /**
     * <pre>
     * 上报时间，格式:  2018-08-27 16:42:01
     * </pre>
     *
     * <code>string reportTime = 2;</code>
     */
    public String getReportTime() {
      Object ref = reportTime_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        reportTime_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 上报时间，格式:  2018-08-27 16:42:01
     * </pre>
     *
     * <code>string reportTime = 2;</code>
     */
    public com.google.protobuf.ByteString
        getReportTimeBytes() {
      Object ref = reportTime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        reportTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 3;
    private double value_;
    /**
     * <pre>
     * 采集值，如果设备是开关量，1.0表示打开，0.0表示关闭。
     * </pre>
     *
     * <code>double value = 3;</code>
     */
    public double getValue() {
      return value_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getDeviceCodeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, deviceCode_);
      }
      if (!getReportTimeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, reportTime_);
      }
      if (value_ != 0D) {
        output.writeDouble(3, value_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getDeviceCodeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, deviceCode_);
      }
      if (!getReportTimeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, reportTime_);
      }
      if (value_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, value_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ReportSensorData)) {
        return super.equals(obj);
      }
      ReportSensorData other = (ReportSensorData) obj;

      boolean result = true;
      result = result && getDeviceCode()
          .equals(other.getDeviceCode());
      result = result && getReportTime()
          .equals(other.getReportTime());
      result = result && (
          Double.doubleToLongBits(getValue())
          == Double.doubleToLongBits(
              other.getValue()));
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DEVICECODE_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceCode().hashCode();
      hash = (37 * hash) + REPORTTIME_FIELD_NUMBER;
      hash = (53 * hash) + getReportTime().hashCode();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getValue()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ReportSensorData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ReportSensorData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ReportSensorData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ReportSensorData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ReportSensorData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ReportSensorData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ReportSensorData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ReportSensorData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ReportSensorData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ReportSensorData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ReportSensorData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 上报采集值 站端 -&gt; 主站
     * </pre>
     *
     * Protobuf type {@code ReportSensorData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ReportSensorData)
        ReportSensorDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MessageProtobuf.internal_static_ReportSensorData_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MessageProtobuf.internal_static_ReportSensorData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ReportSensorData.class, Builder.class);
      }

      // Construct using shenzhen.teamway.pdg.protobuf.MessageProtobuf.ReportSensorData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        deviceCode_ = "";

        reportTime_ = "";

        value_ = 0D;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MessageProtobuf.internal_static_ReportSensorData_descriptor;
      }

      public ReportSensorData getDefaultInstanceForType() {
        return ReportSensorData.getDefaultInstance();
      }

      public ReportSensorData build() {
        ReportSensorData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ReportSensorData buildPartial() {
        ReportSensorData result = new ReportSensorData(this);
        result.deviceCode_ = deviceCode_;
        result.reportTime_ = reportTime_;
        result.value_ = value_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ReportSensorData) {
          return mergeFrom((ReportSensorData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ReportSensorData other) {
        if (other == ReportSensorData.getDefaultInstance()) return this;
        if (!other.getDeviceCode().isEmpty()) {
          deviceCode_ = other.deviceCode_;
          onChanged();
        }
        if (!other.getReportTime().isEmpty()) {
          reportTime_ = other.reportTime_;
          onChanged();
        }
        if (other.getValue() != 0D) {
          setValue(other.getValue());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ReportSensorData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ReportSensorData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object deviceCode_ = "";
      /**
       * <pre>
       * 设备编码
       * </pre>
       *
       * <code>string deviceCode = 1;</code>
       */
      public String getDeviceCode() {
        Object ref = deviceCode_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          deviceCode_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 设备编码
       * </pre>
       *
       * <code>string deviceCode = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceCodeBytes() {
        Object ref = deviceCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          deviceCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 设备编码
       * </pre>
       *
       * <code>string deviceCode = 1;</code>
       */
      public Builder setDeviceCode(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        deviceCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 设备编码
       * </pre>
       *
       * <code>string deviceCode = 1;</code>
       */
      public Builder clearDeviceCode() {
        
        deviceCode_ = getDefaultInstance().getDeviceCode();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 设备编码
       * </pre>
       *
       * <code>string deviceCode = 1;</code>
       */
      public Builder setDeviceCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        deviceCode_ = value;
        onChanged();
        return this;
      }

      private Object reportTime_ = "";
      /**
       * <pre>
       * 上报时间，格式:  2018-08-27 16:42:01
       * </pre>
       *
       * <code>string reportTime = 2;</code>
       */
      public String getReportTime() {
        Object ref = reportTime_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          reportTime_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 上报时间，格式:  2018-08-27 16:42:01
       * </pre>
       *
       * <code>string reportTime = 2;</code>
       */
      public com.google.protobuf.ByteString
          getReportTimeBytes() {
        Object ref = reportTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          reportTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 上报时间，格式:  2018-08-27 16:42:01
       * </pre>
       *
       * <code>string reportTime = 2;</code>
       */
      public Builder setReportTime(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        reportTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 上报时间，格式:  2018-08-27 16:42:01
       * </pre>
       *
       * <code>string reportTime = 2;</code>
       */
      public Builder clearReportTime() {
        
        reportTime_ = getDefaultInstance().getReportTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 上报时间，格式:  2018-08-27 16:42:01
       * </pre>
       *
       * <code>string reportTime = 2;</code>
       */
      public Builder setReportTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        reportTime_ = value;
        onChanged();
        return this;
      }

      private double value_ ;
      /**
       * <pre>
       * 采集值，如果设备是开关量，1.0表示打开，0.0表示关闭。
       * </pre>
       *
       * <code>double value = 3;</code>
       */
      public double getValue() {
        return value_;
      }
      /**
       * <pre>
       * 采集值，如果设备是开关量，1.0表示打开，0.0表示关闭。
       * </pre>
       *
       * <code>double value = 3;</code>
       */
      public Builder setValue(double value) {
        
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 采集值，如果设备是开关量，1.0表示打开，0.0表示关闭。
       * </pre>
       *
       * <code>double value = 3;</code>
       */
      public Builder clearValue() {
        
        value_ = 0D;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ReportSensorData)
    }

    // @@protoc_insertion_point(class_scope:ReportSensorData)
    private static final ReportSensorData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ReportSensorData();
    }

    public static ReportSensorData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ReportSensorData>
        PARSER = new com.google.protobuf.AbstractParser<ReportSensorData>() {
      public ReportSensorData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ReportSensorData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ReportSensorData> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<ReportSensorData> getParserForType() {
      return PARSER;
    }

    public ReportSensorData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ReportSensorDataRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ReportSensorDataRsp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    boolean hasResponse();
    /**
     * <pre>
     * 结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    ResponseMessage getResponse();
    /**
     * <pre>
     * 结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    ResponseMessageOrBuilder getResponseOrBuilder();
  }
  /**
   * <pre>
   * 上报采集值响应  主站 -&gt; 站端
   * </pre>
   *
   * Protobuf type {@code ReportSensorDataRsp}
   */
  public  static final class ReportSensorDataRsp extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ReportSensorDataRsp)
      ReportSensorDataRspOrBuilder {
    // Use ReportSensorDataRsp.newBuilder() to construct.
    private ReportSensorDataRsp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ReportSensorDataRsp() {
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ReportSensorDataRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              ResponseMessage.Builder subBuilder = null;
              if (response_ != null) {
                subBuilder = response_.toBuilder();
              }
              response_ = input.readMessage(ResponseMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(response_);
                response_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MessageProtobuf.internal_static_ReportSensorDataRsp_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MessageProtobuf.internal_static_ReportSensorDataRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ReportSensorDataRsp.class, Builder.class);
    }

    public static final int RESPONSE_FIELD_NUMBER = 1;
    private ResponseMessage response_;
    /**
     * <pre>
     * 结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    public boolean hasResponse() {
      return response_ != null;
    }
    /**
     * <pre>
     * 结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    public ResponseMessage getResponse() {
      return response_ == null ? ResponseMessage.getDefaultInstance() : response_;
    }
    /**
     * <pre>
     * 结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    public ResponseMessageOrBuilder getResponseOrBuilder() {
      return getResponse();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (response_ != null) {
        output.writeMessage(1, getResponse());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (response_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResponse());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ReportSensorDataRsp)) {
        return super.equals(obj);
      }
      ReportSensorDataRsp other = (ReportSensorDataRsp) obj;

      boolean result = true;
      result = result && (hasResponse() == other.hasResponse());
      if (hasResponse()) {
        result = result && getResponse()
            .equals(other.getResponse());
      }
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResponse()) {
        hash = (37 * hash) + RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + getResponse().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ReportSensorDataRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ReportSensorDataRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ReportSensorDataRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ReportSensorDataRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ReportSensorDataRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ReportSensorDataRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ReportSensorDataRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ReportSensorDataRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ReportSensorDataRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ReportSensorDataRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ReportSensorDataRsp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 上报采集值响应  主站 -&gt; 站端
     * </pre>
     *
     * Protobuf type {@code ReportSensorDataRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ReportSensorDataRsp)
        ReportSensorDataRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MessageProtobuf.internal_static_ReportSensorDataRsp_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MessageProtobuf.internal_static_ReportSensorDataRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ReportSensorDataRsp.class, Builder.class);
      }

      // Construct using shenzhen.teamway.pdg.protobuf.MessageProtobuf.ReportSensorDataRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (responseBuilder_ == null) {
          response_ = null;
        } else {
          response_ = null;
          responseBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MessageProtobuf.internal_static_ReportSensorDataRsp_descriptor;
      }

      public ReportSensorDataRsp getDefaultInstanceForType() {
        return ReportSensorDataRsp.getDefaultInstance();
      }

      public ReportSensorDataRsp build() {
        ReportSensorDataRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ReportSensorDataRsp buildPartial() {
        ReportSensorDataRsp result = new ReportSensorDataRsp(this);
        if (responseBuilder_ == null) {
          result.response_ = response_;
        } else {
          result.response_ = responseBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ReportSensorDataRsp) {
          return mergeFrom((ReportSensorDataRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ReportSensorDataRsp other) {
        if (other == ReportSensorDataRsp.getDefaultInstance()) return this;
        if (other.hasResponse()) {
          mergeResponse(other.getResponse());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ReportSensorDataRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ReportSensorDataRsp) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private ResponseMessage response_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          ResponseMessage, ResponseMessage.Builder, ResponseMessageOrBuilder> responseBuilder_;
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public boolean hasResponse() {
        return responseBuilder_ != null || response_ != null;
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public ResponseMessage getResponse() {
        if (responseBuilder_ == null) {
          return response_ == null ? ResponseMessage.getDefaultInstance() : response_;
        } else {
          return responseBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public Builder setResponse(ResponseMessage value) {
        if (responseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          response_ = value;
          onChanged();
        } else {
          responseBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public Builder setResponse(
          ResponseMessage.Builder builderForValue) {
        if (responseBuilder_ == null) {
          response_ = builderForValue.build();
          onChanged();
        } else {
          responseBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public Builder mergeResponse(ResponseMessage value) {
        if (responseBuilder_ == null) {
          if (response_ != null) {
            response_ =
              ResponseMessage.newBuilder(response_).mergeFrom(value).buildPartial();
          } else {
            response_ = value;
          }
          onChanged();
        } else {
          responseBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public Builder clearResponse() {
        if (responseBuilder_ == null) {
          response_ = null;
          onChanged();
        } else {
          response_ = null;
          responseBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public ResponseMessage.Builder getResponseBuilder() {
        
        onChanged();
        return getResponseFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public ResponseMessageOrBuilder getResponseOrBuilder() {
        if (responseBuilder_ != null) {
          return responseBuilder_.getMessageOrBuilder();
        } else {
          return response_ == null ?
              ResponseMessage.getDefaultInstance() : response_;
        }
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ResponseMessage, ResponseMessage.Builder, ResponseMessageOrBuilder>
          getResponseFieldBuilder() {
        if (responseBuilder_ == null) {
          responseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ResponseMessage, ResponseMessage.Builder, ResponseMessageOrBuilder>(
                  getResponse(),
                  getParentForChildren(),
                  isClean());
          response_ = null;
        }
        return responseBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ReportSensorDataRsp)
    }

    // @@protoc_insertion_point(class_scope:ReportSensorDataRsp)
    private static final ReportSensorDataRsp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ReportSensorDataRsp();
    }

    public static ReportSensorDataRsp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ReportSensorDataRsp>
        PARSER = new com.google.protobuf.AbstractParser<ReportSensorDataRsp>() {
      public ReportSensorDataRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ReportSensorDataRsp(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ReportSensorDataRsp> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<ReportSensorDataRsp> getParserForType() {
      return PARSER;
    }

    public ReportSensorDataRsp getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ReportAlarmOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ReportAlarm)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 设备编码
     * </pre>
     *
     * <code>string deviceCode = 1;</code>
     */
    String getDeviceCode();
    /**
     * <pre>
     * 设备编码
     * </pre>
     *
     * <code>string deviceCode = 1;</code>
     */
    com.google.protobuf.ByteString
        getDeviceCodeBytes();

    /**
     * <pre>
     * 上报时间，格式:  2018-08-27 16:42:01
     * </pre>
     *
     * <code>string reportTime = 2;</code>
     */
    String getReportTime();
    /**
     * <pre>
     * 上报时间，格式:  2018-08-27 16:42:01
     * </pre>
     *
     * <code>string reportTime = 2;</code>
     */
    com.google.protobuf.ByteString
        getReportTimeBytes();

    /**
     * <pre>
     * 告警类型
     * </pre>
     *
     * <code>.AlarmType alarmType = 3;</code>
     */
    int getAlarmTypeValue();
    /**
     * <pre>
     * 告警类型
     * </pre>
     *
     * <code>.AlarmType alarmType = 3;</code>
     */
    AlarmType getAlarmType();

    /**
     * <pre>
     * 告警状态
     * </pre>
     *
     * <code>.AlarmState alarmState = 4;</code>
     */
    int getAlarmStateValue();
    /**
     * <pre>
     * 告警状态
     * </pre>
     *
     * <code>.AlarmState alarmState = 4;</code>
     */
    AlarmState getAlarmState();

    /**
     * <pre>
     * 告警级别
     * </pre>
     *
     * <code>.AlarmLevel alarmLevel = 5;</code>
     */
    int getAlarmLevelValue();
    /**
     * <pre>
     * 告警级别
     * </pre>
     *
     * <code>.AlarmLevel alarmLevel = 5;</code>
     */
    AlarmLevel getAlarmLevel();

    /**
     * <pre>
     * 告警时采集值，如果设备是开关量，1.0表示打开，0.0表示关闭。    
     * </pre>
     *
     * <code>double value = 6;</code>
     */
    double getValue();
  }
  /**
   * <pre>
   * 上报告警  站端 -&gt; 主站
   * </pre>
   *
   * Protobuf type {@code ReportAlarm}
   */
  public  static final class ReportAlarm extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ReportAlarm)
      ReportAlarmOrBuilder {
    // Use ReportAlarm.newBuilder() to construct.
    private ReportAlarm(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ReportAlarm() {
      deviceCode_ = "";
      reportTime_ = "";
      alarmType_ = 0;
      alarmState_ = 0;
      alarmLevel_ = 0;
      value_ = 0D;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ReportAlarm(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              deviceCode_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              reportTime_ = s;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              alarmType_ = rawValue;
              break;
            }
            case 32: {
              int rawValue = input.readEnum();

              alarmState_ = rawValue;
              break;
            }
            case 40: {
              int rawValue = input.readEnum();

              alarmLevel_ = rawValue;
              break;
            }
            case 49: {

              value_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MessageProtobuf.internal_static_ReportAlarm_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MessageProtobuf.internal_static_ReportAlarm_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ReportAlarm.class, Builder.class);
    }

    public static final int DEVICECODE_FIELD_NUMBER = 1;
    private volatile Object deviceCode_;
    /**
     * <pre>
     * 设备编码
     * </pre>
     *
     * <code>string deviceCode = 1;</code>
     */
    public String getDeviceCode() {
      Object ref = deviceCode_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        deviceCode_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 设备编码
     * </pre>
     *
     * <code>string deviceCode = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceCodeBytes() {
      Object ref = deviceCode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        deviceCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REPORTTIME_FIELD_NUMBER = 2;
    private volatile Object reportTime_;
    /**
     * <pre>
     * 上报时间，格式:  2018-08-27 16:42:01
     * </pre>
     *
     * <code>string reportTime = 2;</code>
     */
    public String getReportTime() {
      Object ref = reportTime_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        reportTime_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 上报时间，格式:  2018-08-27 16:42:01
     * </pre>
     *
     * <code>string reportTime = 2;</code>
     */
    public com.google.protobuf.ByteString
        getReportTimeBytes() {
      Object ref = reportTime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        reportTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ALARMTYPE_FIELD_NUMBER = 3;
    private int alarmType_;
    /**
     * <pre>
     * 告警类型
     * </pre>
     *
     * <code>.AlarmType alarmType = 3;</code>
     */
    public int getAlarmTypeValue() {
      return alarmType_;
    }
    /**
     * <pre>
     * 告警类型
     * </pre>
     *
     * <code>.AlarmType alarmType = 3;</code>
     */
    public AlarmType getAlarmType() {
      AlarmType result = AlarmType.valueOf(alarmType_);
      return result == null ? AlarmType.UNRECOGNIZED : result;
    }

    public static final int ALARMSTATE_FIELD_NUMBER = 4;
    private int alarmState_;
    /**
     * <pre>
     * 告警状态
     * </pre>
     *
     * <code>.AlarmState alarmState = 4;</code>
     */
    public int getAlarmStateValue() {
      return alarmState_;
    }
    /**
     * <pre>
     * 告警状态
     * </pre>
     *
     * <code>.AlarmState alarmState = 4;</code>
     */
    public AlarmState getAlarmState() {
      AlarmState result = AlarmState.valueOf(alarmState_);
      return result == null ? AlarmState.UNRECOGNIZED : result;
    }

    public static final int ALARMLEVEL_FIELD_NUMBER = 5;
    private int alarmLevel_;
    /**
     * <pre>
     * 告警级别
     * </pre>
     *
     * <code>.AlarmLevel alarmLevel = 5;</code>
     */
    public int getAlarmLevelValue() {
      return alarmLevel_;
    }
    /**
     * <pre>
     * 告警级别
     * </pre>
     *
     * <code>.AlarmLevel alarmLevel = 5;</code>
     */
    public AlarmLevel getAlarmLevel() {
      AlarmLevel result = AlarmLevel.valueOf(alarmLevel_);
      return result == null ? AlarmLevel.UNRECOGNIZED : result;
    }

    public static final int VALUE_FIELD_NUMBER = 6;
    private double value_;
    /**
     * <pre>
     * 告警时采集值，如果设备是开关量，1.0表示打开，0.0表示关闭。    
     * </pre>
     *
     * <code>double value = 6;</code>
     */
    public double getValue() {
      return value_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getDeviceCodeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, deviceCode_);
      }
      if (!getReportTimeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, reportTime_);
      }
      if (alarmType_ != AlarmType.DEVICE_FAILDEFAULT.getNumber()) {
        output.writeEnum(3, alarmType_);
      }
      if (alarmState_ != AlarmState.ALARM_ONDEFAULT.getNumber()) {
        output.writeEnum(4, alarmState_);
      }
      if (alarmLevel_ != AlarmLevel.ALARM_NORMALDEFAULT.getNumber()) {
        output.writeEnum(5, alarmLevel_);
      }
      if (value_ != 0D) {
        output.writeDouble(6, value_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getDeviceCodeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, deviceCode_);
      }
      if (!getReportTimeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, reportTime_);
      }
      if (alarmType_ != AlarmType.DEVICE_FAILDEFAULT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, alarmType_);
      }
      if (alarmState_ != AlarmState.ALARM_ONDEFAULT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, alarmState_);
      }
      if (alarmLevel_ != AlarmLevel.ALARM_NORMALDEFAULT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, alarmLevel_);
      }
      if (value_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, value_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ReportAlarm)) {
        return super.equals(obj);
      }
      ReportAlarm other = (ReportAlarm) obj;

      boolean result = true;
      result = result && getDeviceCode()
          .equals(other.getDeviceCode());
      result = result && getReportTime()
          .equals(other.getReportTime());
      result = result && alarmType_ == other.alarmType_;
      result = result && alarmState_ == other.alarmState_;
      result = result && alarmLevel_ == other.alarmLevel_;
      result = result && (
          Double.doubleToLongBits(getValue())
          == Double.doubleToLongBits(
              other.getValue()));
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DEVICECODE_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceCode().hashCode();
      hash = (37 * hash) + REPORTTIME_FIELD_NUMBER;
      hash = (53 * hash) + getReportTime().hashCode();
      hash = (37 * hash) + ALARMTYPE_FIELD_NUMBER;
      hash = (53 * hash) + alarmType_;
      hash = (37 * hash) + ALARMSTATE_FIELD_NUMBER;
      hash = (53 * hash) + alarmState_;
      hash = (37 * hash) + ALARMLEVEL_FIELD_NUMBER;
      hash = (53 * hash) + alarmLevel_;
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getValue()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ReportAlarm parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ReportAlarm parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ReportAlarm parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ReportAlarm parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ReportAlarm parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ReportAlarm parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ReportAlarm parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ReportAlarm parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ReportAlarm parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ReportAlarm parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ReportAlarm prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 上报告警  站端 -&gt; 主站
     * </pre>
     *
     * Protobuf type {@code ReportAlarm}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ReportAlarm)
        ReportAlarmOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MessageProtobuf.internal_static_ReportAlarm_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MessageProtobuf.internal_static_ReportAlarm_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ReportAlarm.class, Builder.class);
      }

      // Construct using shenzhen.teamway.pdg.protobuf.MessageProtobuf.ReportAlarm.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        deviceCode_ = "";

        reportTime_ = "";

        alarmType_ = 0;

        alarmState_ = 0;

        alarmLevel_ = 0;

        value_ = 0D;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MessageProtobuf.internal_static_ReportAlarm_descriptor;
      }

      public ReportAlarm getDefaultInstanceForType() {
        return ReportAlarm.getDefaultInstance();
      }

      public ReportAlarm build() {
        ReportAlarm result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ReportAlarm buildPartial() {
        ReportAlarm result = new ReportAlarm(this);
        result.deviceCode_ = deviceCode_;
        result.reportTime_ = reportTime_;
        result.alarmType_ = alarmType_;
        result.alarmState_ = alarmState_;
        result.alarmLevel_ = alarmLevel_;
        result.value_ = value_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ReportAlarm) {
          return mergeFrom((ReportAlarm)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ReportAlarm other) {
        if (other == ReportAlarm.getDefaultInstance()) return this;
        if (!other.getDeviceCode().isEmpty()) {
          deviceCode_ = other.deviceCode_;
          onChanged();
        }
        if (!other.getReportTime().isEmpty()) {
          reportTime_ = other.reportTime_;
          onChanged();
        }
        if (other.alarmType_ != 0) {
          setAlarmTypeValue(other.getAlarmTypeValue());
        }
        if (other.alarmState_ != 0) {
          setAlarmStateValue(other.getAlarmStateValue());
        }
        if (other.alarmLevel_ != 0) {
          setAlarmLevelValue(other.getAlarmLevelValue());
        }
        if (other.getValue() != 0D) {
          setValue(other.getValue());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ReportAlarm parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ReportAlarm) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object deviceCode_ = "";
      /**
       * <pre>
       * 设备编码
       * </pre>
       *
       * <code>string deviceCode = 1;</code>
       */
      public String getDeviceCode() {
        Object ref = deviceCode_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          deviceCode_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 设备编码
       * </pre>
       *
       * <code>string deviceCode = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceCodeBytes() {
        Object ref = deviceCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          deviceCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 设备编码
       * </pre>
       *
       * <code>string deviceCode = 1;</code>
       */
      public Builder setDeviceCode(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        deviceCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 设备编码
       * </pre>
       *
       * <code>string deviceCode = 1;</code>
       */
      public Builder clearDeviceCode() {
        
        deviceCode_ = getDefaultInstance().getDeviceCode();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 设备编码
       * </pre>
       *
       * <code>string deviceCode = 1;</code>
       */
      public Builder setDeviceCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        deviceCode_ = value;
        onChanged();
        return this;
      }

      private Object reportTime_ = "";
      /**
       * <pre>
       * 上报时间，格式:  2018-08-27 16:42:01
       * </pre>
       *
       * <code>string reportTime = 2;</code>
       */
      public String getReportTime() {
        Object ref = reportTime_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          reportTime_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 上报时间，格式:  2018-08-27 16:42:01
       * </pre>
       *
       * <code>string reportTime = 2;</code>
       */
      public com.google.protobuf.ByteString
          getReportTimeBytes() {
        Object ref = reportTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          reportTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 上报时间，格式:  2018-08-27 16:42:01
       * </pre>
       *
       * <code>string reportTime = 2;</code>
       */
      public Builder setReportTime(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        reportTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 上报时间，格式:  2018-08-27 16:42:01
       * </pre>
       *
       * <code>string reportTime = 2;</code>
       */
      public Builder clearReportTime() {
        
        reportTime_ = getDefaultInstance().getReportTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 上报时间，格式:  2018-08-27 16:42:01
       * </pre>
       *
       * <code>string reportTime = 2;</code>
       */
      public Builder setReportTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        reportTime_ = value;
        onChanged();
        return this;
      }

      private int alarmType_ = 0;
      /**
       * <pre>
       * 告警类型
       * </pre>
       *
       * <code>.AlarmType alarmType = 3;</code>
       */
      public int getAlarmTypeValue() {
        return alarmType_;
      }
      /**
       * <pre>
       * 告警类型
       * </pre>
       *
       * <code>.AlarmType alarmType = 3;</code>
       */
      public Builder setAlarmTypeValue(int value) {
        alarmType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 告警类型
       * </pre>
       *
       * <code>.AlarmType alarmType = 3;</code>
       */
      public AlarmType getAlarmType() {
        AlarmType result = AlarmType.valueOf(alarmType_);
        return result == null ? AlarmType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * 告警类型
       * </pre>
       *
       * <code>.AlarmType alarmType = 3;</code>
       */
      public Builder setAlarmType(AlarmType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        alarmType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 告警类型
       * </pre>
       *
       * <code>.AlarmType alarmType = 3;</code>
       */
      public Builder clearAlarmType() {
        
        alarmType_ = 0;
        onChanged();
        return this;
      }

      private int alarmState_ = 0;
      /**
       * <pre>
       * 告警状态
       * </pre>
       *
       * <code>.AlarmState alarmState = 4;</code>
       */
      public int getAlarmStateValue() {
        return alarmState_;
      }
      /**
       * <pre>
       * 告警状态
       * </pre>
       *
       * <code>.AlarmState alarmState = 4;</code>
       */
      public Builder setAlarmStateValue(int value) {
        alarmState_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 告警状态
       * </pre>
       *
       * <code>.AlarmState alarmState = 4;</code>
       */
      public AlarmState getAlarmState() {
        AlarmState result = AlarmState.valueOf(alarmState_);
        return result == null ? AlarmState.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * 告警状态
       * </pre>
       *
       * <code>.AlarmState alarmState = 4;</code>
       */
      public Builder setAlarmState(AlarmState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        alarmState_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 告警状态
       * </pre>
       *
       * <code>.AlarmState alarmState = 4;</code>
       */
      public Builder clearAlarmState() {
        
        alarmState_ = 0;
        onChanged();
        return this;
      }

      private int alarmLevel_ = 0;
      /**
       * <pre>
       * 告警级别
       * </pre>
       *
       * <code>.AlarmLevel alarmLevel = 5;</code>
       */
      public int getAlarmLevelValue() {
        return alarmLevel_;
      }
      /**
       * <pre>
       * 告警级别
       * </pre>
       *
       * <code>.AlarmLevel alarmLevel = 5;</code>
       */
      public Builder setAlarmLevelValue(int value) {
        alarmLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 告警级别
       * </pre>
       *
       * <code>.AlarmLevel alarmLevel = 5;</code>
       */
      public AlarmLevel getAlarmLevel() {
        AlarmLevel result = AlarmLevel.valueOf(alarmLevel_);
        return result == null ? AlarmLevel.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * 告警级别
       * </pre>
       *
       * <code>.AlarmLevel alarmLevel = 5;</code>
       */
      public Builder setAlarmLevel(AlarmLevel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        alarmLevel_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 告警级别
       * </pre>
       *
       * <code>.AlarmLevel alarmLevel = 5;</code>
       */
      public Builder clearAlarmLevel() {
        
        alarmLevel_ = 0;
        onChanged();
        return this;
      }

      private double value_ ;
      /**
       * <pre>
       * 告警时采集值，如果设备是开关量，1.0表示打开，0.0表示关闭。    
       * </pre>
       *
       * <code>double value = 6;</code>
       */
      public double getValue() {
        return value_;
      }
      /**
       * <pre>
       * 告警时采集值，如果设备是开关量，1.0表示打开，0.0表示关闭。    
       * </pre>
       *
       * <code>double value = 6;</code>
       */
      public Builder setValue(double value) {
        
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 告警时采集值，如果设备是开关量，1.0表示打开，0.0表示关闭。    
       * </pre>
       *
       * <code>double value = 6;</code>
       */
      public Builder clearValue() {
        
        value_ = 0D;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ReportAlarm)
    }

    // @@protoc_insertion_point(class_scope:ReportAlarm)
    private static final ReportAlarm DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ReportAlarm();
    }

    public static ReportAlarm getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ReportAlarm>
        PARSER = new com.google.protobuf.AbstractParser<ReportAlarm>() {
      public ReportAlarm parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ReportAlarm(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ReportAlarm> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<ReportAlarm> getParserForType() {
      return PARSER;
    }

    public ReportAlarm getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ReportAlarmRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ReportAlarmRsp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    boolean hasResponse();
    /**
     * <pre>
     * 结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    ResponseMessage getResponse();
    /**
     * <pre>
     * 结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    ResponseMessageOrBuilder getResponseOrBuilder();
  }
  /**
   * <pre>
   * 上报告警响应  主站 -&gt; 站端
   * </pre>
   *
   * Protobuf type {@code ReportAlarmRsp}
   */
  public  static final class ReportAlarmRsp extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ReportAlarmRsp)
      ReportAlarmRspOrBuilder {
    // Use ReportAlarmRsp.newBuilder() to construct.
    private ReportAlarmRsp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ReportAlarmRsp() {
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ReportAlarmRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              ResponseMessage.Builder subBuilder = null;
              if (response_ != null) {
                subBuilder = response_.toBuilder();
              }
              response_ = input.readMessage(ResponseMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(response_);
                response_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MessageProtobuf.internal_static_ReportAlarmRsp_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MessageProtobuf.internal_static_ReportAlarmRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ReportAlarmRsp.class, Builder.class);
    }

    public static final int RESPONSE_FIELD_NUMBER = 1;
    private ResponseMessage response_;
    /**
     * <pre>
     * 结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    public boolean hasResponse() {
      return response_ != null;
    }
    /**
     * <pre>
     * 结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    public ResponseMessage getResponse() {
      return response_ == null ? ResponseMessage.getDefaultInstance() : response_;
    }
    /**
     * <pre>
     * 结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    public ResponseMessageOrBuilder getResponseOrBuilder() {
      return getResponse();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (response_ != null) {
        output.writeMessage(1, getResponse());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (response_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResponse());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ReportAlarmRsp)) {
        return super.equals(obj);
      }
      ReportAlarmRsp other = (ReportAlarmRsp) obj;

      boolean result = true;
      result = result && (hasResponse() == other.hasResponse());
      if (hasResponse()) {
        result = result && getResponse()
            .equals(other.getResponse());
      }
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResponse()) {
        hash = (37 * hash) + RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + getResponse().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ReportAlarmRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ReportAlarmRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ReportAlarmRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ReportAlarmRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ReportAlarmRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ReportAlarmRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ReportAlarmRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ReportAlarmRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ReportAlarmRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ReportAlarmRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ReportAlarmRsp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 上报告警响应  主站 -&gt; 站端
     * </pre>
     *
     * Protobuf type {@code ReportAlarmRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ReportAlarmRsp)
        ReportAlarmRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MessageProtobuf.internal_static_ReportAlarmRsp_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MessageProtobuf.internal_static_ReportAlarmRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ReportAlarmRsp.class, Builder.class);
      }

      // Construct using shenzhen.teamway.pdg.protobuf.MessageProtobuf.ReportAlarmRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (responseBuilder_ == null) {
          response_ = null;
        } else {
          response_ = null;
          responseBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MessageProtobuf.internal_static_ReportAlarmRsp_descriptor;
      }

      public ReportAlarmRsp getDefaultInstanceForType() {
        return ReportAlarmRsp.getDefaultInstance();
      }

      public ReportAlarmRsp build() {
        ReportAlarmRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ReportAlarmRsp buildPartial() {
        ReportAlarmRsp result = new ReportAlarmRsp(this);
        if (responseBuilder_ == null) {
          result.response_ = response_;
        } else {
          result.response_ = responseBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ReportAlarmRsp) {
          return mergeFrom((ReportAlarmRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ReportAlarmRsp other) {
        if (other == ReportAlarmRsp.getDefaultInstance()) return this;
        if (other.hasResponse()) {
          mergeResponse(other.getResponse());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ReportAlarmRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ReportAlarmRsp) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private ResponseMessage response_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          ResponseMessage, ResponseMessage.Builder, ResponseMessageOrBuilder> responseBuilder_;
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public boolean hasResponse() {
        return responseBuilder_ != null || response_ != null;
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public ResponseMessage getResponse() {
        if (responseBuilder_ == null) {
          return response_ == null ? ResponseMessage.getDefaultInstance() : response_;
        } else {
          return responseBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public Builder setResponse(ResponseMessage value) {
        if (responseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          response_ = value;
          onChanged();
        } else {
          responseBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public Builder setResponse(
          ResponseMessage.Builder builderForValue) {
        if (responseBuilder_ == null) {
          response_ = builderForValue.build();
          onChanged();
        } else {
          responseBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public Builder mergeResponse(ResponseMessage value) {
        if (responseBuilder_ == null) {
          if (response_ != null) {
            response_ =
              ResponseMessage.newBuilder(response_).mergeFrom(value).buildPartial();
          } else {
            response_ = value;
          }
          onChanged();
        } else {
          responseBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public Builder clearResponse() {
        if (responseBuilder_ == null) {
          response_ = null;
          onChanged();
        } else {
          response_ = null;
          responseBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public ResponseMessage.Builder getResponseBuilder() {
        
        onChanged();
        return getResponseFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public ResponseMessageOrBuilder getResponseOrBuilder() {
        if (responseBuilder_ != null) {
          return responseBuilder_.getMessageOrBuilder();
        } else {
          return response_ == null ?
              ResponseMessage.getDefaultInstance() : response_;
        }
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ResponseMessage, ResponseMessage.Builder, ResponseMessageOrBuilder>
          getResponseFieldBuilder() {
        if (responseBuilder_ == null) {
          responseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ResponseMessage, ResponseMessage.Builder, ResponseMessageOrBuilder>(
                  getResponse(),
                  getParentForChildren(),
                  isClean());
          response_ = null;
        }
        return responseBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ReportAlarmRsp)
    }

    // @@protoc_insertion_point(class_scope:ReportAlarmRsp)
    private static final ReportAlarmRsp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ReportAlarmRsp();
    }

    public static ReportAlarmRsp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ReportAlarmRsp>
        PARSER = new com.google.protobuf.AbstractParser<ReportAlarmRsp>() {
      public ReportAlarmRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ReportAlarmRsp(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ReportAlarmRsp> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<ReportAlarmRsp> getParserForType() {
      return PARSER;
    }

    public ReportAlarmRsp getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SensorDeviceInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SensorDeviceInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 一次设备、区域或设备编码
     * </pre>
     *
     * <code>string deviceCode = 1;</code>
     */
    String getDeviceCode();
    /**
     * <pre>
     * 一次设备、区域或设备编码
     * </pre>
     *
     * <code>string deviceCode = 1;</code>
     */
    com.google.protobuf.ByteString
        getDeviceCodeBytes();

    /**
     * <pre>
     * 名称
     * </pre>
     *
     * <code>string deviceName = 2;</code>
     */
    String getDeviceName();
    /**
     * <pre>
     * 名称
     * </pre>
     *
     * <code>string deviceName = 2;</code>
     */
    com.google.protobuf.ByteString
        getDeviceNameBytes();

    /**
     * <pre>
     * 上级编码
     * </pre>
     *
     * <code>string parentCode = 3;</code>
     */
    String getParentCode();
    /**
     * <pre>
     * 上级编码
     * </pre>
     *
     * <code>string parentCode = 3;</code>
     */
    com.google.protobuf.ByteString
        getParentCodeBytes();
  }
  /**
   * <pre>
   * 设备信息
   * </pre>
   *
   * Protobuf type {@code SensorDeviceInfo}
   */
  public  static final class SensorDeviceInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SensorDeviceInfo)
      SensorDeviceInfoOrBuilder {
    // Use SensorDeviceInfo.newBuilder() to construct.
    private SensorDeviceInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SensorDeviceInfo() {
      deviceCode_ = "";
      deviceName_ = "";
      parentCode_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private SensorDeviceInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              deviceCode_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              deviceName_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              parentCode_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MessageProtobuf.internal_static_SensorDeviceInfo_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MessageProtobuf.internal_static_SensorDeviceInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SensorDeviceInfo.class, Builder.class);
    }

    public static final int DEVICECODE_FIELD_NUMBER = 1;
    private volatile Object deviceCode_;
    /**
     * <pre>
     * 一次设备、区域或设备编码
     * </pre>
     *
     * <code>string deviceCode = 1;</code>
     */
    public String getDeviceCode() {
      Object ref = deviceCode_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        deviceCode_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 一次设备、区域或设备编码
     * </pre>
     *
     * <code>string deviceCode = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceCodeBytes() {
      Object ref = deviceCode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        deviceCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEVICENAME_FIELD_NUMBER = 2;
    private volatile Object deviceName_;
    /**
     * <pre>
     * 名称
     * </pre>
     *
     * <code>string deviceName = 2;</code>
     */
    public String getDeviceName() {
      Object ref = deviceName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        deviceName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 名称
     * </pre>
     *
     * <code>string deviceName = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceNameBytes() {
      Object ref = deviceName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        deviceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARENTCODE_FIELD_NUMBER = 3;
    private volatile Object parentCode_;
    /**
     * <pre>
     * 上级编码
     * </pre>
     *
     * <code>string parentCode = 3;</code>
     */
    public String getParentCode() {
      Object ref = parentCode_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        parentCode_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 上级编码
     * </pre>
     *
     * <code>string parentCode = 3;</code>
     */
    public com.google.protobuf.ByteString
        getParentCodeBytes() {
      Object ref = parentCode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        parentCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getDeviceCodeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, deviceCode_);
      }
      if (!getDeviceNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, deviceName_);
      }
      if (!getParentCodeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, parentCode_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getDeviceCodeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, deviceCode_);
      }
      if (!getDeviceNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, deviceName_);
      }
      if (!getParentCodeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, parentCode_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SensorDeviceInfo)) {
        return super.equals(obj);
      }
      SensorDeviceInfo other = (SensorDeviceInfo) obj;

      boolean result = true;
      result = result && getDeviceCode()
          .equals(other.getDeviceCode());
      result = result && getDeviceName()
          .equals(other.getDeviceName());
      result = result && getParentCode()
          .equals(other.getParentCode());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DEVICECODE_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceCode().hashCode();
      hash = (37 * hash) + DEVICENAME_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceName().hashCode();
      hash = (37 * hash) + PARENTCODE_FIELD_NUMBER;
      hash = (53 * hash) + getParentCode().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SensorDeviceInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SensorDeviceInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SensorDeviceInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SensorDeviceInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SensorDeviceInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SensorDeviceInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SensorDeviceInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SensorDeviceInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SensorDeviceInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SensorDeviceInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SensorDeviceInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 设备信息
     * </pre>
     *
     * Protobuf type {@code SensorDeviceInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SensorDeviceInfo)
        SensorDeviceInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MessageProtobuf.internal_static_SensorDeviceInfo_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MessageProtobuf.internal_static_SensorDeviceInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SensorDeviceInfo.class, Builder.class);
      }

      // Construct using shenzhen.teamway.pdg.protobuf.MessageProtobuf.SensorDeviceInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        deviceCode_ = "";

        deviceName_ = "";

        parentCode_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MessageProtobuf.internal_static_SensorDeviceInfo_descriptor;
      }

      public SensorDeviceInfo getDefaultInstanceForType() {
        return SensorDeviceInfo.getDefaultInstance();
      }

      public SensorDeviceInfo build() {
        SensorDeviceInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SensorDeviceInfo buildPartial() {
        SensorDeviceInfo result = new SensorDeviceInfo(this);
        result.deviceCode_ = deviceCode_;
        result.deviceName_ = deviceName_;
        result.parentCode_ = parentCode_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SensorDeviceInfo) {
          return mergeFrom((SensorDeviceInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SensorDeviceInfo other) {
        if (other == SensorDeviceInfo.getDefaultInstance()) return this;
        if (!other.getDeviceCode().isEmpty()) {
          deviceCode_ = other.deviceCode_;
          onChanged();
        }
        if (!other.getDeviceName().isEmpty()) {
          deviceName_ = other.deviceName_;
          onChanged();
        }
        if (!other.getParentCode().isEmpty()) {
          parentCode_ = other.parentCode_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SensorDeviceInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SensorDeviceInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object deviceCode_ = "";
      /**
       * <pre>
       * 一次设备、区域或设备编码
       * </pre>
       *
       * <code>string deviceCode = 1;</code>
       */
      public String getDeviceCode() {
        Object ref = deviceCode_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          deviceCode_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 一次设备、区域或设备编码
       * </pre>
       *
       * <code>string deviceCode = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceCodeBytes() {
        Object ref = deviceCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          deviceCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 一次设备、区域或设备编码
       * </pre>
       *
       * <code>string deviceCode = 1;</code>
       */
      public Builder setDeviceCode(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        deviceCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 一次设备、区域或设备编码
       * </pre>
       *
       * <code>string deviceCode = 1;</code>
       */
      public Builder clearDeviceCode() {
        
        deviceCode_ = getDefaultInstance().getDeviceCode();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 一次设备、区域或设备编码
       * </pre>
       *
       * <code>string deviceCode = 1;</code>
       */
      public Builder setDeviceCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        deviceCode_ = value;
        onChanged();
        return this;
      }

      private Object deviceName_ = "";
      /**
       * <pre>
       * 名称
       * </pre>
       *
       * <code>string deviceName = 2;</code>
       */
      public String getDeviceName() {
        Object ref = deviceName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          deviceName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 名称
       * </pre>
       *
       * <code>string deviceName = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceNameBytes() {
        Object ref = deviceName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          deviceName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 名称
       * </pre>
       *
       * <code>string deviceName = 2;</code>
       */
      public Builder setDeviceName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        deviceName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 名称
       * </pre>
       *
       * <code>string deviceName = 2;</code>
       */
      public Builder clearDeviceName() {
        
        deviceName_ = getDefaultInstance().getDeviceName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 名称
       * </pre>
       *
       * <code>string deviceName = 2;</code>
       */
      public Builder setDeviceNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        deviceName_ = value;
        onChanged();
        return this;
      }

      private Object parentCode_ = "";
      /**
       * <pre>
       * 上级编码
       * </pre>
       *
       * <code>string parentCode = 3;</code>
       */
      public String getParentCode() {
        Object ref = parentCode_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          parentCode_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 上级编码
       * </pre>
       *
       * <code>string parentCode = 3;</code>
       */
      public com.google.protobuf.ByteString
          getParentCodeBytes() {
        Object ref = parentCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          parentCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 上级编码
       * </pre>
       *
       * <code>string parentCode = 3;</code>
       */
      public Builder setParentCode(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        parentCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 上级编码
       * </pre>
       *
       * <code>string parentCode = 3;</code>
       */
      public Builder clearParentCode() {
        
        parentCode_ = getDefaultInstance().getParentCode();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 上级编码
       * </pre>
       *
       * <code>string parentCode = 3;</code>
       */
      public Builder setParentCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        parentCode_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:SensorDeviceInfo)
    }

    // @@protoc_insertion_point(class_scope:SensorDeviceInfo)
    private static final SensorDeviceInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SensorDeviceInfo();
    }

    public static SensorDeviceInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SensorDeviceInfo>
        PARSER = new com.google.protobuf.AbstractParser<SensorDeviceInfo>() {
      public SensorDeviceInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SensorDeviceInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SensorDeviceInfo> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<SensorDeviceInfo> getParserForType() {
      return PARSER;
    }

    public SensorDeviceInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CatalogOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Catalog)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 站点编号
     * </pre>
     *
     * <code>string stationCode = 1;</code>
     */
    String getStationCode();
    /**
     * <pre>
     * 站点编号
     * </pre>
     *
     * <code>string stationCode = 1;</code>
     */
    com.google.protobuf.ByteString
        getStationCodeBytes();

    /**
     * <pre>
     * 站点名
     * </pre>
     *
     * <code>string stationName = 2;</code>
     */
    String getStationName();
    /**
     * <pre>
     * 站点名
     * </pre>
     *
     * <code>string stationName = 2;</code>
     */
    com.google.protobuf.ByteString
        getStationNameBytes();

    /**
     * <pre>
     * 经度
     * </pre>
     *
     * <code>float longitude = 3;</code>
     */
    float getLongitude();

    /**
     * <pre>
     * 纬度
     * </pre>
     *
     * <code>float latitude = 4;</code>
     */
    float getLatitude();

    /**
     * <pre>
     * 站点传感器、开关、视频等子设备数
     * </pre>
     *
     * <code>int32 SensorSubNum = 5;</code>
     */
    int getSensorSubNum();

    /**
     * <pre>
     * 子设备信息数组。
     * </pre>
     *
     * <code>repeated .SensorDeviceInfo deviceInfo = 6;</code>
     */
    java.util.List<SensorDeviceInfo>
        getDeviceInfoList();
    /**
     * <pre>
     * 子设备信息数组。
     * </pre>
     *
     * <code>repeated .SensorDeviceInfo deviceInfo = 6;</code>
     */
    SensorDeviceInfo getDeviceInfo(int index);
    /**
     * <pre>
     * 子设备信息数组。
     * </pre>
     *
     * <code>repeated .SensorDeviceInfo deviceInfo = 6;</code>
     */
    int getDeviceInfoCount();
    /**
     * <pre>
     * 子设备信息数组。
     * </pre>
     *
     * <code>repeated .SensorDeviceInfo deviceInfo = 6;</code>
     */
    java.util.List<? extends SensorDeviceInfoOrBuilder>
        getDeviceInfoOrBuilderList();
    /**
     * <pre>
     * 子设备信息数组。
     * </pre>
     *
     * <code>repeated .SensorDeviceInfo deviceInfo = 6;</code>
     */
    SensorDeviceInfoOrBuilder getDeviceInfoOrBuilder(
            int index);
  }
  /**
   * <pre>
   * 上报设备列表  站端 -&gt; 主站
   * </pre>
   *
   * Protobuf type {@code Catalog}
   */
  public  static final class Catalog extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Catalog)
      CatalogOrBuilder {
    // Use Catalog.newBuilder() to construct.
    private Catalog(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Catalog() {
      stationCode_ = "";
      stationName_ = "";
      longitude_ = 0F;
      latitude_ = 0F;
      sensorSubNum_ = 0;
      deviceInfo_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Catalog(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              stationCode_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              stationName_ = s;
              break;
            }
            case 29: {

              longitude_ = input.readFloat();
              break;
            }
            case 37: {

              latitude_ = input.readFloat();
              break;
            }
            case 40: {

              sensorSubNum_ = input.readInt32();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                deviceInfo_ = new java.util.ArrayList<SensorDeviceInfo>();
                mutable_bitField0_ |= 0x00000020;
              }
              deviceInfo_.add(
                  input.readMessage(SensorDeviceInfo.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          deviceInfo_ = java.util.Collections.unmodifiableList(deviceInfo_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MessageProtobuf.internal_static_Catalog_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MessageProtobuf.internal_static_Catalog_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Catalog.class, Builder.class);
    }

    private int bitField0_;
    public static final int STATIONCODE_FIELD_NUMBER = 1;
    private volatile Object stationCode_;
    /**
     * <pre>
     * 站点编号
     * </pre>
     *
     * <code>string stationCode = 1;</code>
     */
    public String getStationCode() {
      Object ref = stationCode_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        stationCode_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 站点编号
     * </pre>
     *
     * <code>string stationCode = 1;</code>
     */
    public com.google.protobuf.ByteString
        getStationCodeBytes() {
      Object ref = stationCode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        stationCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STATIONNAME_FIELD_NUMBER = 2;
    private volatile Object stationName_;
    /**
     * <pre>
     * 站点名
     * </pre>
     *
     * <code>string stationName = 2;</code>
     */
    public String getStationName() {
      Object ref = stationName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        stationName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 站点名
     * </pre>
     *
     * <code>string stationName = 2;</code>
     */
    public com.google.protobuf.ByteString
        getStationNameBytes() {
      Object ref = stationName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        stationName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LONGITUDE_FIELD_NUMBER = 3;
    private float longitude_;
    /**
     * <pre>
     * 经度
     * </pre>
     *
     * <code>float longitude = 3;</code>
     */
    public float getLongitude() {
      return longitude_;
    }

    public static final int LATITUDE_FIELD_NUMBER = 4;
    private float latitude_;
    /**
     * <pre>
     * 纬度
     * </pre>
     *
     * <code>float latitude = 4;</code>
     */
    public float getLatitude() {
      return latitude_;
    }

    public static final int SENSORSUBNUM_FIELD_NUMBER = 5;
    private int sensorSubNum_;
    /**
     * <pre>
     * 站点传感器、开关、视频等子设备数
     * </pre>
     *
     * <code>int32 SensorSubNum = 5;</code>
     */
    public int getSensorSubNum() {
      return sensorSubNum_;
    }

    public static final int DEVICEINFO_FIELD_NUMBER = 6;
    private java.util.List<SensorDeviceInfo> deviceInfo_;
    /**
     * <pre>
     * 子设备信息数组。
     * </pre>
     *
     * <code>repeated .SensorDeviceInfo deviceInfo = 6;</code>
     */
    public java.util.List<SensorDeviceInfo> getDeviceInfoList() {
      return deviceInfo_;
    }
    /**
     * <pre>
     * 子设备信息数组。
     * </pre>
     *
     * <code>repeated .SensorDeviceInfo deviceInfo = 6;</code>
     */
    public java.util.List<? extends SensorDeviceInfoOrBuilder>
        getDeviceInfoOrBuilderList() {
      return deviceInfo_;
    }
    /**
     * <pre>
     * 子设备信息数组。
     * </pre>
     *
     * <code>repeated .SensorDeviceInfo deviceInfo = 6;</code>
     */
    public int getDeviceInfoCount() {
      return deviceInfo_.size();
    }
    /**
     * <pre>
     * 子设备信息数组。
     * </pre>
     *
     * <code>repeated .SensorDeviceInfo deviceInfo = 6;</code>
     */
    public SensorDeviceInfo getDeviceInfo(int index) {
      return deviceInfo_.get(index);
    }
    /**
     * <pre>
     * 子设备信息数组。
     * </pre>
     *
     * <code>repeated .SensorDeviceInfo deviceInfo = 6;</code>
     */
    public SensorDeviceInfoOrBuilder getDeviceInfoOrBuilder(
        int index) {
      return deviceInfo_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getStationCodeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, stationCode_);
      }
      if (!getStationNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, stationName_);
      }
      if (longitude_ != 0F) {
        output.writeFloat(3, longitude_);
      }
      if (latitude_ != 0F) {
        output.writeFloat(4, latitude_);
      }
      if (sensorSubNum_ != 0) {
        output.writeInt32(5, sensorSubNum_);
      }
      for (int i = 0; i < deviceInfo_.size(); i++) {
        output.writeMessage(6, deviceInfo_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getStationCodeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, stationCode_);
      }
      if (!getStationNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, stationName_);
      }
      if (longitude_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, longitude_);
      }
      if (latitude_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, latitude_);
      }
      if (sensorSubNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, sensorSubNum_);
      }
      for (int i = 0; i < deviceInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, deviceInfo_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Catalog)) {
        return super.equals(obj);
      }
      Catalog other = (Catalog) obj;

      boolean result = true;
      result = result && getStationCode()
          .equals(other.getStationCode());
      result = result && getStationName()
          .equals(other.getStationName());
      result = result && (
          Float.floatToIntBits(getLongitude())
          == Float.floatToIntBits(
              other.getLongitude()));
      result = result && (
          Float.floatToIntBits(getLatitude())
          == Float.floatToIntBits(
              other.getLatitude()));
      result = result && (getSensorSubNum()
          == other.getSensorSubNum());
      result = result && getDeviceInfoList()
          .equals(other.getDeviceInfoList());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + STATIONCODE_FIELD_NUMBER;
      hash = (53 * hash) + getStationCode().hashCode();
      hash = (37 * hash) + STATIONNAME_FIELD_NUMBER;
      hash = (53 * hash) + getStationName().hashCode();
      hash = (37 * hash) + LONGITUDE_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getLongitude());
      hash = (37 * hash) + LATITUDE_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getLatitude());
      hash = (37 * hash) + SENSORSUBNUM_FIELD_NUMBER;
      hash = (53 * hash) + getSensorSubNum();
      if (getDeviceInfoCount() > 0) {
        hash = (37 * hash) + DEVICEINFO_FIELD_NUMBER;
        hash = (53 * hash) + getDeviceInfoList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Catalog parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Catalog parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Catalog parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Catalog parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Catalog parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Catalog parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Catalog parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Catalog parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Catalog parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Catalog parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Catalog prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 上报设备列表  站端 -&gt; 主站
     * </pre>
     *
     * Protobuf type {@code Catalog}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Catalog)
        CatalogOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MessageProtobuf.internal_static_Catalog_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MessageProtobuf.internal_static_Catalog_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Catalog.class, Builder.class);
      }

      // Construct using shenzhen.teamway.pdg.protobuf.MessageProtobuf.Catalog.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDeviceInfoFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        stationCode_ = "";

        stationName_ = "";

        longitude_ = 0F;

        latitude_ = 0F;

        sensorSubNum_ = 0;

        if (deviceInfoBuilder_ == null) {
          deviceInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          deviceInfoBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MessageProtobuf.internal_static_Catalog_descriptor;
      }

      public Catalog getDefaultInstanceForType() {
        return Catalog.getDefaultInstance();
      }

      public Catalog build() {
        Catalog result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Catalog buildPartial() {
        Catalog result = new Catalog(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.stationCode_ = stationCode_;
        result.stationName_ = stationName_;
        result.longitude_ = longitude_;
        result.latitude_ = latitude_;
        result.sensorSubNum_ = sensorSubNum_;
        if (deviceInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            deviceInfo_ = java.util.Collections.unmodifiableList(deviceInfo_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.deviceInfo_ = deviceInfo_;
        } else {
          result.deviceInfo_ = deviceInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Catalog) {
          return mergeFrom((Catalog)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Catalog other) {
        if (other == Catalog.getDefaultInstance()) return this;
        if (!other.getStationCode().isEmpty()) {
          stationCode_ = other.stationCode_;
          onChanged();
        }
        if (!other.getStationName().isEmpty()) {
          stationName_ = other.stationName_;
          onChanged();
        }
        if (other.getLongitude() != 0F) {
          setLongitude(other.getLongitude());
        }
        if (other.getLatitude() != 0F) {
          setLatitude(other.getLatitude());
        }
        if (other.getSensorSubNum() != 0) {
          setSensorSubNum(other.getSensorSubNum());
        }
        if (deviceInfoBuilder_ == null) {
          if (!other.deviceInfo_.isEmpty()) {
            if (deviceInfo_.isEmpty()) {
              deviceInfo_ = other.deviceInfo_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureDeviceInfoIsMutable();
              deviceInfo_.addAll(other.deviceInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.deviceInfo_.isEmpty()) {
            if (deviceInfoBuilder_.isEmpty()) {
              deviceInfoBuilder_.dispose();
              deviceInfoBuilder_ = null;
              deviceInfo_ = other.deviceInfo_;
              bitField0_ = (bitField0_ & ~0x00000020);
              deviceInfoBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDeviceInfoFieldBuilder() : null;
            } else {
              deviceInfoBuilder_.addAllMessages(other.deviceInfo_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Catalog parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Catalog) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object stationCode_ = "";
      /**
       * <pre>
       * 站点编号
       * </pre>
       *
       * <code>string stationCode = 1;</code>
       */
      public String getStationCode() {
        Object ref = stationCode_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          stationCode_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 站点编号
       * </pre>
       *
       * <code>string stationCode = 1;</code>
       */
      public com.google.protobuf.ByteString
          getStationCodeBytes() {
        Object ref = stationCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          stationCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 站点编号
       * </pre>
       *
       * <code>string stationCode = 1;</code>
       */
      public Builder setStationCode(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        stationCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 站点编号
       * </pre>
       *
       * <code>string stationCode = 1;</code>
       */
      public Builder clearStationCode() {
        
        stationCode_ = getDefaultInstance().getStationCode();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 站点编号
       * </pre>
       *
       * <code>string stationCode = 1;</code>
       */
      public Builder setStationCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        stationCode_ = value;
        onChanged();
        return this;
      }

      private Object stationName_ = "";
      /**
       * <pre>
       * 站点名
       * </pre>
       *
       * <code>string stationName = 2;</code>
       */
      public String getStationName() {
        Object ref = stationName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          stationName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 站点名
       * </pre>
       *
       * <code>string stationName = 2;</code>
       */
      public com.google.protobuf.ByteString
          getStationNameBytes() {
        Object ref = stationName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          stationName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 站点名
       * </pre>
       *
       * <code>string stationName = 2;</code>
       */
      public Builder setStationName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        stationName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 站点名
       * </pre>
       *
       * <code>string stationName = 2;</code>
       */
      public Builder clearStationName() {
        
        stationName_ = getDefaultInstance().getStationName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 站点名
       * </pre>
       *
       * <code>string stationName = 2;</code>
       */
      public Builder setStationNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        stationName_ = value;
        onChanged();
        return this;
      }

      private float longitude_ ;
      /**
       * <pre>
       * 经度
       * </pre>
       *
       * <code>float longitude = 3;</code>
       */
      public float getLongitude() {
        return longitude_;
      }
      /**
       * <pre>
       * 经度
       * </pre>
       *
       * <code>float longitude = 3;</code>
       */
      public Builder setLongitude(float value) {
        
        longitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 经度
       * </pre>
       *
       * <code>float longitude = 3;</code>
       */
      public Builder clearLongitude() {
        
        longitude_ = 0F;
        onChanged();
        return this;
      }

      private float latitude_ ;
      /**
       * <pre>
       * 纬度
       * </pre>
       *
       * <code>float latitude = 4;</code>
       */
      public float getLatitude() {
        return latitude_;
      }
      /**
       * <pre>
       * 纬度
       * </pre>
       *
       * <code>float latitude = 4;</code>
       */
      public Builder setLatitude(float value) {
        
        latitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 纬度
       * </pre>
       *
       * <code>float latitude = 4;</code>
       */
      public Builder clearLatitude() {
        
        latitude_ = 0F;
        onChanged();
        return this;
      }

      private int sensorSubNum_ ;
      /**
       * <pre>
       * 站点传感器、开关、视频等子设备数
       * </pre>
       *
       * <code>int32 SensorSubNum = 5;</code>
       */
      public int getSensorSubNum() {
        return sensorSubNum_;
      }
      /**
       * <pre>
       * 站点传感器、开关、视频等子设备数
       * </pre>
       *
       * <code>int32 SensorSubNum = 5;</code>
       */
      public Builder setSensorSubNum(int value) {
        
        sensorSubNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 站点传感器、开关、视频等子设备数
       * </pre>
       *
       * <code>int32 SensorSubNum = 5;</code>
       */
      public Builder clearSensorSubNum() {
        
        sensorSubNum_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<SensorDeviceInfo> deviceInfo_ =
        java.util.Collections.emptyList();
      private void ensureDeviceInfoIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          deviceInfo_ = new java.util.ArrayList<SensorDeviceInfo>(deviceInfo_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          SensorDeviceInfo, SensorDeviceInfo.Builder, SensorDeviceInfoOrBuilder> deviceInfoBuilder_;

      /**
       * <pre>
       * 子设备信息数组。
       * </pre>
       *
       * <code>repeated .SensorDeviceInfo deviceInfo = 6;</code>
       */
      public java.util.List<SensorDeviceInfo> getDeviceInfoList() {
        if (deviceInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(deviceInfo_);
        } else {
          return deviceInfoBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 子设备信息数组。
       * </pre>
       *
       * <code>repeated .SensorDeviceInfo deviceInfo = 6;</code>
       */
      public int getDeviceInfoCount() {
        if (deviceInfoBuilder_ == null) {
          return deviceInfo_.size();
        } else {
          return deviceInfoBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 子设备信息数组。
       * </pre>
       *
       * <code>repeated .SensorDeviceInfo deviceInfo = 6;</code>
       */
      public SensorDeviceInfo getDeviceInfo(int index) {
        if (deviceInfoBuilder_ == null) {
          return deviceInfo_.get(index);
        } else {
          return deviceInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 子设备信息数组。
       * </pre>
       *
       * <code>repeated .SensorDeviceInfo deviceInfo = 6;</code>
       */
      public Builder setDeviceInfo(
          int index, SensorDeviceInfo value) {
        if (deviceInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDeviceInfoIsMutable();
          deviceInfo_.set(index, value);
          onChanged();
        } else {
          deviceInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 子设备信息数组。
       * </pre>
       *
       * <code>repeated .SensorDeviceInfo deviceInfo = 6;</code>
       */
      public Builder setDeviceInfo(
          int index, SensorDeviceInfo.Builder builderForValue) {
        if (deviceInfoBuilder_ == null) {
          ensureDeviceInfoIsMutable();
          deviceInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          deviceInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 子设备信息数组。
       * </pre>
       *
       * <code>repeated .SensorDeviceInfo deviceInfo = 6;</code>
       */
      public Builder addDeviceInfo(SensorDeviceInfo value) {
        if (deviceInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDeviceInfoIsMutable();
          deviceInfo_.add(value);
          onChanged();
        } else {
          deviceInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 子设备信息数组。
       * </pre>
       *
       * <code>repeated .SensorDeviceInfo deviceInfo = 6;</code>
       */
      public Builder addDeviceInfo(
          int index, SensorDeviceInfo value) {
        if (deviceInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDeviceInfoIsMutable();
          deviceInfo_.add(index, value);
          onChanged();
        } else {
          deviceInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 子设备信息数组。
       * </pre>
       *
       * <code>repeated .SensorDeviceInfo deviceInfo = 6;</code>
       */
      public Builder addDeviceInfo(
          SensorDeviceInfo.Builder builderForValue) {
        if (deviceInfoBuilder_ == null) {
          ensureDeviceInfoIsMutable();
          deviceInfo_.add(builderForValue.build());
          onChanged();
        } else {
          deviceInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 子设备信息数组。
       * </pre>
       *
       * <code>repeated .SensorDeviceInfo deviceInfo = 6;</code>
       */
      public Builder addDeviceInfo(
          int index, SensorDeviceInfo.Builder builderForValue) {
        if (deviceInfoBuilder_ == null) {
          ensureDeviceInfoIsMutable();
          deviceInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          deviceInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 子设备信息数组。
       * </pre>
       *
       * <code>repeated .SensorDeviceInfo deviceInfo = 6;</code>
       */
      public Builder addAllDeviceInfo(
          Iterable<? extends SensorDeviceInfo> values) {
        if (deviceInfoBuilder_ == null) {
          ensureDeviceInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, deviceInfo_);
          onChanged();
        } else {
          deviceInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 子设备信息数组。
       * </pre>
       *
       * <code>repeated .SensorDeviceInfo deviceInfo = 6;</code>
       */
      public Builder clearDeviceInfo() {
        if (deviceInfoBuilder_ == null) {
          deviceInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          deviceInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 子设备信息数组。
       * </pre>
       *
       * <code>repeated .SensorDeviceInfo deviceInfo = 6;</code>
       */
      public Builder removeDeviceInfo(int index) {
        if (deviceInfoBuilder_ == null) {
          ensureDeviceInfoIsMutable();
          deviceInfo_.remove(index);
          onChanged();
        } else {
          deviceInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 子设备信息数组。
       * </pre>
       *
       * <code>repeated .SensorDeviceInfo deviceInfo = 6;</code>
       */
      public SensorDeviceInfo.Builder getDeviceInfoBuilder(
          int index) {
        return getDeviceInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 子设备信息数组。
       * </pre>
       *
       * <code>repeated .SensorDeviceInfo deviceInfo = 6;</code>
       */
      public SensorDeviceInfoOrBuilder getDeviceInfoOrBuilder(
          int index) {
        if (deviceInfoBuilder_ == null) {
          return deviceInfo_.get(index);  } else {
          return deviceInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 子设备信息数组。
       * </pre>
       *
       * <code>repeated .SensorDeviceInfo deviceInfo = 6;</code>
       */
      public java.util.List<? extends SensorDeviceInfoOrBuilder>
           getDeviceInfoOrBuilderList() {
        if (deviceInfoBuilder_ != null) {
          return deviceInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(deviceInfo_);
        }
      }
      /**
       * <pre>
       * 子设备信息数组。
       * </pre>
       *
       * <code>repeated .SensorDeviceInfo deviceInfo = 6;</code>
       */
      public SensorDeviceInfo.Builder addDeviceInfoBuilder() {
        return getDeviceInfoFieldBuilder().addBuilder(
            SensorDeviceInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * 子设备信息数组。
       * </pre>
       *
       * <code>repeated .SensorDeviceInfo deviceInfo = 6;</code>
       */
      public SensorDeviceInfo.Builder addDeviceInfoBuilder(
          int index) {
        return getDeviceInfoFieldBuilder().addBuilder(
            index, SensorDeviceInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * 子设备信息数组。
       * </pre>
       *
       * <code>repeated .SensorDeviceInfo deviceInfo = 6;</code>
       */
      public java.util.List<SensorDeviceInfo.Builder>
           getDeviceInfoBuilderList() {
        return getDeviceInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          SensorDeviceInfo, SensorDeviceInfo.Builder, SensorDeviceInfoOrBuilder>
          getDeviceInfoFieldBuilder() {
        if (deviceInfoBuilder_ == null) {
          deviceInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              SensorDeviceInfo, SensorDeviceInfo.Builder, SensorDeviceInfoOrBuilder>(
                  deviceInfo_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          deviceInfo_ = null;
        }
        return deviceInfoBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Catalog)
    }

    // @@protoc_insertion_point(class_scope:Catalog)
    private static final Catalog DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Catalog();
    }

    public static Catalog getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Catalog>
        PARSER = new com.google.protobuf.AbstractParser<Catalog>() {
      public Catalog parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Catalog(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Catalog> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Catalog> getParserForType() {
      return PARSER;
    }

    public Catalog getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CatalogRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CatalogRsp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    boolean hasResponse();
    /**
     * <pre>
     * 结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    ResponseMessage getResponse();
    /**
     * <pre>
     * 结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    ResponseMessageOrBuilder getResponseOrBuilder();
  }
  /**
   * <pre>
   * 设备列表响应  主站 -&gt; 站端
   * </pre>
   *
   * Protobuf type {@code CatalogRsp}
   */
  public  static final class CatalogRsp extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CatalogRsp)
      CatalogRspOrBuilder {
    // Use CatalogRsp.newBuilder() to construct.
    private CatalogRsp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CatalogRsp() {
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private CatalogRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              ResponseMessage.Builder subBuilder = null;
              if (response_ != null) {
                subBuilder = response_.toBuilder();
              }
              response_ = input.readMessage(ResponseMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(response_);
                response_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MessageProtobuf.internal_static_CatalogRsp_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MessageProtobuf.internal_static_CatalogRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CatalogRsp.class, Builder.class);
    }

    public static final int RESPONSE_FIELD_NUMBER = 1;
    private ResponseMessage response_;
    /**
     * <pre>
     * 结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    public boolean hasResponse() {
      return response_ != null;
    }
    /**
     * <pre>
     * 结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    public ResponseMessage getResponse() {
      return response_ == null ? ResponseMessage.getDefaultInstance() : response_;
    }
    /**
     * <pre>
     * 结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    public ResponseMessageOrBuilder getResponseOrBuilder() {
      return getResponse();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (response_ != null) {
        output.writeMessage(1, getResponse());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (response_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResponse());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof CatalogRsp)) {
        return super.equals(obj);
      }
      CatalogRsp other = (CatalogRsp) obj;

      boolean result = true;
      result = result && (hasResponse() == other.hasResponse());
      if (hasResponse()) {
        result = result && getResponse()
            .equals(other.getResponse());
      }
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResponse()) {
        hash = (37 * hash) + RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + getResponse().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static CatalogRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CatalogRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CatalogRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CatalogRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CatalogRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CatalogRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static CatalogRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static CatalogRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static CatalogRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CatalogRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(CatalogRsp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 设备列表响应  主站 -&gt; 站端
     * </pre>
     *
     * Protobuf type {@code CatalogRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CatalogRsp)
        CatalogRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MessageProtobuf.internal_static_CatalogRsp_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MessageProtobuf.internal_static_CatalogRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                CatalogRsp.class, Builder.class);
      }

      // Construct using shenzhen.teamway.pdg.protobuf.MessageProtobuf.CatalogRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (responseBuilder_ == null) {
          response_ = null;
        } else {
          response_ = null;
          responseBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MessageProtobuf.internal_static_CatalogRsp_descriptor;
      }

      public CatalogRsp getDefaultInstanceForType() {
        return CatalogRsp.getDefaultInstance();
      }

      public CatalogRsp build() {
        CatalogRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public CatalogRsp buildPartial() {
        CatalogRsp result = new CatalogRsp(this);
        if (responseBuilder_ == null) {
          result.response_ = response_;
        } else {
          result.response_ = responseBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CatalogRsp) {
          return mergeFrom((CatalogRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(CatalogRsp other) {
        if (other == CatalogRsp.getDefaultInstance()) return this;
        if (other.hasResponse()) {
          mergeResponse(other.getResponse());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        CatalogRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (CatalogRsp) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private ResponseMessage response_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          ResponseMessage, ResponseMessage.Builder, ResponseMessageOrBuilder> responseBuilder_;
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public boolean hasResponse() {
        return responseBuilder_ != null || response_ != null;
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public ResponseMessage getResponse() {
        if (responseBuilder_ == null) {
          return response_ == null ? ResponseMessage.getDefaultInstance() : response_;
        } else {
          return responseBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public Builder setResponse(ResponseMessage value) {
        if (responseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          response_ = value;
          onChanged();
        } else {
          responseBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public Builder setResponse(
          ResponseMessage.Builder builderForValue) {
        if (responseBuilder_ == null) {
          response_ = builderForValue.build();
          onChanged();
        } else {
          responseBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public Builder mergeResponse(ResponseMessage value) {
        if (responseBuilder_ == null) {
          if (response_ != null) {
            response_ =
              ResponseMessage.newBuilder(response_).mergeFrom(value).buildPartial();
          } else {
            response_ = value;
          }
          onChanged();
        } else {
          responseBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public Builder clearResponse() {
        if (responseBuilder_ == null) {
          response_ = null;
          onChanged();
        } else {
          response_ = null;
          responseBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public ResponseMessage.Builder getResponseBuilder() {
        
        onChanged();
        return getResponseFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public ResponseMessageOrBuilder getResponseOrBuilder() {
        if (responseBuilder_ != null) {
          return responseBuilder_.getMessageOrBuilder();
        } else {
          return response_ == null ?
              ResponseMessage.getDefaultInstance() : response_;
        }
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ResponseMessage, ResponseMessage.Builder, ResponseMessageOrBuilder>
          getResponseFieldBuilder() {
        if (responseBuilder_ == null) {
          responseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ResponseMessage, ResponseMessage.Builder, ResponseMessageOrBuilder>(
                  getResponse(),
                  getParentForChildren(),
                  isClean());
          response_ = null;
        }
        return responseBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:CatalogRsp)
    }

    // @@protoc_insertion_point(class_scope:CatalogRsp)
    private static final CatalogRsp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CatalogRsp();
    }

    public static CatalogRsp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CatalogRsp>
        PARSER = new com.google.protobuf.AbstractParser<CatalogRsp>() {
      public CatalogRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CatalogRsp(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CatalogRsp> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<CatalogRsp> getParserForType() {
      return PARSER;
    }

    public CatalogRsp getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UpdateTimeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:UpdateTime)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 站端时间。格式:  2018-08-27 16:42:01
     * </pre>
     *
     * <code>string dateTime = 1;</code>
     */
    String getDateTime();
    /**
     * <pre>
     * 站端时间。格式:  2018-08-27 16:42:01
     * </pre>
     *
     * <code>string dateTime = 1;</code>
     */
    com.google.protobuf.ByteString
        getDateTimeBytes();
  }
  /**
   * <pre>
   * 请求对时  站端 -&gt; 主站
   * 主站检查站端时间与主站时间一致，可以不下发时间。
   * </pre>
   *
   * Protobuf type {@code UpdateTime}
   */
  public  static final class UpdateTime extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:UpdateTime)
      UpdateTimeOrBuilder {
    // Use UpdateTime.newBuilder() to construct.
    private UpdateTime(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UpdateTime() {
      dateTime_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private UpdateTime(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              dateTime_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MessageProtobuf.internal_static_UpdateTime_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MessageProtobuf.internal_static_UpdateTime_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              UpdateTime.class, Builder.class);
    }

    public static final int DATETIME_FIELD_NUMBER = 1;
    private volatile Object dateTime_;
    /**
     * <pre>
     * 站端时间。格式:  2018-08-27 16:42:01
     * </pre>
     *
     * <code>string dateTime = 1;</code>
     */
    public String getDateTime() {
      Object ref = dateTime_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        dateTime_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 站端时间。格式:  2018-08-27 16:42:01
     * </pre>
     *
     * <code>string dateTime = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDateTimeBytes() {
      Object ref = dateTime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        dateTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getDateTimeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, dateTime_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getDateTimeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, dateTime_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof UpdateTime)) {
        return super.equals(obj);
      }
      UpdateTime other = (UpdateTime) obj;

      boolean result = true;
      result = result && getDateTime()
          .equals(other.getDateTime());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DATETIME_FIELD_NUMBER;
      hash = (53 * hash) + getDateTime().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static UpdateTime parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static UpdateTime parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static UpdateTime parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static UpdateTime parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static UpdateTime parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static UpdateTime parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static UpdateTime parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static UpdateTime parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static UpdateTime parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static UpdateTime parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(UpdateTime prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 请求对时  站端 -&gt; 主站
     * 主站检查站端时间与主站时间一致，可以不下发时间。
     * </pre>
     *
     * Protobuf type {@code UpdateTime}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:UpdateTime)
        UpdateTimeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MessageProtobuf.internal_static_UpdateTime_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MessageProtobuf.internal_static_UpdateTime_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                UpdateTime.class, Builder.class);
      }

      // Construct using shenzhen.teamway.pdg.protobuf.MessageProtobuf.UpdateTime.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        dateTime_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MessageProtobuf.internal_static_UpdateTime_descriptor;
      }

      public UpdateTime getDefaultInstanceForType() {
        return UpdateTime.getDefaultInstance();
      }

      public UpdateTime build() {
        UpdateTime result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public UpdateTime buildPartial() {
        UpdateTime result = new UpdateTime(this);
        result.dateTime_ = dateTime_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof UpdateTime) {
          return mergeFrom((UpdateTime)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(UpdateTime other) {
        if (other == UpdateTime.getDefaultInstance()) return this;
        if (!other.getDateTime().isEmpty()) {
          dateTime_ = other.dateTime_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        UpdateTime parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (UpdateTime) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object dateTime_ = "";
      /**
       * <pre>
       * 站端时间。格式:  2018-08-27 16:42:01
       * </pre>
       *
       * <code>string dateTime = 1;</code>
       */
      public String getDateTime() {
        Object ref = dateTime_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          dateTime_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 站端时间。格式:  2018-08-27 16:42:01
       * </pre>
       *
       * <code>string dateTime = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDateTimeBytes() {
        Object ref = dateTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          dateTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 站端时间。格式:  2018-08-27 16:42:01
       * </pre>
       *
       * <code>string dateTime = 1;</code>
       */
      public Builder setDateTime(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dateTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 站端时间。格式:  2018-08-27 16:42:01
       * </pre>
       *
       * <code>string dateTime = 1;</code>
       */
      public Builder clearDateTime() {
        
        dateTime_ = getDefaultInstance().getDateTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 站端时间。格式:  2018-08-27 16:42:01
       * </pre>
       *
       * <code>string dateTime = 1;</code>
       */
      public Builder setDateTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        dateTime_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:UpdateTime)
    }

    // @@protoc_insertion_point(class_scope:UpdateTime)
    private static final UpdateTime DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new UpdateTime();
    }

    public static UpdateTime getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UpdateTime>
        PARSER = new com.google.protobuf.AbstractParser<UpdateTime>() {
      public UpdateTime parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new UpdateTime(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UpdateTime> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<UpdateTime> getParserForType() {
      return PARSER;
    }

    public UpdateTime getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UpdateTimeRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:UpdateTimeRsp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 主站时间。格式:  2018-08-27 16:42:01
     * </pre>
     *
     * <code>string serverTime = 1;</code>
     */
    String getServerTime();
    /**
     * <pre>
     * 主站时间。格式:  2018-08-27 16:42:01
     * </pre>
     *
     * <code>string serverTime = 1;</code>
     */
    com.google.protobuf.ByteString
        getServerTimeBytes();
  }
  /**
   * <pre>
   * 请求对时响应  主站 -&gt; 站端
   * </pre>
   *
   * Protobuf type {@code UpdateTimeRsp}
   */
  public  static final class UpdateTimeRsp extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:UpdateTimeRsp)
      UpdateTimeRspOrBuilder {
    // Use UpdateTimeRsp.newBuilder() to construct.
    private UpdateTimeRsp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UpdateTimeRsp() {
      serverTime_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private UpdateTimeRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              serverTime_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MessageProtobuf.internal_static_UpdateTimeRsp_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MessageProtobuf.internal_static_UpdateTimeRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              UpdateTimeRsp.class, Builder.class);
    }

    public static final int SERVERTIME_FIELD_NUMBER = 1;
    private volatile Object serverTime_;
    /**
     * <pre>
     * 主站时间。格式:  2018-08-27 16:42:01
     * </pre>
     *
     * <code>string serverTime = 1;</code>
     */
    public String getServerTime() {
      Object ref = serverTime_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        serverTime_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 主站时间。格式:  2018-08-27 16:42:01
     * </pre>
     *
     * <code>string serverTime = 1;</code>
     */
    public com.google.protobuf.ByteString
        getServerTimeBytes() {
      Object ref = serverTime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        serverTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getServerTimeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, serverTime_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getServerTimeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, serverTime_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof UpdateTimeRsp)) {
        return super.equals(obj);
      }
      UpdateTimeRsp other = (UpdateTimeRsp) obj;

      boolean result = true;
      result = result && getServerTime()
          .equals(other.getServerTime());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SERVERTIME_FIELD_NUMBER;
      hash = (53 * hash) + getServerTime().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static UpdateTimeRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static UpdateTimeRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static UpdateTimeRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static UpdateTimeRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static UpdateTimeRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static UpdateTimeRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static UpdateTimeRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static UpdateTimeRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static UpdateTimeRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static UpdateTimeRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(UpdateTimeRsp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 请求对时响应  主站 -&gt; 站端
     * </pre>
     *
     * Protobuf type {@code UpdateTimeRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:UpdateTimeRsp)
        UpdateTimeRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MessageProtobuf.internal_static_UpdateTimeRsp_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MessageProtobuf.internal_static_UpdateTimeRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                UpdateTimeRsp.class, Builder.class);
      }

      // Construct using shenzhen.teamway.pdg.protobuf.MessageProtobuf.UpdateTimeRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        serverTime_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MessageProtobuf.internal_static_UpdateTimeRsp_descriptor;
      }

      public UpdateTimeRsp getDefaultInstanceForType() {
        return UpdateTimeRsp.getDefaultInstance();
      }

      public UpdateTimeRsp build() {
        UpdateTimeRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public UpdateTimeRsp buildPartial() {
        UpdateTimeRsp result = new UpdateTimeRsp(this);
        result.serverTime_ = serverTime_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof UpdateTimeRsp) {
          return mergeFrom((UpdateTimeRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(UpdateTimeRsp other) {
        if (other == UpdateTimeRsp.getDefaultInstance()) return this;
        if (!other.getServerTime().isEmpty()) {
          serverTime_ = other.serverTime_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        UpdateTimeRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (UpdateTimeRsp) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object serverTime_ = "";
      /**
       * <pre>
       * 主站时间。格式:  2018-08-27 16:42:01
       * </pre>
       *
       * <code>string serverTime = 1;</code>
       */
      public String getServerTime() {
        Object ref = serverTime_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          serverTime_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 主站时间。格式:  2018-08-27 16:42:01
       * </pre>
       *
       * <code>string serverTime = 1;</code>
       */
      public com.google.protobuf.ByteString
          getServerTimeBytes() {
        Object ref = serverTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          serverTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 主站时间。格式:  2018-08-27 16:42:01
       * </pre>
       *
       * <code>string serverTime = 1;</code>
       */
      public Builder setServerTime(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        serverTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 主站时间。格式:  2018-08-27 16:42:01
       * </pre>
       *
       * <code>string serverTime = 1;</code>
       */
      public Builder clearServerTime() {
        
        serverTime_ = getDefaultInstance().getServerTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 主站时间。格式:  2018-08-27 16:42:01
       * </pre>
       *
       * <code>string serverTime = 1;</code>
       */
      public Builder setServerTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        serverTime_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:UpdateTimeRsp)
    }

    // @@protoc_insertion_point(class_scope:UpdateTimeRsp)
    private static final UpdateTimeRsp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new UpdateTimeRsp();
    }

    public static UpdateTimeRsp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UpdateTimeRsp>
        PARSER = new com.google.protobuf.AbstractParser<UpdateTimeRsp>() {
      public UpdateTimeRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new UpdateTimeRsp(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UpdateTimeRsp> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<UpdateTimeRsp> getParserForType() {
      return PARSER;
    }

    public UpdateTimeRsp getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ControlOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Control)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 设备编码，如果是站点编码，可对站点网关重启，网关不能打开和关闭。
     * </pre>
     *
     * <code>string deviceCode = 1;</code>
     */
    String getDeviceCode();
    /**
     * <pre>
     * 设备编码，如果是站点编码，可对站点网关重启，网关不能打开和关闭。
     * </pre>
     *
     * <code>string deviceCode = 1;</code>
     */
    com.google.protobuf.ByteString
        getDeviceCodeBytes();

    /**
     * <pre>
     * 控制命令。
     * </pre>
     *
     * <code>.ControlCommand command = 2;</code>
     */
    int getCommandValue();
    /**
     * <pre>
     * 控制命令。
     * </pre>
     *
     * <code>.ControlCommand command = 2;</code>
     */
    ControlCommand getCommand();
  }
  /**
   * <pre>
   * 控制站端开关设备
   * </pre>
   *
   * Protobuf type {@code Control}
   */
  public  static final class Control extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Control)
      ControlOrBuilder {
    // Use Control.newBuilder() to construct.
    private Control(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Control() {
      deviceCode_ = "";
      command_ = 0;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Control(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              deviceCode_ = s;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              command_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MessageProtobuf.internal_static_Control_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MessageProtobuf.internal_static_Control_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Control.class, Builder.class);
    }

    public static final int DEVICECODE_FIELD_NUMBER = 1;
    private volatile Object deviceCode_;
    /**
     * <pre>
     * 设备编码，如果是站点编码，可对站点网关重启，网关不能打开和关闭。
     * </pre>
     *
     * <code>string deviceCode = 1;</code>
     */
    public String getDeviceCode() {
      Object ref = deviceCode_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        deviceCode_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 设备编码，如果是站点编码，可对站点网关重启，网关不能打开和关闭。
     * </pre>
     *
     * <code>string deviceCode = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceCodeBytes() {
      Object ref = deviceCode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        deviceCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COMMAND_FIELD_NUMBER = 2;
    private int command_;
    /**
     * <pre>
     * 控制命令。
     * </pre>
     *
     * <code>.ControlCommand command = 2;</code>
     */
    public int getCommandValue() {
      return command_;
    }
    /**
     * <pre>
     * 控制命令。
     * </pre>
     *
     * <code>.ControlCommand command = 2;</code>
     */
    public ControlCommand getCommand() {
      ControlCommand result = ControlCommand.valueOf(command_);
      return result == null ? ControlCommand.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getDeviceCodeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, deviceCode_);
      }
      if (command_ != ControlCommand.COMMAND_NONE.getNumber()) {
        output.writeEnum(2, command_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getDeviceCodeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, deviceCode_);
      }
      if (command_ != ControlCommand.COMMAND_NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, command_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Control)) {
        return super.equals(obj);
      }
      Control other = (Control) obj;

      boolean result = true;
      result = result && getDeviceCode()
          .equals(other.getDeviceCode());
      result = result && command_ == other.command_;
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DEVICECODE_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceCode().hashCode();
      hash = (37 * hash) + COMMAND_FIELD_NUMBER;
      hash = (53 * hash) + command_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Control parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Control parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Control parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Control parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Control parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Control parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Control parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Control parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Control parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Control parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Control prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 控制站端开关设备
     * </pre>
     *
     * Protobuf type {@code Control}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Control)
        ControlOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MessageProtobuf.internal_static_Control_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MessageProtobuf.internal_static_Control_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Control.class, Builder.class);
      }

      // Construct using shenzhen.teamway.pdg.protobuf.MessageProtobuf.Control.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        deviceCode_ = "";

        command_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MessageProtobuf.internal_static_Control_descriptor;
      }

      public Control getDefaultInstanceForType() {
        return Control.getDefaultInstance();
      }

      public Control build() {
        Control result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Control buildPartial() {
        Control result = new Control(this);
        result.deviceCode_ = deviceCode_;
        result.command_ = command_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Control) {
          return mergeFrom((Control)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Control other) {
        if (other == Control.getDefaultInstance()) return this;
        if (!other.getDeviceCode().isEmpty()) {
          deviceCode_ = other.deviceCode_;
          onChanged();
        }
        if (other.command_ != 0) {
          setCommandValue(other.getCommandValue());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Control parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Control) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object deviceCode_ = "";
      /**
       * <pre>
       * 设备编码，如果是站点编码，可对站点网关重启，网关不能打开和关闭。
       * </pre>
       *
       * <code>string deviceCode = 1;</code>
       */
      public String getDeviceCode() {
        Object ref = deviceCode_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          deviceCode_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 设备编码，如果是站点编码，可对站点网关重启，网关不能打开和关闭。
       * </pre>
       *
       * <code>string deviceCode = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceCodeBytes() {
        Object ref = deviceCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          deviceCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 设备编码，如果是站点编码，可对站点网关重启，网关不能打开和关闭。
       * </pre>
       *
       * <code>string deviceCode = 1;</code>
       */
      public Builder setDeviceCode(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        deviceCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 设备编码，如果是站点编码，可对站点网关重启，网关不能打开和关闭。
       * </pre>
       *
       * <code>string deviceCode = 1;</code>
       */
      public Builder clearDeviceCode() {
        
        deviceCode_ = getDefaultInstance().getDeviceCode();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 设备编码，如果是站点编码，可对站点网关重启，网关不能打开和关闭。
       * </pre>
       *
       * <code>string deviceCode = 1;</code>
       */
      public Builder setDeviceCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        deviceCode_ = value;
        onChanged();
        return this;
      }

      private int command_ = 0;
      /**
       * <pre>
       * 控制命令。
       * </pre>
       *
       * <code>.ControlCommand command = 2;</code>
       */
      public int getCommandValue() {
        return command_;
      }
      /**
       * <pre>
       * 控制命令。
       * </pre>
       *
       * <code>.ControlCommand command = 2;</code>
       */
      public Builder setCommandValue(int value) {
        command_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 控制命令。
       * </pre>
       *
       * <code>.ControlCommand command = 2;</code>
       */
      public ControlCommand getCommand() {
        ControlCommand result = ControlCommand.valueOf(command_);
        return result == null ? ControlCommand.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * 控制命令。
       * </pre>
       *
       * <code>.ControlCommand command = 2;</code>
       */
      public Builder setCommand(ControlCommand value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        command_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 控制命令。
       * </pre>
       *
       * <code>.ControlCommand command = 2;</code>
       */
      public Builder clearCommand() {
        
        command_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Control)
    }

    // @@protoc_insertion_point(class_scope:Control)
    private static final Control DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Control();
    }

    public static Control getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Control>
        PARSER = new com.google.protobuf.AbstractParser<Control>() {
      public Control parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Control(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Control> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Control> getParserForType() {
      return PARSER;
    }

    public Control getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ControlRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ControlRsp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    boolean hasResponse();
    /**
     * <pre>
     * 结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    ResponseMessage getResponse();
    /**
     * <pre>
     * 结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    ResponseMessageOrBuilder getResponseOrBuilder();
  }
  /**
   * <pre>
   * 控制设备响应
   * </pre>
   *
   * Protobuf type {@code ControlRsp}
   */
  public  static final class ControlRsp extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ControlRsp)
      ControlRspOrBuilder {
    // Use ControlRsp.newBuilder() to construct.
    private ControlRsp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ControlRsp() {
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ControlRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              ResponseMessage.Builder subBuilder = null;
              if (response_ != null) {
                subBuilder = response_.toBuilder();
              }
              response_ = input.readMessage(ResponseMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(response_);
                response_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MessageProtobuf.internal_static_ControlRsp_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MessageProtobuf.internal_static_ControlRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ControlRsp.class, Builder.class);
    }

    public static final int RESPONSE_FIELD_NUMBER = 1;
    private ResponseMessage response_;
    /**
     * <pre>
     * 结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    public boolean hasResponse() {
      return response_ != null;
    }
    /**
     * <pre>
     * 结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    public ResponseMessage getResponse() {
      return response_ == null ? ResponseMessage.getDefaultInstance() : response_;
    }
    /**
     * <pre>
     * 结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    public ResponseMessageOrBuilder getResponseOrBuilder() {
      return getResponse();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (response_ != null) {
        output.writeMessage(1, getResponse());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (response_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResponse());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ControlRsp)) {
        return super.equals(obj);
      }
      ControlRsp other = (ControlRsp) obj;

      boolean result = true;
      result = result && (hasResponse() == other.hasResponse());
      if (hasResponse()) {
        result = result && getResponse()
            .equals(other.getResponse());
      }
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResponse()) {
        hash = (37 * hash) + RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + getResponse().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ControlRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ControlRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ControlRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ControlRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ControlRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ControlRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ControlRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ControlRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ControlRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ControlRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ControlRsp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 控制设备响应
     * </pre>
     *
     * Protobuf type {@code ControlRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ControlRsp)
        ControlRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MessageProtobuf.internal_static_ControlRsp_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MessageProtobuf.internal_static_ControlRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ControlRsp.class, Builder.class);
      }

      // Construct using shenzhen.teamway.pdg.protobuf.MessageProtobuf.ControlRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (responseBuilder_ == null) {
          response_ = null;
        } else {
          response_ = null;
          responseBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MessageProtobuf.internal_static_ControlRsp_descriptor;
      }

      public ControlRsp getDefaultInstanceForType() {
        return ControlRsp.getDefaultInstance();
      }

      public ControlRsp build() {
        ControlRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ControlRsp buildPartial() {
        ControlRsp result = new ControlRsp(this);
        if (responseBuilder_ == null) {
          result.response_ = response_;
        } else {
          result.response_ = responseBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ControlRsp) {
          return mergeFrom((ControlRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ControlRsp other) {
        if (other == ControlRsp.getDefaultInstance()) return this;
        if (other.hasResponse()) {
          mergeResponse(other.getResponse());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ControlRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ControlRsp) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private ResponseMessage response_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          ResponseMessage, ResponseMessage.Builder, ResponseMessageOrBuilder> responseBuilder_;
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public boolean hasResponse() {
        return responseBuilder_ != null || response_ != null;
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public ResponseMessage getResponse() {
        if (responseBuilder_ == null) {
          return response_ == null ? ResponseMessage.getDefaultInstance() : response_;
        } else {
          return responseBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public Builder setResponse(ResponseMessage value) {
        if (responseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          response_ = value;
          onChanged();
        } else {
          responseBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public Builder setResponse(
          ResponseMessage.Builder builderForValue) {
        if (responseBuilder_ == null) {
          response_ = builderForValue.build();
          onChanged();
        } else {
          responseBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public Builder mergeResponse(ResponseMessage value) {
        if (responseBuilder_ == null) {
          if (response_ != null) {
            response_ =
              ResponseMessage.newBuilder(response_).mergeFrom(value).buildPartial();
          } else {
            response_ = value;
          }
          onChanged();
        } else {
          responseBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public Builder clearResponse() {
        if (responseBuilder_ == null) {
          response_ = null;
          onChanged();
        } else {
          response_ = null;
          responseBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public ResponseMessage.Builder getResponseBuilder() {
        
        onChanged();
        return getResponseFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public ResponseMessageOrBuilder getResponseOrBuilder() {
        if (responseBuilder_ != null) {
          return responseBuilder_.getMessageOrBuilder();
        } else {
          return response_ == null ?
              ResponseMessage.getDefaultInstance() : response_;
        }
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ResponseMessage, ResponseMessage.Builder, ResponseMessageOrBuilder>
          getResponseFieldBuilder() {
        if (responseBuilder_ == null) {
          responseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ResponseMessage, ResponseMessage.Builder, ResponseMessageOrBuilder>(
                  getResponse(),
                  getParentForChildren(),
                  isClean());
          response_ = null;
        }
        return responseBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ControlRsp)
    }

    // @@protoc_insertion_point(class_scope:ControlRsp)
    private static final ControlRsp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ControlRsp();
    }

    public static ControlRsp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ControlRsp>
        PARSER = new com.google.protobuf.AbstractParser<ControlRsp>() {
      public ControlRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ControlRsp(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ControlRsp> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<ControlRsp> getParserForType() {
      return PARSER;
    }

    public ControlRsp getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DeviceStateInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:DeviceStateInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string deviceCode = 1;</code>
     */
    String getDeviceCode();
    /**
     * <code>string deviceCode = 1;</code>
     */
    com.google.protobuf.ByteString
        getDeviceCodeBytes();

    /**
     * <code>.DeviceState deviceState = 2;</code>
     */
    int getDeviceStateValue();
    /**
     * <code>.DeviceState deviceState = 2;</code>
     */
    DeviceState getDeviceState();
  }
  /**
   * Protobuf type {@code DeviceStateInfo}
   */
  public  static final class DeviceStateInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:DeviceStateInfo)
      DeviceStateInfoOrBuilder {
    // Use DeviceStateInfo.newBuilder() to construct.
    private DeviceStateInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DeviceStateInfo() {
      deviceCode_ = "";
      deviceState_ = 0;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private DeviceStateInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              deviceCode_ = s;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              deviceState_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MessageProtobuf.internal_static_DeviceStateInfo_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MessageProtobuf.internal_static_DeviceStateInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              DeviceStateInfo.class, Builder.class);
    }

    public static final int DEVICECODE_FIELD_NUMBER = 1;
    private volatile Object deviceCode_;
    /**
     * <code>string deviceCode = 1;</code>
     */
    public String getDeviceCode() {
      Object ref = deviceCode_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        deviceCode_ = s;
        return s;
      }
    }
    /**
     * <code>string deviceCode = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceCodeBytes() {
      Object ref = deviceCode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        deviceCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEVICESTATE_FIELD_NUMBER = 2;
    private int deviceState_;
    /**
     * <code>.DeviceState deviceState = 2;</code>
     */
    public int getDeviceStateValue() {
      return deviceState_;
    }
    /**
     * <code>.DeviceState deviceState = 2;</code>
     */
    public DeviceState getDeviceState() {
      DeviceState result = DeviceState.valueOf(deviceState_);
      return result == null ? DeviceState.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getDeviceCodeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, deviceCode_);
      }
      if (deviceState_ != DeviceState.DEVICE_OFF.getNumber()) {
        output.writeEnum(2, deviceState_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getDeviceCodeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, deviceCode_);
      }
      if (deviceState_ != DeviceState.DEVICE_OFF.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, deviceState_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof DeviceStateInfo)) {
        return super.equals(obj);
      }
      DeviceStateInfo other = (DeviceStateInfo) obj;

      boolean result = true;
      result = result && getDeviceCode()
          .equals(other.getDeviceCode());
      result = result && deviceState_ == other.deviceState_;
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DEVICECODE_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceCode().hashCode();
      hash = (37 * hash) + DEVICESTATE_FIELD_NUMBER;
      hash = (53 * hash) + deviceState_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static DeviceStateInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DeviceStateInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DeviceStateInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DeviceStateInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DeviceStateInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static DeviceStateInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static DeviceStateInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static DeviceStateInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static DeviceStateInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static DeviceStateInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(DeviceStateInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DeviceStateInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:DeviceStateInfo)
        DeviceStateInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MessageProtobuf.internal_static_DeviceStateInfo_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MessageProtobuf.internal_static_DeviceStateInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                DeviceStateInfo.class, Builder.class);
      }

      // Construct using shenzhen.teamway.pdg.protobuf.MessageProtobuf.DeviceStateInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        deviceCode_ = "";

        deviceState_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MessageProtobuf.internal_static_DeviceStateInfo_descriptor;
      }

      public DeviceStateInfo getDefaultInstanceForType() {
        return DeviceStateInfo.getDefaultInstance();
      }

      public DeviceStateInfo build() {
        DeviceStateInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public DeviceStateInfo buildPartial() {
        DeviceStateInfo result = new DeviceStateInfo(this);
        result.deviceCode_ = deviceCode_;
        result.deviceState_ = deviceState_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DeviceStateInfo) {
          return mergeFrom((DeviceStateInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(DeviceStateInfo other) {
        if (other == DeviceStateInfo.getDefaultInstance()) return this;
        if (!other.getDeviceCode().isEmpty()) {
          deviceCode_ = other.deviceCode_;
          onChanged();
        }
        if (other.deviceState_ != 0) {
          setDeviceStateValue(other.getDeviceStateValue());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        DeviceStateInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (DeviceStateInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object deviceCode_ = "";
      /**
       * <code>string deviceCode = 1;</code>
       */
      public String getDeviceCode() {
        Object ref = deviceCode_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          deviceCode_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string deviceCode = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceCodeBytes() {
        Object ref = deviceCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          deviceCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string deviceCode = 1;</code>
       */
      public Builder setDeviceCode(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        deviceCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string deviceCode = 1;</code>
       */
      public Builder clearDeviceCode() {
        
        deviceCode_ = getDefaultInstance().getDeviceCode();
        onChanged();
        return this;
      }
      /**
       * <code>string deviceCode = 1;</code>
       */
      public Builder setDeviceCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        deviceCode_ = value;
        onChanged();
        return this;
      }

      private int deviceState_ = 0;
      /**
       * <code>.DeviceState deviceState = 2;</code>
       */
      public int getDeviceStateValue() {
        return deviceState_;
      }
      /**
       * <code>.DeviceState deviceState = 2;</code>
       */
      public Builder setDeviceStateValue(int value) {
        deviceState_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.DeviceState deviceState = 2;</code>
       */
      public DeviceState getDeviceState() {
        DeviceState result = DeviceState.valueOf(deviceState_);
        return result == null ? DeviceState.UNRECOGNIZED : result;
      }
      /**
       * <code>.DeviceState deviceState = 2;</code>
       */
      public Builder setDeviceState(DeviceState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        deviceState_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.DeviceState deviceState = 2;</code>
       */
      public Builder clearDeviceState() {
        
        deviceState_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:DeviceStateInfo)
    }

    // @@protoc_insertion_point(class_scope:DeviceStateInfo)
    private static final DeviceStateInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new DeviceStateInfo();
    }

    public static DeviceStateInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DeviceStateInfo>
        PARSER = new com.google.protobuf.AbstractParser<DeviceStateInfo>() {
      public DeviceStateInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DeviceStateInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DeviceStateInfo> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<DeviceStateInfo> getParserForType() {
      return PARSER;
    }

    public DeviceStateInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ReportDeviceStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ReportDeviceState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 设备数
     * </pre>
     *
     * <code>int32 deviceCount = 1;</code>
     */
    int getDeviceCount();

    /**
     * <pre>
     * 设备状态列表
     * </pre>
     *
     * <code>repeated .DeviceStateInfo deviceStateArray = 2;</code>
     */
    java.util.List<DeviceStateInfo>
        getDeviceStateArrayList();
    /**
     * <pre>
     * 设备状态列表
     * </pre>
     *
     * <code>repeated .DeviceStateInfo deviceStateArray = 2;</code>
     */
    DeviceStateInfo getDeviceStateArray(int index);
    /**
     * <pre>
     * 设备状态列表
     * </pre>
     *
     * <code>repeated .DeviceStateInfo deviceStateArray = 2;</code>
     */
    int getDeviceStateArrayCount();
    /**
     * <pre>
     * 设备状态列表
     * </pre>
     *
     * <code>repeated .DeviceStateInfo deviceStateArray = 2;</code>
     */
    java.util.List<? extends DeviceStateInfoOrBuilder>
        getDeviceStateArrayOrBuilderList();
    /**
     * <pre>
     * 设备状态列表
     * </pre>
     *
     * <code>repeated .DeviceStateInfo deviceStateArray = 2;</code>
     */
    DeviceStateInfoOrBuilder getDeviceStateArrayOrBuilder(
            int index);
  }
  /**
   * Protobuf type {@code ReportDeviceState}
   */
  public  static final class ReportDeviceState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ReportDeviceState)
      ReportDeviceStateOrBuilder {
    // Use ReportDeviceState.newBuilder() to construct.
    private ReportDeviceState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ReportDeviceState() {
      deviceCount_ = 0;
      deviceStateArray_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ReportDeviceState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              deviceCount_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                deviceStateArray_ = new java.util.ArrayList<DeviceStateInfo>();
                mutable_bitField0_ |= 0x00000002;
              }
              deviceStateArray_.add(
                  input.readMessage(DeviceStateInfo.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          deviceStateArray_ = java.util.Collections.unmodifiableList(deviceStateArray_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MessageProtobuf.internal_static_ReportDeviceState_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MessageProtobuf.internal_static_ReportDeviceState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ReportDeviceState.class, Builder.class);
    }

    private int bitField0_;
    public static final int DEVICECOUNT_FIELD_NUMBER = 1;
    private int deviceCount_;
    /**
     * <pre>
     * 设备数
     * </pre>
     *
     * <code>int32 deviceCount = 1;</code>
     */
    public int getDeviceCount() {
      return deviceCount_;
    }

    public static final int DEVICESTATEARRAY_FIELD_NUMBER = 2;
    private java.util.List<DeviceStateInfo> deviceStateArray_;
    /**
     * <pre>
     * 设备状态列表
     * </pre>
     *
     * <code>repeated .DeviceStateInfo deviceStateArray = 2;</code>
     */
    public java.util.List<DeviceStateInfo> getDeviceStateArrayList() {
      return deviceStateArray_;
    }
    /**
     * <pre>
     * 设备状态列表
     * </pre>
     *
     * <code>repeated .DeviceStateInfo deviceStateArray = 2;</code>
     */
    public java.util.List<? extends DeviceStateInfoOrBuilder>
        getDeviceStateArrayOrBuilderList() {
      return deviceStateArray_;
    }
    /**
     * <pre>
     * 设备状态列表
     * </pre>
     *
     * <code>repeated .DeviceStateInfo deviceStateArray = 2;</code>
     */
    public int getDeviceStateArrayCount() {
      return deviceStateArray_.size();
    }
    /**
     * <pre>
     * 设备状态列表
     * </pre>
     *
     * <code>repeated .DeviceStateInfo deviceStateArray = 2;</code>
     */
    public DeviceStateInfo getDeviceStateArray(int index) {
      return deviceStateArray_.get(index);
    }
    /**
     * <pre>
     * 设备状态列表
     * </pre>
     *
     * <code>repeated .DeviceStateInfo deviceStateArray = 2;</code>
     */
    public DeviceStateInfoOrBuilder getDeviceStateArrayOrBuilder(
        int index) {
      return deviceStateArray_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (deviceCount_ != 0) {
        output.writeInt32(1, deviceCount_);
      }
      for (int i = 0; i < deviceStateArray_.size(); i++) {
        output.writeMessage(2, deviceStateArray_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (deviceCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, deviceCount_);
      }
      for (int i = 0; i < deviceStateArray_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, deviceStateArray_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ReportDeviceState)) {
        return super.equals(obj);
      }
      ReportDeviceState other = (ReportDeviceState) obj;

      boolean result = true;
      result = result && (getDeviceCount()
          == other.getDeviceCount());
      result = result && getDeviceStateArrayList()
          .equals(other.getDeviceStateArrayList());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DEVICECOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceCount();
      if (getDeviceStateArrayCount() > 0) {
        hash = (37 * hash) + DEVICESTATEARRAY_FIELD_NUMBER;
        hash = (53 * hash) + getDeviceStateArrayList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ReportDeviceState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ReportDeviceState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ReportDeviceState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ReportDeviceState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ReportDeviceState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ReportDeviceState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ReportDeviceState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ReportDeviceState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ReportDeviceState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ReportDeviceState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ReportDeviceState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ReportDeviceState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ReportDeviceState)
        ReportDeviceStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MessageProtobuf.internal_static_ReportDeviceState_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MessageProtobuf.internal_static_ReportDeviceState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ReportDeviceState.class, Builder.class);
      }

      // Construct using shenzhen.teamway.pdg.protobuf.MessageProtobuf.ReportDeviceState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDeviceStateArrayFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        deviceCount_ = 0;

        if (deviceStateArrayBuilder_ == null) {
          deviceStateArray_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          deviceStateArrayBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MessageProtobuf.internal_static_ReportDeviceState_descriptor;
      }

      public ReportDeviceState getDefaultInstanceForType() {
        return ReportDeviceState.getDefaultInstance();
      }

      public ReportDeviceState build() {
        ReportDeviceState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ReportDeviceState buildPartial() {
        ReportDeviceState result = new ReportDeviceState(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.deviceCount_ = deviceCount_;
        if (deviceStateArrayBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            deviceStateArray_ = java.util.Collections.unmodifiableList(deviceStateArray_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.deviceStateArray_ = deviceStateArray_;
        } else {
          result.deviceStateArray_ = deviceStateArrayBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ReportDeviceState) {
          return mergeFrom((ReportDeviceState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ReportDeviceState other) {
        if (other == ReportDeviceState.getDefaultInstance()) return this;
        if (other.getDeviceCount() != 0) {
          setDeviceCount(other.getDeviceCount());
        }
        if (deviceStateArrayBuilder_ == null) {
          if (!other.deviceStateArray_.isEmpty()) {
            if (deviceStateArray_.isEmpty()) {
              deviceStateArray_ = other.deviceStateArray_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureDeviceStateArrayIsMutable();
              deviceStateArray_.addAll(other.deviceStateArray_);
            }
            onChanged();
          }
        } else {
          if (!other.deviceStateArray_.isEmpty()) {
            if (deviceStateArrayBuilder_.isEmpty()) {
              deviceStateArrayBuilder_.dispose();
              deviceStateArrayBuilder_ = null;
              deviceStateArray_ = other.deviceStateArray_;
              bitField0_ = (bitField0_ & ~0x00000002);
              deviceStateArrayBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDeviceStateArrayFieldBuilder() : null;
            } else {
              deviceStateArrayBuilder_.addAllMessages(other.deviceStateArray_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ReportDeviceState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ReportDeviceState) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int deviceCount_ ;
      /**
       * <pre>
       * 设备数
       * </pre>
       *
       * <code>int32 deviceCount = 1;</code>
       */
      public int getDeviceCount() {
        return deviceCount_;
      }
      /**
       * <pre>
       * 设备数
       * </pre>
       *
       * <code>int32 deviceCount = 1;</code>
       */
      public Builder setDeviceCount(int value) {
        
        deviceCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 设备数
       * </pre>
       *
       * <code>int32 deviceCount = 1;</code>
       */
      public Builder clearDeviceCount() {
        
        deviceCount_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<DeviceStateInfo> deviceStateArray_ =
        java.util.Collections.emptyList();
      private void ensureDeviceStateArrayIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          deviceStateArray_ = new java.util.ArrayList<DeviceStateInfo>(deviceStateArray_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          DeviceStateInfo, DeviceStateInfo.Builder, DeviceStateInfoOrBuilder> deviceStateArrayBuilder_;

      /**
       * <pre>
       * 设备状态列表
       * </pre>
       *
       * <code>repeated .DeviceStateInfo deviceStateArray = 2;</code>
       */
      public java.util.List<DeviceStateInfo> getDeviceStateArrayList() {
        if (deviceStateArrayBuilder_ == null) {
          return java.util.Collections.unmodifiableList(deviceStateArray_);
        } else {
          return deviceStateArrayBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 设备状态列表
       * </pre>
       *
       * <code>repeated .DeviceStateInfo deviceStateArray = 2;</code>
       */
      public int getDeviceStateArrayCount() {
        if (deviceStateArrayBuilder_ == null) {
          return deviceStateArray_.size();
        } else {
          return deviceStateArrayBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 设备状态列表
       * </pre>
       *
       * <code>repeated .DeviceStateInfo deviceStateArray = 2;</code>
       */
      public DeviceStateInfo getDeviceStateArray(int index) {
        if (deviceStateArrayBuilder_ == null) {
          return deviceStateArray_.get(index);
        } else {
          return deviceStateArrayBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 设备状态列表
       * </pre>
       *
       * <code>repeated .DeviceStateInfo deviceStateArray = 2;</code>
       */
      public Builder setDeviceStateArray(
          int index, DeviceStateInfo value) {
        if (deviceStateArrayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDeviceStateArrayIsMutable();
          deviceStateArray_.set(index, value);
          onChanged();
        } else {
          deviceStateArrayBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 设备状态列表
       * </pre>
       *
       * <code>repeated .DeviceStateInfo deviceStateArray = 2;</code>
       */
      public Builder setDeviceStateArray(
          int index, DeviceStateInfo.Builder builderForValue) {
        if (deviceStateArrayBuilder_ == null) {
          ensureDeviceStateArrayIsMutable();
          deviceStateArray_.set(index, builderForValue.build());
          onChanged();
        } else {
          deviceStateArrayBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 设备状态列表
       * </pre>
       *
       * <code>repeated .DeviceStateInfo deviceStateArray = 2;</code>
       */
      public Builder addDeviceStateArray(DeviceStateInfo value) {
        if (deviceStateArrayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDeviceStateArrayIsMutable();
          deviceStateArray_.add(value);
          onChanged();
        } else {
          deviceStateArrayBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 设备状态列表
       * </pre>
       *
       * <code>repeated .DeviceStateInfo deviceStateArray = 2;</code>
       */
      public Builder addDeviceStateArray(
          int index, DeviceStateInfo value) {
        if (deviceStateArrayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDeviceStateArrayIsMutable();
          deviceStateArray_.add(index, value);
          onChanged();
        } else {
          deviceStateArrayBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 设备状态列表
       * </pre>
       *
       * <code>repeated .DeviceStateInfo deviceStateArray = 2;</code>
       */
      public Builder addDeviceStateArray(
          DeviceStateInfo.Builder builderForValue) {
        if (deviceStateArrayBuilder_ == null) {
          ensureDeviceStateArrayIsMutable();
          deviceStateArray_.add(builderForValue.build());
          onChanged();
        } else {
          deviceStateArrayBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 设备状态列表
       * </pre>
       *
       * <code>repeated .DeviceStateInfo deviceStateArray = 2;</code>
       */
      public Builder addDeviceStateArray(
          int index, DeviceStateInfo.Builder builderForValue) {
        if (deviceStateArrayBuilder_ == null) {
          ensureDeviceStateArrayIsMutable();
          deviceStateArray_.add(index, builderForValue.build());
          onChanged();
        } else {
          deviceStateArrayBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 设备状态列表
       * </pre>
       *
       * <code>repeated .DeviceStateInfo deviceStateArray = 2;</code>
       */
      public Builder addAllDeviceStateArray(
          Iterable<? extends DeviceStateInfo> values) {
        if (deviceStateArrayBuilder_ == null) {
          ensureDeviceStateArrayIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, deviceStateArray_);
          onChanged();
        } else {
          deviceStateArrayBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 设备状态列表
       * </pre>
       *
       * <code>repeated .DeviceStateInfo deviceStateArray = 2;</code>
       */
      public Builder clearDeviceStateArray() {
        if (deviceStateArrayBuilder_ == null) {
          deviceStateArray_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          deviceStateArrayBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 设备状态列表
       * </pre>
       *
       * <code>repeated .DeviceStateInfo deviceStateArray = 2;</code>
       */
      public Builder removeDeviceStateArray(int index) {
        if (deviceStateArrayBuilder_ == null) {
          ensureDeviceStateArrayIsMutable();
          deviceStateArray_.remove(index);
          onChanged();
        } else {
          deviceStateArrayBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 设备状态列表
       * </pre>
       *
       * <code>repeated .DeviceStateInfo deviceStateArray = 2;</code>
       */
      public DeviceStateInfo.Builder getDeviceStateArrayBuilder(
          int index) {
        return getDeviceStateArrayFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 设备状态列表
       * </pre>
       *
       * <code>repeated .DeviceStateInfo deviceStateArray = 2;</code>
       */
      public DeviceStateInfoOrBuilder getDeviceStateArrayOrBuilder(
          int index) {
        if (deviceStateArrayBuilder_ == null) {
          return deviceStateArray_.get(index);  } else {
          return deviceStateArrayBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 设备状态列表
       * </pre>
       *
       * <code>repeated .DeviceStateInfo deviceStateArray = 2;</code>
       */
      public java.util.List<? extends DeviceStateInfoOrBuilder>
           getDeviceStateArrayOrBuilderList() {
        if (deviceStateArrayBuilder_ != null) {
          return deviceStateArrayBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(deviceStateArray_);
        }
      }
      /**
       * <pre>
       * 设备状态列表
       * </pre>
       *
       * <code>repeated .DeviceStateInfo deviceStateArray = 2;</code>
       */
      public DeviceStateInfo.Builder addDeviceStateArrayBuilder() {
        return getDeviceStateArrayFieldBuilder().addBuilder(
            DeviceStateInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * 设备状态列表
       * </pre>
       *
       * <code>repeated .DeviceStateInfo deviceStateArray = 2;</code>
       */
      public DeviceStateInfo.Builder addDeviceStateArrayBuilder(
          int index) {
        return getDeviceStateArrayFieldBuilder().addBuilder(
            index, DeviceStateInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * 设备状态列表
       * </pre>
       *
       * <code>repeated .DeviceStateInfo deviceStateArray = 2;</code>
       */
      public java.util.List<DeviceStateInfo.Builder>
           getDeviceStateArrayBuilderList() {
        return getDeviceStateArrayFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          DeviceStateInfo, DeviceStateInfo.Builder, DeviceStateInfoOrBuilder>
          getDeviceStateArrayFieldBuilder() {
        if (deviceStateArrayBuilder_ == null) {
          deviceStateArrayBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              DeviceStateInfo, DeviceStateInfo.Builder, DeviceStateInfoOrBuilder>(
                  deviceStateArray_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          deviceStateArray_ = null;
        }
        return deviceStateArrayBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ReportDeviceState)
    }

    // @@protoc_insertion_point(class_scope:ReportDeviceState)
    private static final ReportDeviceState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ReportDeviceState();
    }

    public static ReportDeviceState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ReportDeviceState>
        PARSER = new com.google.protobuf.AbstractParser<ReportDeviceState>() {
      public ReportDeviceState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ReportDeviceState(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ReportDeviceState> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<ReportDeviceState> getParserForType() {
      return PARSER;
    }

    public ReportDeviceState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ReportDeviceStateRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ReportDeviceStateRsp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    boolean hasResponse();
    /**
     * <pre>
     * 结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    ResponseMessage getResponse();
    /**
     * <pre>
     * 结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    ResponseMessageOrBuilder getResponseOrBuilder();
  }
  /**
   * Protobuf type {@code ReportDeviceStateRsp}
   */
  public  static final class ReportDeviceStateRsp extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ReportDeviceStateRsp)
      ReportDeviceStateRspOrBuilder {
    // Use ReportDeviceStateRsp.newBuilder() to construct.
    private ReportDeviceStateRsp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ReportDeviceStateRsp() {
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ReportDeviceStateRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              ResponseMessage.Builder subBuilder = null;
              if (response_ != null) {
                subBuilder = response_.toBuilder();
              }
              response_ = input.readMessage(ResponseMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(response_);
                response_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MessageProtobuf.internal_static_ReportDeviceStateRsp_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MessageProtobuf.internal_static_ReportDeviceStateRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ReportDeviceStateRsp.class, Builder.class);
    }

    public static final int RESPONSE_FIELD_NUMBER = 1;
    private ResponseMessage response_;
    /**
     * <pre>
     * 结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    public boolean hasResponse() {
      return response_ != null;
    }
    /**
     * <pre>
     * 结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    public ResponseMessage getResponse() {
      return response_ == null ? ResponseMessage.getDefaultInstance() : response_;
    }
    /**
     * <pre>
     * 结果
     * </pre>
     *
     * <code>.ResponseMessage response = 1;</code>
     */
    public ResponseMessageOrBuilder getResponseOrBuilder() {
      return getResponse();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (response_ != null) {
        output.writeMessage(1, getResponse());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (response_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResponse());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ReportDeviceStateRsp)) {
        return super.equals(obj);
      }
      ReportDeviceStateRsp other = (ReportDeviceStateRsp) obj;

      boolean result = true;
      result = result && (hasResponse() == other.hasResponse());
      if (hasResponse()) {
        result = result && getResponse()
            .equals(other.getResponse());
      }
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResponse()) {
        hash = (37 * hash) + RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + getResponse().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ReportDeviceStateRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ReportDeviceStateRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ReportDeviceStateRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ReportDeviceStateRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ReportDeviceStateRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ReportDeviceStateRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ReportDeviceStateRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ReportDeviceStateRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ReportDeviceStateRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ReportDeviceStateRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ReportDeviceStateRsp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ReportDeviceStateRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ReportDeviceStateRsp)
        ReportDeviceStateRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MessageProtobuf.internal_static_ReportDeviceStateRsp_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MessageProtobuf.internal_static_ReportDeviceStateRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ReportDeviceStateRsp.class, Builder.class);
      }

      // Construct using shenzhen.teamway.pdg.protobuf.MessageProtobuf.ReportDeviceStateRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (responseBuilder_ == null) {
          response_ = null;
        } else {
          response_ = null;
          responseBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MessageProtobuf.internal_static_ReportDeviceStateRsp_descriptor;
      }

      public ReportDeviceStateRsp getDefaultInstanceForType() {
        return ReportDeviceStateRsp.getDefaultInstance();
      }

      public ReportDeviceStateRsp build() {
        ReportDeviceStateRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ReportDeviceStateRsp buildPartial() {
        ReportDeviceStateRsp result = new ReportDeviceStateRsp(this);
        if (responseBuilder_ == null) {
          result.response_ = response_;
        } else {
          result.response_ = responseBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ReportDeviceStateRsp) {
          return mergeFrom((ReportDeviceStateRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ReportDeviceStateRsp other) {
        if (other == ReportDeviceStateRsp.getDefaultInstance()) return this;
        if (other.hasResponse()) {
          mergeResponse(other.getResponse());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ReportDeviceStateRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ReportDeviceStateRsp) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private ResponseMessage response_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          ResponseMessage, ResponseMessage.Builder, ResponseMessageOrBuilder> responseBuilder_;
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public boolean hasResponse() {
        return responseBuilder_ != null || response_ != null;
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public ResponseMessage getResponse() {
        if (responseBuilder_ == null) {
          return response_ == null ? ResponseMessage.getDefaultInstance() : response_;
        } else {
          return responseBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public Builder setResponse(ResponseMessage value) {
        if (responseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          response_ = value;
          onChanged();
        } else {
          responseBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public Builder setResponse(
          ResponseMessage.Builder builderForValue) {
        if (responseBuilder_ == null) {
          response_ = builderForValue.build();
          onChanged();
        } else {
          responseBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public Builder mergeResponse(ResponseMessage value) {
        if (responseBuilder_ == null) {
          if (response_ != null) {
            response_ =
              ResponseMessage.newBuilder(response_).mergeFrom(value).buildPartial();
          } else {
            response_ = value;
          }
          onChanged();
        } else {
          responseBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public Builder clearResponse() {
        if (responseBuilder_ == null) {
          response_ = null;
          onChanged();
        } else {
          response_ = null;
          responseBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public ResponseMessage.Builder getResponseBuilder() {
        
        onChanged();
        return getResponseFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      public ResponseMessageOrBuilder getResponseOrBuilder() {
        if (responseBuilder_ != null) {
          return responseBuilder_.getMessageOrBuilder();
        } else {
          return response_ == null ?
              ResponseMessage.getDefaultInstance() : response_;
        }
      }
      /**
       * <pre>
       * 结果
       * </pre>
       *
       * <code>.ResponseMessage response = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ResponseMessage, ResponseMessage.Builder, ResponseMessageOrBuilder>
          getResponseFieldBuilder() {
        if (responseBuilder_ == null) {
          responseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ResponseMessage, ResponseMessage.Builder, ResponseMessageOrBuilder>(
                  getResponse(),
                  getParentForChildren(),
                  isClean());
          response_ = null;
        }
        return responseBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ReportDeviceStateRsp)
    }

    // @@protoc_insertion_point(class_scope:ReportDeviceStateRsp)
    private static final ReportDeviceStateRsp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ReportDeviceStateRsp();
    }

    public static ReportDeviceStateRsp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ReportDeviceStateRsp>
        PARSER = new com.google.protobuf.AbstractParser<ReportDeviceStateRsp>() {
      public ReportDeviceStateRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ReportDeviceStateRsp(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ReportDeviceStateRsp> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<ReportDeviceStateRsp> getParserForType() {
      return PARSER;
    }

    public ReportDeviceStateRsp getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PDGMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PDGMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PDGHeader_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PDGHeader_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ResponseMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ResponseMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Register_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Register_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RegisterRsp_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RegisterRsp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Heartbeat_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Heartbeat_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_HeartbeatRsp_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_HeartbeatRsp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ReportSensorData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ReportSensorData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ReportSensorDataRsp_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ReportSensorDataRsp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ReportAlarm_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ReportAlarm_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ReportAlarmRsp_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ReportAlarmRsp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SensorDeviceInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SensorDeviceInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Catalog_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Catalog_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CatalogRsp_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CatalogRsp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_UpdateTime_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_UpdateTime_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_UpdateTimeRsp_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_UpdateTimeRsp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Control_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Control_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ControlRsp_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ControlRsp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DeviceStateInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DeviceStateInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ReportDeviceState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ReportDeviceState_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ReportDeviceStateRsp_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ReportDeviceStateRsp_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\023message.v0.23.proto\"\256\005\n\nPDGMessage\022\035\n\t" +
      "pDGHeader\030\001 \001(\0132\n.PDGHeader\022\035\n\010register\030" +
      "\002 \001(\0132\t.RegisterH\000\022#\n\013registerRsp\030\003 \001(\0132" +
      "\014.RegisterRspH\000\022\037\n\theartbeat\030\004 \001(\0132\n.Hea" +
      "rtbeatH\000\022%\n\014HeartbeatRsp\030\005 \001(\0132\r.Heartbe" +
      "atRspH\000\022-\n\020reportSensorData\030\006 \001(\0132\021.Repo" +
      "rtSensorDataH\000\0223\n\023ReportSensorDataRsp\030\007 " +
      "\001(\0132\024.ReportSensorDataRspH\000\022#\n\013reportAla" +
      "rm\030\010 \001(\0132\014.ReportAlarmH\000\022)\n\016reportAlarmR" +
      "sp\030\t \001(\0132\017.ReportAlarmRspH\000\022\033\n\007catalog\030\n",
      " \001(\0132\010.CatalogH\000\022!\n\ncatalogRsp\030\013 \001(\0132\013.C" +
      "atalogRspH\000\022!\n\nupdateTime\030\014 \001(\0132\013.Update" +
      "TimeH\000\022\'\n\rupdateTimeRsp\030\r \001(\0132\016.UpdateTi" +
      "meRspH\000\022\033\n\007control\030\016 \001(\0132\010.ControlH\000\022!\n\n" +
      "controlRsp\030\017 \001(\0132\013.ControlRspH\000\022/\n\021repor" +
      "tDeviceState\030\020 \001(\0132\022.ReportDeviceStateH\000" +
      "\0225\n\024reportDeviceStateRsp\030\021 \001(\0132\025.ReportD" +
      "eviceStateRspH\000B\r\n\013MessageBody\"\200\001\n\tPDGHe" +
      "ader\022\017\n\007version\030\001 \001(\005\022\023\n\013stationCode\030\002 \001" +
      "(\t\022\017\n\007session\030\003 \001(\t\022\013\n\003seq\030\004 \001(\005\022\035\n\007comm",
      "and\030\005 \001(\0162\014.CommandType\022\020\n\010fromAddr\030\006 \001(" +
      "\t\"2\n\017ResponseMessage\022\016\n\006result\030\001 \001(\010\022\017\n\007" +
      "message\030\002 \001(\t\"\034\n\010Register\022\020\n\010password\030\001 " +
      "\001(\t\"1\n\013RegisterRsp\022\"\n\010response\030\001 \001(\0132\020.R" +
      "esponseMessage\"\035\n\tHeartbeat\022\020\n\010dateTime\030" +
      "\001 \001(\t\"\016\n\014HeartbeatRsp\"I\n\020ReportSensorDat" +
      "a\022\022\n\ndeviceCode\030\001 \001(\t\022\022\n\nreportTime\030\002 \001(" +
      "\t\022\r\n\005value\030\003 \001(\001\"9\n\023ReportSensorDataRsp\022" +
      "\"\n\010response\030\001 \001(\0132\020.ResponseMessage\"\245\001\n\013" +
      "ReportAlarm\022\022\n\ndeviceCode\030\001 \001(\t\022\022\n\nrepor",
      "tTime\030\002 \001(\t\022\035\n\talarmType\030\003 \001(\0162\n.AlarmTy" +
      "pe\022\037\n\nalarmState\030\004 \001(\0162\013.AlarmState\022\037\n\na" +
      "larmLevel\030\005 \001(\0162\013.AlarmLevel\022\r\n\005value\030\006 " +
      "\001(\001\"4\n\016ReportAlarmRsp\022\"\n\010response\030\001 \001(\0132" +
      "\020.ResponseMessage\"N\n\020SensorDeviceInfo\022\022\n" +
      "\ndeviceCode\030\001 \001(\t\022\022\n\ndeviceName\030\002 \001(\t\022\022\n" +
      "\nparentCode\030\003 \001(\t\"\225\001\n\007Catalog\022\023\n\013station" +
      "Code\030\001 \001(\t\022\023\n\013stationName\030\002 \001(\t\022\021\n\tlongi" +
      "tude\030\003 \001(\002\022\020\n\010latitude\030\004 \001(\002\022\024\n\014SensorSu" +
      "bNum\030\005 \001(\005\022%\n\ndeviceInfo\030\006 \003(\0132\021.SensorD",
      "eviceInfo\"0\n\nCatalogRsp\022\"\n\010response\030\001 \001(" +
      "\0132\020.ResponseMessage\"\036\n\nUpdateTime\022\020\n\010dat" +
      "eTime\030\001 \001(\t\"#\n\rUpdateTimeRsp\022\022\n\nserverTi" +
      "me\030\001 \001(\t\"?\n\007Control\022\022\n\ndeviceCode\030\001 \001(\t\022" +
      " \n\007command\030\002 \001(\0162\017.ControlCommand\"0\n\nCon" +
      "trolRsp\022\"\n\010response\030\001 \001(\0132\020.ResponseMess" +
      "age\"H\n\017DeviceStateInfo\022\022\n\ndeviceCode\030\001 \001" +
      "(\t\022!\n\013deviceState\030\002 \001(\0162\014.DeviceState\"T\n" +
      "\021ReportDeviceState\022\023\n\013deviceCount\030\001 \001(\005\022" +
      "*\n\020deviceStateArray\030\002 \003(\0132\020.DeviceStateI",
      "nfo\":\n\024ReportDeviceStateRsp\022\"\n\010response\030" +
      "\001 \001(\0132\020.ResponseMessage*\345\002\n\013CommandType\022" +
      "\026\n\022CommandTypeDEFAULT\020\000\022\016\n\010REGISTER\020\241\234\001\022" +
      "\022\n\014REGISTER_RSP\020\242\234\001\022\017\n\tHEARTBEAT\020\243\234\001\022\023\n\r" +
      "HEARTBEAT_RSP\020\244\234\001\022\r\n\007CATALOG\020\245\234\001\022\021\n\013CATA" +
      "LOG_RSP\020\246\234\001\022\024\n\016REPORT_ENVDATA\020\253\234\001\022\030\n\022REP" +
      "ORT_ENVDATA_RSP\020\254\234\001\022\022\n\014REPORT_ALARM\020\255\234\001\022" +
      "\026\n\020REPORT_ALARM_RSP\020\256\234\001\022\r\n\007CONTROL\020\260\234\001\022\021" +
      "\n\013CONTROL_RSP\020\261\234\001\022\021\n\013SYSTEM_TIME\020\263\234\001\022\025\n\017" +
      "SYSTEM_TIME_RSP\020\264\234\001\022\022\n\014DEVICE_STATE\020\265\234\001\022",
      "\026\n\020DEVICE_STATE_RSP\020\266\234\001*\234\001\n\007DevType\022\022\n\016D" +
      "EVTYPEDEFAULT\020\000\022\t\n\005VIDEO\020\001\022\007\n\003ENV\020\002\022\n\n\006A" +
      "SSIST\020\003\022\013\n\007NETWORK\020\004\022\n\n\006SERVER\020\005\022\013\n\007STOR" +
      "AGE\020\007\022\025\n\021PRIMARY_EQUIPMENT\020\010\022\n\n\006REGION\020\t" +
      "\022\t\n\005SPACE\020\n\022\t\n\005OTHER\020c*\220\002\n\rEnvDeviceName" +
      "\022\025\n\021ENVDEVNAMEDEFAULT\020\000\022\017\n\013TEMPERATURE\020\001" +
      "\022\014\n\010HUMIDITY\020\002\022\r\n\tWINDSPEED\020\003\022\020\n\014WATER_D" +
      "ETECT\020\004\022\014\n\010INFRARED\020\005\022\017\n\013DOOR_ACCESS\020\006\022\t" +
      "\n\005SMOKE\020\010\022\007\n\003FAN\020\n\022\024\n\020ELECTRONIC_FENCE\020\016" +
      "\022\010\n\004FIRE\020\017\022\025\n\021PARTIAL_DISCHARGE\020\020\022\007\n\003SF6",
      "\020\025\022\006\n\002O2\020\026\022\t\n\005NOISE\020\027\022\t\n\005SHOCK\020\030\022\027\n\023CONN" +
      "ECT_TEMPERATURE\020\031*@\n\017VideoDeviceName\022\027\n\023" +
      "VIDEODEVNAMEDEFAULT\020\000\022\n\n\006CAMERA\020\001\022\010\n\004DOM" +
      "E\020\002*\\\n\017OtherDeviceName\022\027\n\023OTHERDEVNAMEDE" +
      "FAULT\020\000\022\017\n\013SOUND_ALARM\020\001\022\024\n\020AIR_CONDITIO" +
      "NING\020\002\022\t\n\005LIGHT\020\003*\266\002\n\032PrimaryEquipmentDe" +
      "viceName\022\024\n\020PEDEVNAMEDEFAULT\020\000\022\017\n\013TRANSF" +
      "ORMER\020\001\022\022\n\016PHASE_MODIFIER\020\002\022\023\n\017CIRCUIT_B" +
      "REAKER\020\003\022\030\n\024DISCONNECTING_SWITCH\020\004\022\010\n\004FU" +
      "SE\020\005\022\r\n\tCAPACITOR\020\006\022\023\n\017STORAGE_BATTERY\020\007",
      "\022\013\n\007REACTOR\020\010\022\023\n\017SURGE_ARRESTERS\020\t\022\031\n\025PO" +
      "TENTIAL_TRANSFORMER\020\n\022\027\n\023CURRENT_TRANSFO" +
      "RMER\020\013\022\014\n\010BUS_LINE\020\014\022\020\n\014EARTH_SWITCH\020\r\022\n" +
      "\n\006DYNAMO\020\036*>\n\nAlarmState\022\023\n\017ALARM_ONDEFA" +
      "ULT\020\000\022\014\n\010ALARM_ON\020\001\022\r\n\tALARM_OFF\020\002*K\n\nAl" +
      "armLevel\022\027\n\023ALARM_NORMALDEFAULT\020\000\022\020\n\014ALA" +
      "RM_NORMAL\020\001\022\022\n\016ALARM_CRITICAL\020\002*\331\004\n\tAlar" +
      "mType\022\026\n\022DEVICE_FAILDEFAULT\020\000\022\027\n\023ALMTYPE" +
      "_DEVICE_FAIL\020\001\022\027\n\023ALMTYPE_HIDE_DETECT\020\002\022" +
      "\027\n\023ALMTYPE_LOSS_DETECT\020\003\022\031\n\025ALMTYPE_MOTI",
      "ON_DETECT\020\004\022\025\n\021ALMTYPE_DISK_FULL\020\005\022\026\n\022AL" +
      "MTYPE_DISK_ERROR\020\006\022\027\n\023ALMTYPE_TEMPERATUR" +
      "E\020\007\022\024\n\020ALMTYPE_HUMIDITY\020\010\022\025\n\021ALMTYPE_WIN" +
      "DSPEED\020\n\022\024\n\020ALMTYPE_INFRARED\020\013\022\030\n\024ALMTYP" +
      "E_WATER_DETECT\020\014\022\026\n\022ALMTYPE_DOOR_GUARD\020\r" +
      "\022\017\n\013ALMTYPE_NET\020\016\022\032\n\026ALMTYPE_LINE_DETECT" +
      "ION\020\017\022\034\n\030ALMTYPE_REGION_DETECTION\020\020\022\032\n\026A" +
      "LMTYPE_DEVICE_REFRESH\020\021\022\021\n\rALMTYPE_SMOKE" +
      "\020\024\022\020\n\014ALMTYPE_FIRE\020\025\022\017\n\013ALMTYPE_SF6\020\026\022\016\n" +
      "\nALMTYPE_O2\020\027\022\021\n\rALMTYPE_SOUND\020\030\022\021\n\rALMT",
      "YPE_SHOKE\020\031\022\035\n\031ALMTYPE_PARTIAL_DISCHARGE" +
      "\020\036\022\037\n\033ALMTYPE_CONNECT_TEMPERATURE\020\037*V\n\016C" +
      "ontrolCommand\022\020\n\014COMMAND_NONE\020\000\022\021\n\rDEVIC" +
      "E_REBOOT\020\001\022\016\n\nCONTROL_ON\020\002\022\017\n\013CONTROL_OF" +
      "F\020\003*,\n\013DeviceState\022\016\n\nDEVICE_OFF\020\000\022\r\n\tDE" +
      "VICE_ON\020\001B0\n\035shenzhen.teamway.pdg.protob" +
      "ufB\017MessageProtobufb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_PDGMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_PDGMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PDGMessage_descriptor,
        new String[] { "PDGHeader", "Register", "RegisterRsp", "Heartbeat", "HeartbeatRsp", "ReportSensorData", "ReportSensorDataRsp", "ReportAlarm", "ReportAlarmRsp", "Catalog", "CatalogRsp", "UpdateTime", "UpdateTimeRsp", "Control", "ControlRsp", "ReportDeviceState", "ReportDeviceStateRsp", "MessageBody", });
    internal_static_PDGHeader_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_PDGHeader_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PDGHeader_descriptor,
        new String[] { "Version", "StationCode", "Session", "Seq", "Command", "FromAddr", });
    internal_static_ResponseMessage_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_ResponseMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ResponseMessage_descriptor,
        new String[] { "Result", "Message", });
    internal_static_Register_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_Register_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Register_descriptor,
        new String[] { "Password", });
    internal_static_RegisterRsp_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_RegisterRsp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RegisterRsp_descriptor,
        new String[] { "Response", });
    internal_static_Heartbeat_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_Heartbeat_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Heartbeat_descriptor,
        new String[] { "DateTime", });
    internal_static_HeartbeatRsp_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_HeartbeatRsp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_HeartbeatRsp_descriptor,
        new String[] { });
    internal_static_ReportSensorData_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_ReportSensorData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ReportSensorData_descriptor,
        new String[] { "DeviceCode", "ReportTime", "Value", });
    internal_static_ReportSensorDataRsp_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_ReportSensorDataRsp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ReportSensorDataRsp_descriptor,
        new String[] { "Response", });
    internal_static_ReportAlarm_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_ReportAlarm_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ReportAlarm_descriptor,
        new String[] { "DeviceCode", "ReportTime", "AlarmType", "AlarmState", "AlarmLevel", "Value", });
    internal_static_ReportAlarmRsp_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_ReportAlarmRsp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ReportAlarmRsp_descriptor,
        new String[] { "Response", });
    internal_static_SensorDeviceInfo_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_SensorDeviceInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SensorDeviceInfo_descriptor,
        new String[] { "DeviceCode", "DeviceName", "ParentCode", });
    internal_static_Catalog_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_Catalog_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Catalog_descriptor,
        new String[] { "StationCode", "StationName", "Longitude", "Latitude", "SensorSubNum", "DeviceInfo", });
    internal_static_CatalogRsp_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_CatalogRsp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CatalogRsp_descriptor,
        new String[] { "Response", });
    internal_static_UpdateTime_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_UpdateTime_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_UpdateTime_descriptor,
        new String[] { "DateTime", });
    internal_static_UpdateTimeRsp_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_UpdateTimeRsp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_UpdateTimeRsp_descriptor,
        new String[] { "ServerTime", });
    internal_static_Control_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_Control_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Control_descriptor,
        new String[] { "DeviceCode", "Command", });
    internal_static_ControlRsp_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_ControlRsp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ControlRsp_descriptor,
        new String[] { "Response", });
    internal_static_DeviceStateInfo_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_DeviceStateInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DeviceStateInfo_descriptor,
        new String[] { "DeviceCode", "DeviceState", });
    internal_static_ReportDeviceState_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_ReportDeviceState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ReportDeviceState_descriptor,
        new String[] { "DeviceCount", "DeviceStateArray", });
    internal_static_ReportDeviceStateRsp_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_ReportDeviceStateRsp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ReportDeviceStateRsp_descriptor,
        new String[] { "Response", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
